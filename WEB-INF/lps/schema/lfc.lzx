<library>
<!--
 File: lfc.lzx

 lfc.lzx specifies the interfaces for the LZX language and the for 
 the base LFC runtime libraries.

 Note: We are going to have to generate the lzx.dtd, lzx.rng, lzx.xsd, and lzxdoc.rng
 from this file. 
 * P_LZ_COPYRIGHT_BEGIN ******************************************************
 * Copyright 2001-2008 Laszlo Systems, Inc.  All Rights Reserved.            *
 * Use is subject to license terms.                                          *
 * P_LZ_COPYRIGHT_END ********************************************************
-->


<interface name="Instance" extends="Object">
  <method name="validateClassStructure" final="true"/>
  <method name="initialize" />
  <method name="addProperty" final="true" />
  <method name="nextMethod" final="true"/>
  <method name="constructor" final="true" />
  <method name="hasOwnProperty" final="true" />
  <method name="isPropertyEnumerable" final="true"/>
  <method name="isPrototypeOf" final="true"/>
  <method name="toLocaleString" final="true" />
  <method name="prototype" final="true" allocation="class"/>
  <method name="apply" final="true" allocation="class"/> 
  <method name="call" final="true" allocation="class"/>
</interface>

<interface name="canvas" extends="Instance">
  <attribute name="id" type="ID"/>
  <!--   The oninit script is executed once, after the element's
         children, if any, have been initialized. -->
  <event name="oninit"/>
  <!--  The width of the canvas. -->
  <attribute name="width" type="size" value="500"/>
  <!--  The height of the canvas. -->
  <attribute name="height" type="size" value="400"/>
  <!-- The background color of the canvas. -->
  <attribute name="bgcolor" type="color" value="white"/>
  <!-- The string that is used in the browser window. -->
  <attribute name="title" type="string" value="OpenLaszlo Application"/>
  <!-- The default font for views in this application. -->
  <attribute name="font" type="string" value="lztahoe8"/>
  <!-- The default size for views in this application. -->
  <attribute name="fontsize" type="number" value="8"/>
  <!-- The default font style for views in this application.  The empty string
       is interpreted as 'plain'. -->
  <attribute name="fontstyle" type="string" value="" enum="bold|italic|bold italic|plain||"/>
  <attribute name="layout" type="css"/>
  <!-- If false, disables validation against the schema during compilation -->
  <attribute name="validate" type="boolean" value="true"/>
  <!-- If true, media and data requests are proxied -->
  <attribute name="proxied" type="inheritableBoolean" value="inherit"/>
  <attribute name="proxyurl" type="string"/>
  <!-- If true, enable debugging in the application -->
  <attribute name="debug" type="boolean" value="false"/>
  <!-- If true, enable backtraces in debugger -->
  <attribute name="backtrace" type="boolean" value="false"/>
  <!-- The loader timeout on data requests -->
  <attribute name="dataloadtimeout" type="numberExpression"/>
  <!-- The loader timeout on media requests -->
  <attribute name="medialoadtimeout" type="numberExpression"/>
  <!-- A list of names for libraries that are included in the application. -->
  <attribute name="libraries" type="string" value=""/>
  <!-- If true, compiler will embed fonts into application -->
  <attribute name="embedfonts" type="boolean"  value="true"/>
  <attribute name="version" type="string" value="4.1"/>
  <!-- If true, enable accessibility features -->
  <attribute name="accessible" type="boolean" value="false"/>
  <!-- Set recursion and timeout limits -->
  <attribute name="scriptlimits" type="css" />
  <attribute name="lpsversion" type="string" final="true" />
  <attribute name="lpsrelease" type="string" final="true" />
  <attribute name="lpsbuild" type="string" final="true" />
  <attribute name="lpsbuilddate" type="string" final="true" />
  <attribute name="runtime" type="string" final="true" />

  <containsElements>
    <element>view</element>
    <element>script</element>
    <element>stylesheet</element>
    <element>audio</element>
    <element>resource</element>
    <element>font</element>
    <element>datapointer</element>
    <element>dataset</element>
    <element>debugger</element>
    <element>command</element>
    <element>class</element>
    <element>trait</element>
    <element>include</element>
    <element>library</element>
    <element>layout</element>
    <element>security</element>
    <element>attribute</element>
    <element>event</element>
    <element>method</element>
    <element>setter</element>
    <element>handler</element>
    <element>doc</element>
    <element>node</element>
    <element>splash</element>
    <element>contextmenu</element>
  </containsElements>
</interface>


<interface name="library" extends="canvas">
  <attribute name="href" type="string"/>
  <attribute name="includes" type="string"/>
  <attribute name="proxied" type="inheritableBoolean" value="inherit"/>
  <!-- @keywords deprecated -->
  <attribute name="validate" type="boolean" value="true"/>
</interface>



<interface name="node" extends="Instance">
  <attribute name="id" type="ID"/>
  <attribute name="$lzc$bind_id" type="expression" />
  <!-- The name of a variable that will be set to this object when the
       application is started.  If this element is directly within a @e{canvas}
       or @e{library} element, the global variable and the canvas
       property with this name will be set to this object.  If this
       element is within another object, that object's property with
       this name will be set to this object.
  -->
  <attribute name="$delegates" type="expression"/>
  <attribute name="name" type="token"/>
  <attribute name="$lzc$bind_name" type="expression" />
  <!-- The oninit script is executed once, after the element's
       children, if any, have been initialized. 
  -->
  <event name="oninit"/>
  <event name="ondata"/>
  <event name="onconstruct"/>
  <event name="onclonenumber"/>
  <event name="ondestroy"/>

  <attribute name="initstage" type="string" value="normal" enum="early|normal|late|immediate|defer"/>
  <attribute name="datapath" type="string"/>
  <attribute name="placement" type="string"/>
  <attribute name="ignoreplacement" type="expression"/>
  <attribute name="defaultplacement" type="string"/>
  <attribute name="options" type="css"/>

  <containsElements>
    <element>attribute</element>
    <element>event</element>
    <element>method</element>
    <element>setter</element>
    <element>handler</element>
    <element>doc</element>
    <element>node</element>
    <element>passthrough</element>
  </containsElements>

  <method name="$lzc$set_$classrootdepth"/>
  <method name="$lzc$set_$datapath"/>
  <method name="$lzc$set_$delegates"/>
  <method name="$lzc$set_$refs"/>
  <method name="$lzc$set_data"/>
  <method name="$lzc$set_datapath"/>
  <method name="$lzc$set_id"/>
  <method name="$lzc$set_name"/>
  <method name="$lzc$set_options"/>
  <method name="__LZaddSetter"/>
  <method name="__LZapplyArgs"/>
  <method name="__LZassignClassRoot"/>
  <method name="__LZcallInit"/>
  <method name="__LZclearPreventInit"/>
  <method name="__LZincrementCounter"/>
  <method name="__LZinstantiationDone"/>
  <method name="__LZresolveReferences"/>
  <method name="__LZresolveRefs"/>
  <method name="__LZsetDelegates"/>
  <method name="__LZsetPreventInit"/>
  <method name="__LZsetSetters"/>
  <method name="__LZstoreAttr"/>
  <method name="__LZstoreRefs"/>
  <method name="__LZstyleBindAttribute"/>
  <method name="_dbg_name"/>
  <method name="addToExpectedAttribute"/>
  <method name="animate"/>
  <method name="applyConstraint"/>
  <method name="applyConstraintExpr"/>
  <method name="applyConstraintMethod"/>
  <method name="applyData"/>
  <method name="childOf"/>
  <method name="completeInstantiation"/>
  <method name="construct"/>
  <method name="constructWithArgs"/>
  <method name="createChildren"/>
  <method name="dataBindAttribute"/>
  <method name="defaultSet"/>
  <method name="deleteNode"/>
  <method name="destroy"/>
  <method name="determinePlacement"/>
  <method name="getAttribute"/>
  <method name="getDebugIdentification"/>
  <method name="getExpectedAttribute"/>
  <method name="getOption"/>
  <method name="getUID"/>
  <method name="init"/>
  <method name="initialize"/>
  <method name="lookupSourceLocator"/>
  <method name="makeChild"/>
  <method name="releaseConstraint"/>
  <method name="releaseConstraintMethod"/>
  <method name="searchImmediateSubnodes"/>
  <method name="searchParents"/>
  <method name="searchSubnodes"/>
  <method name="setAttribute" final="true"/>
  <method name="setData"/>
  <method name="setDatapath"/>
  <method name="setExpectedAttribute"/>
  <method name="setOption"/>
  <method name="setProp"/>
  <method name="setSelected" />
  <method name="toString"/>
  <method name="updateData"/>

</interface>

<interface name="view" extends="node">
  <attribute name="opacity" type="number"/>
  <attribute name="bgcolor" type="color"/>
  <attribute name="cursor" type="token"/>
  <attribute name="clickable" type="boolean"/>
  <attribute name="clickregion" type="string"/>
  <attribute name="focustrap" type="boolean"/>
  <attribute name="focusable" type="boolean"/>
  <attribute name="frame" type="numberExpression" value="0"/>
  <attribute name="fgcolor" type="color"/>
  <attribute name="font" type="string"/>
  <attribute name="fontstyle" type="string"/>
  <attribute name="fontsize" type="size"/>
  <attribute name="resource" type="string"/>
  <attribute name="source" type="string" />
  <attribute name="clip" type="boolean" value="false"/>
  <attribute name="align" value="left"  type="string" enum="left|center|right|constraint" />
  <attribute name="valign" type="string" value="top" enum="top|middle|bottom|constraint" />
  <attribute name="layout" type="css"/>
  <attribute name="pixellock" type="boolean" value="false"/>
  <attribute name="proxyurl" type="string"/>
  <attribute name="rotation" type="numberExpression" value="0"/>
  <attribute name="xoffset" type="numberExpression" value="0"/>
  <attribute name="yoffset" type="numberExpression" value="0"/>
  <attribute name="play" type="boolean" value="true"/>
  <attribute name="selectiontype" type="string" enum="none|single|toggle|multi|range"/>
  <attribute name="stretches" type="string" enum="width|height|both"/>
  <attribute name="visible" type="expression" value="true"/>
  <attribute name="visibility" type="string" value="visibility"/>
  <attribute name="width" type="size"/>
  <attribute name="height" type="size"/>
  <attribute name="x" type="numberExpression" value="0"/>
  <attribute name="y" type="numberExpression" value="0"/>
  <attribute name="aaname" type="string"/>
  <attribute name="aaactive" type="boolean"/>
  <attribute name="aadescription" type="string"/>
  <attribute name="aatabindex" type="number"/>
  <attribute name="aasilent" type="boolean"/>
  <attribute name="showhandcursor" type="boolean"/>
  <attribute name="cachebitmap" type="boolean"/>
  <event name="onaddsubresource"/>
  <event name="onaddsubview"/>
  <event name="onbgcolor"/>
  <event name="onblur"/>
  <event name="onclick"/>
  <event name="ondblclick"/>
  <event name="onerror"/>
  <event name="onfocus"/>
  <event name="onframe"/>
  <event name="onheight"/>
  <event name="onimload"/>
  <event name="onkeydown"/>
  <event name="onkeyup"/>
  <event name="onlastframe"/>
  <event name="onload"/>
  <event name="onloadratio"/>
  <event name="onframesloadratio"/>
  <event name="onmousedown"/>
  <event name="onmouseout"/>
  <event name="onmouseover"/>
  <event name="onmousetrackover"/>
  <event name="onmousetrackup"/>
  <event name="onmousetrackout"/>
  <event name="onmouseup"/>
  <event name="onmouseupoutside"/>
  <event name="onmousedragin"/>
  <event name="onmousedragout"/>
  <event name="onopacity"/>
  <event name="onplay"/>
  <event name="onremovesubview"/>
  <event name="onresource"/>
  <event name="onresourceheight"/>
  <event name="onresourcewidth"/>
  <event name="onrotation"/>
  <event name="onselect"/>
  <event name="onstop"/>
  <event name="ontimeout"/>
  <event name="ontotalframes"/>
  <event name="onunstretchedheight"/>
  <event name="onunstretchedwidth"/>
  <event name="onvisibility"/>
  <event name="onvisible"/>
  <event name="onwidth"/>
  <event name="onx"/>
  <event name="onxoffset"/>
  <event name="ony"/>
  <event name="onyoffset"/>
  
  <containsElements>
    <element>dataselectionmanager</element>
    <element>selectionmanager</element>
    <element>text</element>
    <element>inputtext</element>
    <element>node</element>
    <element>contextmenu</element>
  </containsElements>

  <method name="$lzc$getAttributeRelative_dependencies"/>
  <method name="$lzc$getBounds_dependencies"/>
  <method name="$lzc$getCurrentTime_dependencies"/>
  <method name="$lzc$getMouse_dependencies"/>
  <method name="$lzc$getTotalTime_dependencies"/>
  <method name="$lzc$setAttributeRelative_dependencies"/>
  <method name="$lzc$set_aaactive"/>
  <method name="$lzc$set_aadescription"/>
  <method name="$lzc$set_aaname"/>
  <method name="$lzc$set_aasilent"/>
  <method name="$lzc$set_aatabindex"/>
  <method name="$lzc$set_align"/>
  <method name="$lzc$set_alpha"/>
  <method name="$lzc$set_bgcolor"/>
  <method name="$lzc$set_clickable"/>
  <method name="$lzc$set_clickregion"/>
  <method name="$lzc$set_cursor"/>
  <method name="$lzc$set_fgcolor"/>
  <method name="$lzc$set_font"/>
  <method name="$lzc$set_frame"/>
  <method name="$lzc$set_height"/>
  <method name="$lzc$set_layout"/>
  <method name="$lzc$set_opacity"/>
  <method name="$lzc$set_play"/>
  <method name="$lzc$set_resource"/>
  <method name="$lzc$set_rotation"/>
  <method name="$lzc$set_showhandcursor"/>
  <method name="$lzc$set_source"/>
  <method name="$lzc$set_stretches"/>
  <method name="$lzc$set_valign"/>
  <method name="$lzc$set_visibility"/>
  <method name="$lzc$set_visible"/>
  <method name="$lzc$set_width"/>
  <method name="$lzc$set_x"/>
  <method name="$lzc$set_xoffset"/>
  <method name="$lzc$set_y"/>
  <method name="$lzc$set_yoffset"/>
  <method name="$lzc$set_cachebitmap"/>
  <method name="__LZFinishDestroyOnIdle"/>
  <method name="__LZalignCenter"/>
  <method name="__LZalignRight"/>
  <method name="__LZcheckProxyPolicy"/>
  <method name="__LZcheckSize"/>
  <method name="__LZcheckheightFunction"/>
  <method name="__LZcheckwidthFunction"/>
  <method name="__LZinstantiationDone"/>
  <method name="__LZupdateShown"/>
  <method name="__LZvalignBottom"/>
  <method name="__LZvalignMiddle"/>
  <method name="__makeSprite"/>
  <method name="__warnCapability"/>
  <method name="__zCompare"/>
  <method name="addProxyPolicy"/>
  <method name="addSubview"/>
  <method name="bringToFront"/>
  <method name="construct"/>
  <method name="containsPt"/>
  <method name="deleteView"/>
  <method name="destroy"/>
  <method name="getAttributeRelative"/>
  <method name="getBounds"/>
  <method name="getColor"/>
  <method name="getColorTransform"/>
  <method name="getContextMenu"/>
  <method name="getCurrentTime"/>
  <method name="getDepthList"/>
  <method name="getID3"/>
  <method name="getLinkage"/>
  <method name="getMCRef"/>
  <method name="getMouse"/>
  <method name="getNextSelection"/>
  <method name="getPan"/>
  <method name="getPrevSelection"/>
  <method name="getTotalTime"/>
  <method name="getVolume"/>
  <method name="getZ"/>
  <method name="init"/>
  <method name="makeMasked"/>
  <method name="measureHeight"/>
  <method name="measureSize"/>
  <method name="measureWidth"/>
  <method name="mouseevent"/>
<!--  <method name="play"/> -->
  <method name="reevaluateSize"/>
  <method name="releaseLayouts"/>
  <method name="removeMask"/>
  <method name="removeProxyPolicy"/>
  <method name="resourceevent"/>
  <method name="resourceload"/>
  <method name="resourceloaderror"/>
  <method name="resourceloadtimeout"/>
  <method name="searchSubviews"/>
  <method name="seek"/>
  <method name="sendBehind"/>
  <method name="sendInFrontOf"/>
  <method name="sendToBack"/>
  <method name="setAAActive"/>
  <method name="setAADescription"/>
  <method name="setAAName"/>
  <method name="setAASilent"/>
  <method name="setAATabIndex"/>
  <method name="setAccessible"/>
  <method name="setAlign"/>
  <method name="setAttributeRelative"/>
  <method name="setBGColor"/>
  <method name="setClickable"/>
  <method name="setColor"/>
  <method name="setColorTransform"/>
  <method name="setContextMenu"/>
  <method name="setCursor"/>
  <method name="setFontName"/>
  <method name="setHeight"/>
  <method name="setLayout"/>
  <method name="setOpacity"/>
  <method name="setPan"/>
  <method name="setPlay"/>
  <method name="setResource"/>
  <method name="setResourceNumber"/>
  <method name="setRotation"/>
  <method name="setShowHandCursor"/>
  <method name="setSource"/>
  <method name="setTotalFrames"/>
  <method name="setValign"/>
  <method name="setVisibility"/>
  <method name="setVisible"/>
  <method name="setVolume"/>
  <method name="setWidth"/>
  <method name="setX"/>
  <method name="setXOffset"/>
  <method name="setY"/>
  <method name="setYOffset"/>
  <method name="shouldYieldFocus"/>
  <method name="spriteAttribute"/>
  <method name="stop"/>
  <method name="stretchResource"/>
  <method name="unload"/>
  <method name="updateHeight"/>
  <method name="updateResourceSize"/>
  <method name="updateSize"/>
  <method name="updateWidth"/>

</interface>

<interface name="class" extends="node">
  <attribute name="extends" type="token" value="view"/>
  <!-- The comma-separated list of mixins, applied in order -->
  <attribute name="with" type="string"/>
</interface>

<interface name="interface" extends="node">
  <attribute name="extends" type="token" value="view"/>
  <!-- The comma-separated list of mixins, applied in order -->
  <attribute name="with" type="string"/>
</interface>



<interface name="selectionmanager" extends="node">
  <attribute name="toggle" type="boolean"/>
  <event name="onselect"/>

  <method name="clearSelection"/>
  <method name="construct"/>
  <method name="getSelection"/>
  <method name="isMultiSelect"/>
  <method name="isRangeSelect"/>
  <method name="isSelected"/>
  <method name="makeSelected"/>
  <method name="select"/>
  <method name="selectRange"/>
  <method name="toString"/>
  <method name="unselect"/>

</interface>

<interface name="dataselectionmanager" extends="selectionmanager">
  <method name="makeSelected"/>
  <method name="unselect"/>
  <method name="selectRange"/>
  <method name="getSelection"/>
  <method name="clearSelection"/>
  <method name="isSelected"/>
  <method name="__LZsetSelected"/>
</interface>



<interface name="command" extends="node">
  <event name="onselect"/>
  <attribute name="active" type="boolean" value="true"/>
  <attribute name="key" value="expression"/>
</interface>

<interface name="animatorgroup" extends="node">
  <attribute name="process" type="string" enum="sequential|simultaneous" value="sequential"/>
  <attribute name="attribute" type="token"/>
  <attribute name="start" type="boolean" value="true"/>
  <attribute name="from" type="number" />
  <attribute name="to" type="number" />
  <attribute name="duration" type="number" />
  <attribute name="indirect" type="boolean" value="false"/>
  <attribute name="relative" type="boolean" value="false"/>
  <attribute name="motion" type="string" value="easeboth" enum="linear|easein|easeout|easeboth"/>
  <attribute name="onstart" type="script" />
  <attribute name="onstop" type="script" />
  <attribute name="repeat" type="expression" />
  <attribute name="paused" type="boolean" value="false"/>
  <attribute name="target" type="reference"/>
  <containsElements>
    <element>animator</element>
  </containsElements>

  <method name="$lzc$set_duration"/>
  <method name="$lzc$set_paused"/>
  <method name="$lzc$set_start"/>
  <method name="$lzc$set_target"/>
  <method name="__LZaddToStartTime"/>
  <method name="__LZfinalizeAnim"/>
  <method name="__LZhalt"/>
  <method name="checkRepeat"/>
  <method name="doStart"/>
  <method name="pause"/>
  <method name="prepareStart"/>
  <method name="resetAnimator"/>
  <method name="setDuration"/>
  <method name="setTarget"/>
  <method name="stop"/>
  <method name="update"/>

</interface>

<interface name="animator" extends="animatorgroup">
  <method name="$lzc$set_motion"/>
  <method name="$lzc$set_to"/>
  <method name="beginAnimator"/>
  <method name="calcControlValues"/>
  <method name="calcNextValue"/>
  <method name="calcNextValueLinear"/>
  <method name="setMotion"/>
  <method name="setTo"/>
  <method name="setValue"/>
</interface>

<interface name="text">
  <attribute name="multiline" type="boolean" value="false"/>
  <attribute name="resize" type="boolean" />
  <attribute name="resizable" type="boolean" />
  <attribute name="selectable" type="boolean"           value="false"/>
  <attribute name="maxlength" type="numberExpression"   value="null"/>
  <attribute name="pattern" type="string" />
  <attribute name="label" type="string" />
  <attribute name="antiAliasType" type="string" enum="normal|advanced" value="advanced" />
  <attribute name="gridFit" type="string" enum="none|pixel|subpixel" value="subpixel"  />
  <attribute name="sharpness" type="numberExpression"      value="0"/>
  <attribute name="thickness" type="numberExpression"     value="0"  />
  <attribute name="text" type="string"/>
  <attribute name="embedfonts" type="boolean" />
  <containsElements>
    <element>pre</element>
    <element>a</element>
    <element>b</element>
    <element>li</element>
    <element>img</element>
    <element>font</element>
    <element>i</element>
    <element>p</element>
    <element>br</element>
    <element>u</element>
  </containsElements>

  <method name="$lzc$getMaxScroll_dependencies"/>
  <method name="$lzc$getTextHeight_dependencies"/>
  <method name="$lzc$getTextWidth_dependencies"/>
  <method name="$lzc$getText_dependencies"/>
  <method name="$lzc$set_fontsize"/>
  <method name="$lzc$set_fontstyle"/>
  <method name="$lzc$set_maxlength"/>
  <method name="$lzc$set_pattern"/>
  <method name="$lzc$set_resize"/>
  <method name="$lzc$set_selectable"/>
  <method name="$lzc$set_text"/>
  <method name="$lzc$set_xscroll"/>
  <method name="$lzc$set_yscroll"/>
  <method name="__LZforceScrollAttrs"/>
  <method name="_dbg_name"/>
  <method name="addText"/>
  <method name="annotateAAimg"/>
  <method name="applyData"/>
  <method name="clearText"/>
  <method name="escapeText"/>
  <method name="format"/>
  <method name="getAntiAliasType"/>
  <method name="getBottomScroll"/>
  <method name="getDefaultWidth"/>
  <method name="getGridFit"/>
  <method name="getMaxScroll"/>
  <method name="getScroll"/>
  <method name="getSelectionPosition"/>
  <method name="getSelectionSize"/>
  <method name="getSharpness"/>
  <method name="getText"/>
  <method name="getTextHeight"/>
  <method name="getTextWidth"/>
  <method name="getThickness"/>
  <method name="parseImgAttributes"/>
  <method name="setAntiAliasType"/>
  <method name="setBorder"/>
  <method name="setEmbedFonts"/>
  <method name="setFontSize"/>
  <method name="setFontStyle"/>
  <method name="setGridFit"/>
  <method name="setHScroll"/>
  <method name="setMaxLength"/>
  <method name="setMultiline"/>
  <method name="setPattern"/>
  <method name="setResize"/>
  <method name="setScroll"/>
  <method name="setSelectable"/>
  <method name="setSelection"/>
  <method name="setSharpness"/>
  <method name="setText"/>
  <method name="setThickness"/>
  <method name="setWordWrap"/>
  <method name="setXScroll"/>
  <method name="setYScroll"/>
  <method name="updateMaxLines"/>
</interface>


<interface name="inputtext" extends="text">
      <!-- If true, the input text field acts like a password input
           field; any text typed in appears as "****" characters in the
           current font. -->
      <attribute name="password" type="boolean" value="false"/>
      <attribute name="enabled" type="boolean" value="true"/>

      <method name="$lzc$set_enabled"/>
      <method name="_gotBlurEvent"/>
      <method name="_gotFocusEvent"/>
      <method name="_modechanged"/>
      <method name="_setallowselectable"/>
      <method name="inputtextevent"/>
      <method name="setEnabled"/>
      <method name="setHTML"/>

</interface>

<!-- TODO [hqm 2007] We used to document the dialect of HTML we
     support in <text> elements here, need to do that elsewhere.
-->

<interface name="audio" extends="Instance">
  <!-- The path of a file that contains the source for this object. -->
  <attribute name="src" type="string"/>
  <attribute name="id" type="ID"/>
  <attribute name="name" type="token"/>
</interface>

<interface name="resource" extends="Instance">
  <attribute name="src" type="string"/>
  <attribute name="name" type="token"/>
  <containsElements>
    <element>frame</element>
  </containsElements>
</interface>


<interface name="dataset" extends="node">
  <!-- If true, namespace prefixes are preserved in XML tag and
       attribute names defaults to false in proxied apps, but SOLO
       apps currently only support a value of 'true' (namespace
       prefixes are always attached to element and attribute names)
  -->
  <attribute name="nsprefix" type="boolean" value="true"/>
  <!-- If true, enable a response to be encoded via the clients
       Accept-Encoding HTTP header.  This allows the server to gzip
       the response.
  -->
  <attribute name="acceptencodings" type="boolean" value="false"/>
  <!--  msecs to time out for load requests -->
  <attribute name="timeout" type="number"  />
  <!--  If true, proxy data requests through a server -->
  <attribute name="proxied" type="inheritableBoolean" value="inherit" />
  <!--  URL of the proxy server. Defaults to canvas proxyurl string -->
  <attribute name="proxyurl" type="string"/>
  <!-- If this is a pathname, it specifies an XML file whose content
       is compiled into the application as the value of the dataset.
       If it is a URL, it specifies the location to request data from at runtime.
  -->
  <attribute name="src" type="string" />
  <!--  If true, make a data request when this dataset initializes -->
  <attribute name="request" type="boolean" value="false"/>
  <!-- If true, doRequest will be called automatically on every call to setParam or setQueryString -->
  <attribute name="autorequest" type="boolean" value="false"/>
  <!-- If true, the client should ensure that each request is made,
       rather than just making and reporting the last request. -->
  <attribute name="queuerequests" type="boolean"  value="false"/>
  <!-- This string is appended to the request. -->
  <attribute name="querystring" type="string"  value="false"/>
  <!-- If set to "http", then the dataset will interpret its src
       attribute as an url from which to load its content, rather than
       as a static xml file to inline. -->
  <attribute name="type" type="string" />
  <!-- If true, initial literal XML data is taken from <data> child node -->
  <attribute name="datafromchild" type="boolean" />
  <attribute name="namespace" type= "string" />
  <!-- Specifies whether or not the app-LPS connection is secure -->
  <attribute name="secure" type="boolean" value="false"/>
  <!-- Sets the port number to use to connect to the LPS for a secure connection.  -->
  <attribute name="secureport" type="number"  value="443"/>
   
  <!--If true, include response headers (This is specific to HTTP datasets). -->
  <attribute name="getresponseheaders" type="boolean" value="false"/>
   
  <!-- If true, trim whitespace around XML text content -->
  <attribute name="trimwhitespace" type="boolean" value="false"/>
   
  <!-- Enables caching of the data response on both the LPS server
       and the client.  There are security issues with enabling this.
       You usually want the getresponseheaders attribute to be false when
       you set this to true. 
  -->
  <attribute name="cacheable" type="boolean"  value="false"/>
  <!-- When true, an argument will be added to the request string, e.g. __lzbc__=1204685840777.  This is to prevent client caching.
  -->
  <attribute name="clientcacheable" type="boolean"  value="false"/>
  <!-- The ondata event is received when data arrives -->
  <event name="ondata" />
  <!--  The onerror event is recevied when an error occurs -->
  <event name="onerror" />
  <!-- The ontimeout event is recevied when a request times out -->
  <event name="ontimeout" />

  <event name="onownerDocument" />
  <event name="onDocumentChange"/>
  <event name="onparentNode" />
  <event name="onchildNode" />
  <event name="onchildNodes" />
  <event name="onattributes" />
  <event name="onnodeName" />

  <!-- An instance of LzDataprovider, which handles data requests -->
  <attribute name="dataprovider" type="expression"/>

  <!-- HTTP request method = post | get -->
  <attribute name="querytype" type="string" value="GET" enum="post|get|put|delete|POST|GET|PUT|DELETE" />

  <containsElements>
    <element>data</element>
  </containsElements>

  <method name="$lzc$set_autorequest"/>
  <method name="$lzc$set_initialdata"/>
  <method name="$lzc$set_name"/>
  <method name="$lzc$set_querytype"/>
  <method name="$lzc$set_request"/>
  <method name="$lzc$set_src"/>
  <method name="abort"/>
  <method name="clearRequestHeaderParams"/>
  <method name="construct"/>
  <method name="destroy"/>
  <method name="doRequest"/>
  <method name="get"/>
  <method name="getAllResponseHeaders"/>
  <method name="getContext"/>
  <method name="getDataset"/>
  <method name="getErrorString"/>
  <method name="getLoadTime"/>
  <method name="getParams"/>
  <method name="getPointer"/>
  <method name="getQueryString"/>
  <method name="getRequestHeaderParams"/>
  <method name="getResponseHeader"/>
  <method name="getSrc"/>
  <method name="getStatusCode"/>
  <method name="gotError"/>
  <method name="gotTimeout"/>
  <method name="handleDataResponse"/>
  <method name="isProxied"/>
  <method name="queryStringToTable"/>
  <method name="recycle"/>
  <method name="setAutorequest"/>
  <method name="setData"/>
  <method name="setHeader"/>
  <method name="setInitialData"/>
  <method name="setPostBody"/>
  <method name="setProxyRequests"/>
  <method name="setQueryParam"/>
  <method name="setQueryParams"/>
  <method name="setQueryString"/>
  <method name="setQueryType"/>
  <method name="setRequest"/>
  <method name="setSrc"/>
  <method name="toString"/>
</interface>

<interface name="datapointer" extends="node">
  <attribute name="rerunxpath" type="boolean" />
  <attribute name="xpath" type="string" />
  <!-- This controls the spacing between elements if <a
       href="datapath.html#attr-replication">lazy replication</a> is
       true -->
  <attribute name="spacing" type="size" value="0"/>
  <attribute name="p" type="expression"/>

  <method name="$lzc$set_context"/>
  <method name="$lzc$set_p"/>
  <method name="$lzc$set_pointer"/>
  <method name="$lzc$set_rerunxpath"/>
  <method name="$lzc$set_xpath"/>
  <method name="$lzc$xpathQuery_dependencies"/>
  <method name="__LZHandleDocChange"/>
  <method name="__LZHandleMultiNodes"/>
  <method name="__LZHandleNoNodes"/>
  <method name="__LZHandleSingleNode"/>
  <method name="__LZcheckChange"/>
  <method name="__LZcheckDotDot"/>
  <method name="__LZdoSelect"/>
  <method name="__LZgetLast"/>
  <method name="__LZgetNodes"/>
  <method name="__LZgetPosition"/>
  <method name="__LZneedsOpUpdate"/>
  <method name="__LZprocessOperator"/>
  <method name="__LZsendUpdate"/>
  <method name="__LZsetData"/>
  <method name="__LZsetTracking"/>
  <method name="__LZsetupDotDot"/>
  <method name="__LZsimpleOperatorUpdate"/>
  <method name="_dbg_name"/>
  <method name="addNode"/>
  <method name="addNodeFromPointer"/>
  <method name="childOrSelf"/>
  <method name="comparePointer"/>
  <method name="deleteNode"/>
  <method name="deleteNodeAttribute"/>
  <method name="destroy"/>
  <method name="dupePointer"/>
  <method name="finishRootNode"/>
  <method name="getContext"/>
  <method name="getDataset"/>
  <method name="getLocalDataContext"/>
  <method name="getNodeAttribute"/>
  <method name="getNodeAttributes"/>
  <method name="getNodeCount"/>
  <method name="getNodeName"/>
  <method name="getNodeOffset"/>
  <method name="getNodeText"/>
  <method name="getNodeType"/>
  <method name="getOtherNodeText"/>
  <method name="getXPath"/>
  <method name="gotError"/>
  <method name="gotTimeout"/>
  <method name="isValid"/>
  <method name="makeElementNode"/>
  <method name="makeRootNode"/>
  <method name="makeTextNode"/>
  <method name="nodeByName"/>
  <method name="parsePath"/>
  <method name="runXPath"/>
  <method name="selectChild"/>
  <method name="selectNext"/>
  <method name="selectNextParent"/>
  <method name="selectParent"/>
  <method name="selectPrev"/>
  <method name="sendDataChange"/>
  <method name="serialize"/>
  <method name="setDataContext"/>
  <method name="setFromPointer"/>
  <method name="setNodeAttribute"/>
  <method name="setNodeName"/>
  <method name="setNodeText"/>
  <method name="setPointer"/>
  <method name="setXPath"/>
  <method name="xpathQuery"/>
</interface>


<interface name="datapath" extends="datapointer">
  <!--  If pooling is true, views that are data-bound to this datapath
     are recycled if the dataset changes.  Otherwise, views are deleted
     when the data nodes they are bound to disappear, and created
     when new data nodes match the datapath. 
     -->
  <attribute name="pooling" type= "boolean" value="false" />
  <attribute name="axis" type="string" enum="x|y" />
  <attribute name="sortpath" type="string" />
  <attribute name="sortorder" type= "string" />
  <attribute name="replication" type="string" value="normal" enum="normal|lazy|resize" /> 

  <method name="__LZApplyData"/>
  <method name="__LZApplyDataOnInit"/>
  <method name="__LZsetCloneManager"/>
  <method name="retrieveData"/>
  <method name="setClonePointer"/>
  <method name="setComparator"/>
  <method name="setNodes"/>
  <method name="setOrder"/>
</interface>

<interface name="font" extends="Instance">
  <attribute name="name" type="token"/>
  <attribute  name="device" type="boolean" value="false"/>
  <attribute name="src" type="string" />
  <attribute name="style" type="string" value="plain" 
             enum="bold|italic|bold italic|italic bold|plain"/>
  <containsElements>
    <element>face</element>
  </containsElements>
</interface>



<!--
TODO make sure NodeModel checks for these and only these attributes, and warns
if any other is used

element attribute " 
        [lza:modifiers="final"]
        attribute name "token" 
      (attribute value "string" 
            [lza:since="1.1"]
             ([a:defaultValue="immediately"]
               attribute when " "immediately" | "once" | "always" "
             )
       )
      [a:defaultValue="expression"
        lza:modifiers="final"]
       attribute type ""boolean" | "color" | "expression" | "number" | "size" |
                       "string" | "text" | "html""
      [a:defaultValue="false"] 
       attribute required "boolean" 
      [lza:since="1.1"]
       attribute setter "script"
     "

-->



<interface name="import" extends="node">
  <attribute name="href" type="string" />
  <attribute name="stage" type="string" value="late" enum="late|defer" />
  <event name="onload"/>
  <attribute name="proxied" type="inheritableBoolean" value="inherit"/>
  <event name="onerror"/>
  <event name="ontimeout"/>
</interface>

<interface name="state" extends="node">
  <attribute name="applied" type="boolean" value="false" />
  <attribute name="pooling" type="boolean" value="false" />

  <method name="apply" final="false" />
  <method name="remove" final="false" />

  <event name="onapplied" />
  <event name="onapply" />
  <event name="onremove" />
</interface>

<interface name="layout" extends="node">
  <attribute name="locked" type="boolean"/>
  <method name="$lzc$set_locked"/>
  <method name="__LZinsertAfter"/>
  <method name="__parentInit"/>
  <method name="addSubview"/>
  <method name="gotNewSubview"/>
  <method name="ignore"/>
  <method name="lock"/>
  <method name="releaseLayout"/>
  <method name="removeSubview"/>
  <method name="reset"/>
  <method name="setLayoutOrder"/>
  <method name="swapSubviewOrder"/>
  <method name="unlock"/>
  <method name="update"/>
</interface>

<!--
 Application Configuration
-->

<interface name="splash" extends="Instance">
  <attribute name="hideafterinit" type= "boolean" />
  <attribute name="persistent" type= "boolean" />
  <containsElements>
    <element>splashview</element>
    <element>preloadresource</element>
  </containsElements>
</interface>

<interface name="splashview" extends="Instance">
  <attribute name="name" type="token" />
  <attribute name="resource" type="string" />
  <attribute name="ratio" type="string" />
  <attribute name="x" type="number" value="0"/>
  <attribute name="y" type="number" value="0"/>
  <attribute name="center" type="boolean" value="false"/>
</interface>

<interface name="script" extends="Instance">
  <!-- The pathname of a JavaScript file.  This pathname is resolved
       relative to the file that contains the <tagname>script</tagname>
       element.
  -->
  <attribute name="type" type="string" />
  <attribute name="when" type="string" enum="normal|immediate" value="normal"/>
  <attribute name="src" type="string"/>
</interface>

<interface name="include" extends="Instance">
  <attribute name="href" type="string"/>
  <attribute name="type" type="string" value="xml" enum="text|xml"/>
</interface>



<interface name="stylesheet" extends="Instance">
  <!-- The pathname of a css file.  This pathname is resolved
       relative to the file that contains the <tagname>stylesheet</tagname>
       element.
  -->
  <attribute name="src" type="string" />
</interface>



<interface name="preloadresource" extends="view">
  <attribute name="name" type="token" />
  <attribute name="ratio" type="string" />
  <attribute name="synctoload" type="boolean" />
  <attribute name="hideafterinit" type="boolean" />
  <attribute name="center" type="boolean" />
  <attribute name="synchronized" type="boolean" />
  <attribute name="lastframe" type="number"  />
  <attribute name="resource" type="string" />
  <attribute name="resourcename" type="string" />
</interface>

<!-- Security -->
<interface name="security" extends="Instance">
  <containsElements>
    <element>allow</element>
    <element>deny</element>
  </containsElements>
</interface>


<!-- debugger -->
<interface name="debug">
  <attribute name="showInternalProperties" type="boolean" value="false"/>
</interface>

<interface name="contextmenu" extends="node" >
  <event name="onmenuopen" />
  
  <attribute name="delegate" type="expression" value="null" />
  
  <containsElements>
    <element>contextmenuitem</element>
  </containsElements>
</interface>

<interface name="contextmenuitem" extends="node" >
  <event name="onselect" />
  
  <attribute name="delegate" type="expression" value="null" />
  <attribute name="caption" type="string" value="" />
  <attribute name="enabled" type="boolean" value="true" />
  <attribute name="separatorbefore" type="boolean" value="false" />
  <attribute name="visible" type="boolean" value="true" />
</interface>

</library>
