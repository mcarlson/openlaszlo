/******************************************************************************
 * stubs.lzs
 *****************************************************************************/

//* A_LZ_COPYRIGHT_BEGIN ******************************************************
//* Copyright 2001-2006, 2008 Laszlo Systems, Inc.  All Rights Reserved.            *
//* Use is subject to license terms.                                          *
//* A_LZ_COPYRIGHT_END ********************************************************

// This file implements the debugger stubs, so that DHTML apps can make refernces to
// Debug.write, etc, when the full debugger is not compiled/linked in.

dynamic class LzDebugService {
    public function write(...args):void {
        trace.apply(Debug, args);
        LFCApplication.write.apply(LFCApplication, args);
    }
    public function info(...args):void {
        args.unshift('Info: ');
        write.apply(Debug, args);
    }
    public function warn(...args):void {
        args.unshift('Warn: ');
        write.apply(Debug, args);
    }
    public function error(...args):void {
        args.unshift('Error: ');
        write.apply(Debug, args);
    }
    public function debug(...args):void {
        args.unshift('Debug: ');
        write.apply(Debug, args);
    }
    public function monitor(...args):void {
        args.unshift('Monitor: ');
        write.apply(Debug, args);
    }

    public function __String (thing, pretty=null, limit=null, unique=null):String { return new String( thing ); }
}

var Debug = new LzDebugService();
