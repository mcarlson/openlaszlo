/* -*- mode: JavaScript; c-basic-offset: 2; -*- */

/**
  *
  * @copyright Copyright 2001-2007 Laszlo Systems, Inc.  All Rights Reserved.
  *            Use is subject to license terms.
  *
  * @access private
  * @topic LZX
  * @subtopic Debugging
  */

// Hash to avoid printing duplicate warnings (e.g., when a warning is
// in a loop)
Debug.sourceWarningHistory = [];

// Replace the bootstrap warning function with one that hooks into
// LzWarning
var $reportSourceWarning = function (filename, lineNumber, msg, fatal) {
#pragma "warnUndefinedReferences=false"
  var warning;
  // Very early on, you don't have anything
  if (LzWarning) {
    var what = (fatal?LzError:LzWarning);
    warning = new what(filename, lineNumber, msg);
  } else {
    warning = (fatal?'ERROR: ':'WARNING: ') + filename + ':' + lineNumber + ': ' + msg + '\n';
  }
  var warningString = warning.toString();
  if (Debug.sourceWarningHistory[warningString]) {
    return;
  }
  Debug.sourceWarningHistory [warningString] = true;

  if (Debug.remoteDebug) {
    if (Debug.inEvalRequest) {
      Debug.xmlwarnings.push([filename, lineNumber, msg]);
    } else {
      Debug.sockWriteWarning(filename, lineNumber, msg);
    }
  } else {
    Debug.freshLine();
    // Logs and adds
    Debug.__write(warning);
  }
}

