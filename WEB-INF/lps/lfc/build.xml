<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY build_opt SYSTEM "file:../../../build-tools/build-opt.xml">
]>

<!--  build.xml                                                             -->

<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->

<project name="lfc" default="build">
  <description>
      This is the build file for the LFC library.
  </description>

  &build_opt;


  <target name="init" depends="build-opt">
    <tstamp/>

	<path id="lfctosc.classpath">
		<fileset dir="${env.LPS_HOME}/3rd-party" includes="**/*.jar" />
		<fileset dir="${env.LPS_HOME}/WEB-INF/lib" includes="**/*.jar" />
	</path>

	<available property="has_sc.Main" 
		classname="org.openlaszlo.sc.Main"
	    classpathref="lfctosc.classpath"	/>
        
    <echo message="Do we have sc.Main? ${has_sc.Main} in classpath ${lfctosc.classpath}"/>

    <echo message="JAVA_OPTS=${JAVA_OPTS}" />

    <property file="${LPS_HOME}/build.properties"/>
    <condition property="JAVA_DEBUG" value="" else="-ea">
        <equals arg1="${build.debug}" arg2="off" />
    </condition>
    
    <condition property="JAVA_OPTS" value="${env.JAVA_OPTS}" else="">
        <isset property="env.JAVA_OPTS"/>
    </condition>
    <property name="sc.dir"     value="${LPS_HOME}/WEB-INF/lps/server/sc"/>

    <echo message="JAVA_OPTS=${JAVA_OPTS}" />
  </target>

  <target name="clean" depends="init">
      <delete failonerror="false">
          <fileset dir="build" />
          <fileset dir="." includes="*.lzl" />
      </delete>
  </target>
  
  
<target name="lzl" description="Build a .lzl library from source" >
        <!-- TODO: add a check for uptodate [bshine 5.14.06] --> 
	<fail unless="has_sc.Main" message="Can't find org.openlaszlo.sc.Main in classpath." />
	<echo message="Compiling ${library}"/>
	<java classname="org.openlaszlo.sc.Main" 
		classpathref="lfctosc.classpath"
		fork="true"
		failonerror="true">
		<sysproperty key="LPS_HOME" value="${LPS_HOME}" />
		<!-- <arg value="${args}" /> --> 
		<arg value="--runtime=${runtime}" />
		<arg value="-o${library}.lzl" />
		<arg value="${source}" />
	</java>
    </target>
<!-- We want to build the cross-product of [swf6, swf7, swf8] with [ regular, debug, profile ] -->
<target name="build" description="Build all the lfc versions requested in build.properties"
    depends="init">
    <dependset>
      <targetfileset dir="build/cache"/>
      <srcfileset dir="${sc.dir}" includes="*.py"/>
    </dependset>

    <script language="javascript"><![CDATA[
        var dobuild = function(v, flavor, args) {
            var myant = lfc.createTask("ant");
            myant.setTarget("lzl");

            var libprop = myant.createProperty();
            libprop.setName("library");
            libprop.setValue("LFC" + v + flavor);

            var argsprop = myant.createProperty();
            argsprop.setName("args"); 
    	    argsprop.setValue(args);

    	    var runtimeprop = myant.createProperty();
    	    runtimeprop.setName("runtime");
            runtimeprop.setValue("swf" + v);

            var sourceprop = myant.createProperty();
            sourceprop.setName("source");
            sourceprop.setValue("LaszloLibrary.as");        

            var excludesprop = myant.createProperty();
            excludesprop.setName("excludes");
            excludesprop.setValue("lzpreloader.as"); 
            myant.setInheritAll(true);
            myant.execute();
        }
        
        var swfruntimes = [6, 7, 8];
        
        var warningTask = lfc.createTask("echo");
        var buildDebug = lfc.getProperty("build.lfc.runtime.debug");
        var buildProfile = lfc.getProperty("build.lfc.runtime.profile");

        for (var s in swfruntimes) {
            var v = swfruntimes[s]; 
            
            // Check whether the options tell us to build this runtime at all
            var buildThisRuntime = lfc.getProperty("build.lfc.runtime.swf" + v);
            if (buildThisRuntime != null) { 
            
                dobuild(v, "", "");
                
                if (buildDebug) {
		    dobuild(v, "-debug", ""); // jgrandy thinks this should be here but bshine doesn't get it [bshine 5.26.06] "--option nameFunctions --debug");
                }
                
                if (buildProfile) {
                    dobuild(v, "-profile", "-p");
                }
                
            } else {
                warningTask.setMessage("WARNING: Skipping LFC" + v);        
                warningTask.execute();
            }
        }
    ]]> </script>
</target>
  
  <target name="doc">
  </target>

  <target name="all"
          description="Clean, build, (no doc here)"
          depends="clean,build"/>
</project>
