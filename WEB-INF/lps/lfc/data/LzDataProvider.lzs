/**
  *
  * @copyright Copyright 2001-2008 Laszlo Systems, Inc.  All Rights Reserved.
  *            Use is subject to license terms.
  *
  * @access public
  * @topic LFC
  * @subtopic Data
  * @access public
  */


/**
  * <p>
  * <class>LzDataprovider</class> is an abstract class that can be extended to create new kinds 
  * of dataproviders, such as <class>HTTPdataprovider</class>. These dataproviders 
  * are the client's representation of a backend entity. There is no tag that 
  * corresponds to this class.
  * </p>
  * <p>
  *  Dataproviders represent queryable server-side data sources, capable of creating 
  *  or changing Datasets.  Dataproviders are type-specific, i.e. http, jdbc or 
  *  soap.
  *  Dataproviders manage connections to the server,  and process requests which are submitted
  *  via the <method>doRequest</method> method. The request is generated in an instance of  <class>DataRequest</class>. 
  *
  * A Dataprovider updates the datarequest with loading and status information via the <event>onstatus</event> event.
  * </p>
  * <p>
  *
  * <event>onstatus</event>: Sent to a datarequest to update the status of the request.</p>
  *
  * @shortdesc An abstract class to represent backend data sources.
  * @lzxname dataprovider
  */

class LzDataProvider extends LzNode {

    /** @access private
     * @modifiers override 
     */
    static var tagname = 'dataprovider';
/** @access private */
    static var attributes = new LzInheritedHash(LzNode.attributes);

    /**
     * Executes the given DataRequest
     * @access public
     * @param LzDataRequest dreq: The data request to run
     */
    function doRequest ( dreq ) {

    }
}
