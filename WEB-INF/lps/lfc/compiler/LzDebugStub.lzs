/* -*- mode: JavaScript; c-basic-offset: 2; -*- */

/**
 * @copyright Copyright 2009 Laszlo Systems, Inc.  All Rights Reserved.
 *            Use is subject to license terms.
 *
 * @access private
 * @topic LZX
 * @subtopic Runtime
 */

if ($as3) {
  /**
   * Class used for as3-only runtime support
   *
   * @access private
   */
  class $lzsc$runtime {
    /**
     * Copied from debug/LzCompiler because I don't know how to make
     * that accessible in swf9
     *
     * @access private
     */
    static var sourceWarningHistory = [];

    /**
     * Copied from debug/LzCompiler because I don't know how to make
     * that accessible in swf9
     *
     * @access private
     */
    static function $reportSourceWarning (filename, lineNumber, msg, fatal) {
      var warning = new (fatal?LzError:LzWarning)(filename, lineNumber, msg);
      var warningString = warning.toString();
      if (sourceWarningHistory[warningString]) {
        return;
      }
      sourceWarningHistory [warningString] = true;

      Debug.freshLine();
      // Logs and adds
      Debug.__write(warning);
    }

    /**
     * Report an exception to the debug window
     *
     * @param String fileName: The source file
     * @param Number lineNumber: The source line
     * @param Object e: exception received
     *
     * @access private
     */
    static function reportException (fileName, lineNumber, e) {
      $reportSourceWarning(fileName, lineNumber, e.name + ": " + e.message, true);
    }
  };
} else {
  // Define a debug placeholder with minimal definitions because Class
  // needs it for profile or debug mode, but the actual debugger cannot be loaded until Class is
  // loaded.
  var Debug = {
    // Compiler-generated backtracing code needs these values
    backtraceStack: []
    ,uncaughtBacktraceStack: null
    // Configurable names for debug annotations.  See
    // org.openlaszlo.sc.Function.  These values are duplicated in
    // LzBootstrapDebugService
    ,FUNCTION_NAME: 'displayName'
    ,FUNCTION_FILENAME: '_dbg_filename'
    ,FUNCTION_LINENO: '_dbg_lineno'
  };

  /** Max depth allowed
   * @access private
   */
  Debug.backtraceStack.maxDepth = 100;
}
