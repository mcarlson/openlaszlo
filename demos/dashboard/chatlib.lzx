<!--=======================================================================-->
<!-- chatlib.lzx                                                           -->
<!--                                                                       -->
<!-- Laszlo Application Language (LZX) Example                             -->
<!--                                                                       -->
<!--=======================================================================-->

<library>
    <!-- Chat resources -->
    <resource name="chatCornerTL" src="img/chat_corner_tl.swf" />
    <resource name="chatCornerTR" src="img/chat_corner_tr.swf" />
    <resource name="chatCornerBL" src="img/chat_corner_bl.swf" />
    <resource name="chatCornerBR" src="img/chat_corner_br.swf" />
    <resource name="chatL" src="img/chat_l.swf" />
    <resource name="chatR" src="img/chat_r.swf" />
    <resource name="chatT" src="img/chat_t.swf" />
    <resource name="chatB" src="img/chat_b.swf" />
    <resource name="chatMiddle" src="img/chat_middle.swf" />
    <resource name="chatEdge" src="img/chat_round_edge.swf" />
    <resource name="chatEdgeRT" src="img/chat_round_edge_rt.swf" />

    <resource name="sendButton">
        <frame src="img/send_up.swf"/>
        <frame src="img/send_over.swf"/>
        <frame src="img/send_down.swf"/>
    </resource>

    <include href="redmond" />

    <connectiondatasource name="myconnection">

        <method name="print" args="str">
            chatID.chatPtr.addNode("message", null, { text: str, multiline: true } );
        </method>

        <method event="onconnect">
            this.print("Connected!");
            canvas.myconnection.sendMessage("*", "", "userconnect");
            canvas.myconnection.getList('*');
        </method>

        <method event="onerror">
            this.print("Connection error.");
        </method>

        <method event="ontimeout">
            this.print("Connection timed out.");
        </method>

        <method event="onuserdisconnect" args="user">
            canvas.myconnection.getList('*');
            this.print("User " + user + " disconnected");
            chatID.contactspointer.unlightuser(user);
        </method>

        <dataset name="message" />
        <dataset name="userconnect" />
    </connectiondatasource>


    <dataset name="chatDset" />

    <class name="chat" width="450" height="400" x="0" y="10"> 

        <datapointer name="chatPtr" xpath="chatDset:/" />

        <!-- Information about a user who just connected.                    -->
        <datapointer xpath="myconnection:userconnect:/*">
            <method event="ondata">
                var from = this.xpathQuery('/from[0]/@name');
                this.parent.chatPtr.addNode("message", null,
                    { text: "User " + from + " just connected!"}
                );
                parent.contactspointer.lightupuser(from);
            </method>
        </datapointer>
               
        <!-- Light up the user's online art                                  -->
        <datapointer xpath="contactsData:/" name="contactspointer">
            <method name="lightupuser" args="name">
                if (typeof(name) == "undefined") {
                    return false;
                }

                this.setXPath('/');
                selectChild();

                // set pointer to where we want to iterate in dataset
                do {
                    if (xpathQuery('user/text()').toLowerCase() == 
                                                      name.toLowerCase()) {
                        addNode('light', 'on');
                        return true;
                    }
                } while (selectNext());
            </method>
            <method name="unlightuser" args="name">
            <![CDATA[  
                this.runXPath('/');
                this.selectChild();

                // set pointer to where we want to iterate in dataset
                do{
                    var t = this.xpathQuery('user[1]/text()');
                    if (t != null && t.toLowerCase() == name.toLowerCase()) {
                        this.selectChild();
                        // Delete all nodes with lights
                        if (this.xpathQuery('text()') == "on"){
                            this.deleteNode ( );
                        }
                        while (this.selectNext()) {
                            if (this.xpathQuery('text()') == "on"){
                                this.deleteNode ( );
                            }
                        }

                        return true;
                    }
                }while (this.selectNext());
            ]]>
            </method>
        </datapointer> 


        <!-- getListDset is the dataset that maps to LzConnection.getList(). -->
        <datapointer xpath="myconnection:getListDset:/">
            <method event="ondata">
                selectChild();
                parent.contactspointer.lightupuser(
                                            this.getNodeAttribute ( 'name' ));
                                
                // set pointer to where we want to iterate in dataset
                while (selectNext()) {
                    parent.contactspointer.lightupuser(
                                            this.getNodeAttribute ( 'name' ));
                }
                //debug.write ("CONNECTED USERS RETURNED");
            </method>

        </datapointer>


        <!-- Receiving a message.                                            -->
        <datapointer xpath="myconnection:message:/*">
            <method event="ondata">
            <![CDATA[
                var from = this.xpathQuery('/from[0]/@name');
                var mesg = this.xpathQuery('/text()');
                if (connection.getUsername()==from){
                    this.parent.chatPtr.addNode("message", null,
                        { text: "<font color='#0000FF'>"+from + "</font>: "
                                + mesg }
                    );
                }else{
                    this.parent.chatPtr.addNode("message", null,
                        { text: "<font color='#CC0000'>"+from + "</font>: "
                                + mesg }
                    );
                }
            ]]>
            </method>
        </datapointer>

        <!-- Sending a message.                                              -->
        <datapointer xpath="myconnection:sendMessageDset:/*">
            <method event="onerror">
                var message = parent.userInputArea.inputArea.msg.getText();
                this.parent.chatPtr.addNode("message", null, 
                    { text:  this.dataset.getErrorString() }
                );
            </method>
        </datapointer>
                                                                               

        <view name="messages" 
              align="center" 
              width="${immediateparent.width-10}" 
              height="${immediateparent.height-52}"
              y="4"
              font="lztahoe8"> <!-- font defined by redmond -->

            <view x="10" name="contents" 
                  width="${parent.width-10}" 
                  height="${parent.height}">
                <view name="chatView" 
                      width="${parent.width}" 
                      height="${parent.height}" 
                      bgcolor="#ffffff"
                      clip="true">
                      <view name="fullView">
                        <method name="adjustScroll">
                            <![CDATA[
                                if (this.parent.parent.height < 0) return;
                                var cvDif=this.parent.parent.height-this.height;
                                if ((cvDif) < 0){
                                    this.setY(cvDif);
                                    this.parent.scrollbar.updateThumbPos();
                                }
                            ]]>
                        </method>

                        <view height="4"/>
                        <view>
                            <view name="sview" 
                                  datapath="chatDset:/message" 
                                  oninit="this.parent.parent.adjustScroll();" >
                                <text width="${parent.parent.parent.parent.width}" 
                                      multiline="true" selectable="true" 
                                      datapath="@text" pixellock="true"/>
                            </view>
                            <simplelayout axis="y" spacing="2"/>
                        </view>
                        <view height="6"/>
                        <simplelayout axis="y"/>
                    </view>
                    <scrollbar name="scrollbar" axis="y" 
                               oninit="setColorTint(this,'97997D',-60)"/>
                </view> 
            </view>


            <view name="top" width="${parent.width}">
                <stableborderlayout axis="x"/>
                <view name="corner" resource="chatCornerTL" bgcolor="#FFFFFF"/>
                <view resource="chatT" stretches="width"/>
                <view resource="chatCornerTR"/>
            </view>

            <view name="middleART"
                  y="${parent.top.corner.height}" 
                  width="${parent.width}" 
                  height="${parent.height-parent.top.corner.height-parent.bottom.height}">
                <stableborderlayout axis="x"/>
                <view resource="chatL" 
                      height="${parent.height}" 
                      stretches="height"
                      bgcolor="#FFFFFF"/>

                <view name="middle" 
                      width="${parent.width}"  
                      height="${parent.height}"/>
                   
                <view resource="chatR" 
                      height="${parent.height}" 
                      stretches="height"/>
            </view>

            <view name="bottom"
                  y="${parent.height-corner.height}" 
                  width="${parent.width}">
                <stableborderlayout axis="x"/>
                <view name="corner" 
                      resource="chatCornerBL" bgcolor="#FFFFFF"/>
                <view resource="chatB" 
                      stretches="width"/>
                <view resource="chatCornerBR"/>
            </view>
        </view>


        <view name="userInputArea" 
              align="center"
              width="${immediateparent.width-12}"
              y="${immediateparent.height-42}"
              font="lztahoe8" >
            <stableborderlayout axis="x"/>
            <view resource="chatEdge"/>
            <view name="inputArea">
                <view resource="chatMiddle" stretches="width" 
                      width="${parent.width}"/>
                <inputtext name="msg" y="1" width="515" resizable="false"/>
            </view>
            <view name="RTedge" resource="chatEdgeRT"/>
        </view>

        <basebutton name="send" id="chatSendButton" 
                    y="${immediateparent.height-41}" 
                    x="${parent.userInputArea.RTedge.x-22}" 
                    resource="sendButton" onclick="this.handler();">
            <method name="handler">
                var message = parent.userInputArea.inputArea.msg.getText();
                if (message!=null &amp;&amp; message!="") {
                    canvas.myconnection.sendMessage("*", message, "message");
                    parent.userInputArea.inputArea.msg.setText("");
                }
            </method>
        </basebutton>
    </class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                         -->
