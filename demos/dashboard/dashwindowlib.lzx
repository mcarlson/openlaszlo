 <library>

    <include href="colortint.lzx"/>

    <resource src="img/shdw_top_lft.png" name="shadowTopLeft_dash" />
    <resource src="img/shdw_top_mid.png" name="shadowTopMid_dash" />
    <resource src="img/shdw_top_rt.png" name="shadowTopRight_dash" />

    <resource src="img/shdw_mid_lft.png" name="shadowMiddleLeft_dash" />
    <resource src="img/shdw_mid_rt.swf" name="shadowMiddleRight_dash" />

    <resource src="img/shdw_bot_lft.png" name="shadowBottomLeft_dash" />
    <resource src="img/shdw_bot_mid.swf" name="shadowBottomMid_dash" />
    <resource src="img/shdw_bot_rt.png" name="shadowBottomRight_dash" />

    <resource name="winTopLeft" src="img/glob_win_top_left.swf" />
    <resource name="winTopTitle" src="img/glob_win_top_title.swf" />
    <resource name="winTopTitleRight" src="img/glob_win_top_title_right.swf" />
    <resource name="winTop" src="img/glob_win_top.swf" />
    <resource name="winTopRight" src="img/glob_win_top_right.swf" />
    <resource name="winSide" src="img/glob_win_side.swf" />
    <resource name="winBottomLeft" src="img/glob_win_bottom_left.swf" />
    <resource name="winBottom" src="img/glob_win_bottom.swf" />
    <resource name="winBottomRight" src="img/glob_win_bottom_right.swf" />
    
    <resource name="winWait" src="img/wait.swf" />

     <!-- CLASSES -->
    <class name="maxRestoreButton" extends="basebutton" 
           resource="winButtonMaxRestore" />


    <class name="dash_shadow">
        <view resource="shadowTopRight_dash" x="${parent.width-12}"  />
        <view resource="shadowMiddleRight_dash" y="22" 
              x="${parent.width-12}" height="${parent.height-53}" stretches="height"/>
        <view resource="shadowBottomLeft_dash" 
              y="${parent.height-26}" x="2"/>
        <view resource="shadowBottomMid_dash"  
              y="${parent.height-15}" x="28" 
              width="${parent.width-55}" stretches="width" />
        <view resource="shadowBottomRight_dash" 
              x="${parent.width-27}" y="${parent.height-31}"/>
    </class>
 

   <!-- Dashboard window -->
    <class name="dashWindow" width="400" height="300" clickable="true"
           onmousedown="this.bringToFront();  popupwindow.setVisible(false);"
           oninit="this.startup();"
           defaultplacement="content" >
        <attribute name="minWindowWidth" value="160" />
        <attribute name="minWindowHeight" value="118" />
        <attribute name="winLabel" value="label" type="string" />
        <attribute name="windowTintColor"/>
        <attribute name="windowClickOpacity" value=".5"/>
        <attribute name="windowTintBrightness" value="0"/>

        <attribute name="animDuration" value="500"/>

        <simplelayout axis="y" />

        <dash_shadow x="-3" y="20" width="${parent.width+15}" 
                     height="${parent.height-5}" 
             options="ignorelayout"/>

        <view name="topRow"
              onmousedown="classroot.startDrag();"
              onmouseup="classroot.stopDrag();"
              width="${classroot.width}" height="31">

            <view name="topLeftBack" resource="winTopLeft"
                  x="0" y="0"
                  oninit="setColorTint(this,classroot.windowTintColor,
                                       classroot.windowTintBrightness);">
            </view>

            <view name="topLeft"
                  x="0" y="0">
            </view>

            <view name="topTitle"
                  resource="winTopTitle"
                  x="35" y="8"
                  stretches="width"
                  width="${parent.windowTitle.textwidth}"
                  oninit="setColorTint(this, classroot.windowTintColor,
                                       classroot.windowTintBrightness);">
            </view>

            <text name="windowTitle" 
                  x="32" y="${parent.topTitle.y}"
                  width="${this.textwidth + 3}"
                  font="vera" fontsize="16" fgcolor="#ffffff">
                <attribute name="textwidth" value="0"/>
                <method name="setText" args="t">
                    super.setText( t );
                    this.setAttribute( "textwidth" , this.getTextWidth() );
                </method>
            </text>

            <view name="topTitleRight"
                  resource="winTopTitleRight"
                  x="${parent.windowTitle.textwidth + 35}" y="8"
                  oninit="setColorTint(this, classroot.windowTintColor, 
                                       classroot.windowTintBrightness);">
            </view>



            <view name="topCenter" stretches="width" 
                  resource="winTop"
                  x="${parent.topTitleRight.x + parent.topTitleRight.width}" 
                  y="10"
                  width="${parent.topRight.x - parent.topTitleRight.x-25.5}"
                  height="21"
                  oninit="setColorTint(this,classroot.windowTintColor,
                                       classroot.windowTintBrightness);">
            </view>

            <view name="topRight" 
                  resource="winTopRight"
                  width="48" height="21"
                  x="${immediateparent.width - this.width}" y="10"
                  oninit="setColorTint(this,classroot.windowTintColor,
                                       classroot.windowTintBrightness);">
               
                <maxRestoreButton x="15" y="4" 
                               onclick="immediateparent.immediateparent.immediateparent.restore();"/>
              
                <maxRestoreButton x="30" y="4"
                               onclick="immediateparent.immediateparent.immediateparent.maximize();"/>
            </view>

            <view resource="winMinus" x="${immediateparent.width - 30}" y="19"/>
            <view resource="winPlus" x="${immediateparent.width - 15}" y="17"/>

        </view>

        <view name="body"
              bgcolor="$once{parseInt(parseInt('0x'+
                                               classroot.windowTintColor))}"
              width="${this.immediateparent.width}"
              height="${immediateparent.height - immediateparent.topRow.height 
                      - this.immediateparent.bottomRow.height}"
              x="0" y="${immediateparent.topRow.height}">

            <view name="leftSide"
                  resource="winSide"
                  width="3" height="${this.immediateparent.height}"
                  x="0" y="0"
                  stretches="height"
                  oninit="setColorTint(this,classroot.windowTintColor,
                                       classroot.windowTintBrightness);">
            </view>

            <view name="content"
                  width="${parent.width - parent.leftSide.width 
                         - parent.rightSide.width}"
                  height="${this.immediateparent.height}"
                  x="${this.immediateparent.leftSide.width}" y="0">
                <view resource="winWait" name="waiter" opacity=".6"
                      x="${parent.width/2}" y="${parent.height/2}"/>
            </view>

            <view name="rightSide"
                  resource="winSide"
                  width="3" height="${this.immediateparent.height}"
                  x="${this.immediateparent.width - this.width}" y="0"
                  stretches="height"
                  oninit="setColorTint(this,classroot.windowTintColor,
                                       classroot.windowTintBrightness);">
            </view>
        </view>
        <view name="bottomRow"
              width="${this.immediateparent.width}"
              oninit="setColorTint(this,classroot.windowTintColor,
                                   classroot.windowTintBrightness);">
            <stableborderlayout axis="x" />

            <view name="bottomLeft" 
                  resource="winBottomLeft"
                  x="0" y="0">
            </view>

            <view name="bottomCenter" stretches="width" 
                  resource="winBottom"
                  x="${immediateparent.bottomLeft.width}" y="0">
            </view>

            <view name="bottomRight" 
                  resource="winBottomRight"
                  clickable="true"
                  onmousedown="classroot.startResize();"
                  onmouseup="classroot.stopResize();">
            </view>
        </view>
        

        
        <!-- states -->
        <dragstate name="dragger"/>
        <state name="resizer">
            <attribute name="xroffset" 
                    value="$once{this.x - this.width + this.getMouse( 'x' )}" />
            <attribute name="width" 
                    value="${Math.max( this.minWindowWidth , 
                            this.immediateparent.getMouse( 'x' )- xroffset)}" />

            <attribute name="yroffset" 
                value="$once{this.y - this.height + this.getMouse( 'y' )}" />
            <attribute name="height" 
                    value="${Math.max( this.minWindowHeight , 
                            this.immediateparent.getMouse( 'y' )- yroffset)}" />
        </state>

        <!-- methods -->
        <method name="startDrag">
            popupwindow.setVisible(false); //Hide the media window's popup
            this.bringToFront();
            dragger.apply();
            this.setOpacity(this.windowClickOpacity);
        </method>

        <method name="stopDrag">
            dragger.remove();
            this.setOpacity(1);
        </method>

        <method name="startResize">
            popupwindow.setVisible(false); //Hide the media window's popup
            this.bringToFront();
            resizer.apply();
        </method>

        <method name="stopResize">
            resizer.remove();
        </method>
        
        <method name="startup">
            topRow.windowTitle.setText(this.winLabel);
            // set original properties, so that the window can later be resized
            this.origX = this.getAttribute( 'x' );
            this.origY = this.getAttribute( 'y' );
            this.origWidth = this.getAttribute( 'width' );
            this.origHeight = this.getAttribute( 'height' ); 
            this.setMinMaxWidths();
        </method>

        <method name="restore">
            this.bringToFront();
            this.animate("x", this.origX, this.animDuration, false,
                         {motion:'easeout'});
            this.animate("y", this.origY, this.animDuration, false,
                         {motion:'easeout'});
            this.animate("width", this.origWidth, this.animDuration, false,
                         {motion:'easeout'});
            this.animate("height", this.origHeight, this.animDuration,
                         false,{motion:'easeout'});
        </method>
        
        <method name="maximize">
            this.bringToFront();
            this.animate("x", 18, this.animDuration, false, {motion:'easeout'});
            this.animate("y", 47, this.animDuration, false, {motion:'easeout'});
            this.animate("width", desktopimage.getAttribute( 'width' )-36,  
                          this.animDuration,  false,{motion:'easeout'});
            this.animate("height", desktopimage.getAttribute( 'height' )-64,
                         this.animDuration, false, {motion:'easeout'});

        </method>

        <method name="setMinMaxWidths">
            var topCenterWidth = 3;  //Antun code
            var minWidth = this.topRow.topLeft.getAttribute( 'width' )
                         + this.topRow.topTitle.getAttribute( 'width' )
                         + this.topRow.topTitleRight.getAttribute( 'width' )
                         + this.topRow.topRight.getAttribute( 'width' );
                         + topCenterWidth;
            minWidth = Math.ceil( minWidth );
            if (minWidth >this.minWindowWidth) this.minWindowWidth = minWidth;
        </method>

        <method name="hideWait">
            body.content.waiter.destroy();
        </method>

    </class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                         -->
