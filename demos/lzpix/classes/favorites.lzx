<library>
    <class name="verticalindent" >
        <view width="1" height="${parent.height}" bgcolor="0x2b2ba2" />
        <view width="1" x="1" height="${parent.height}"  bgcolor="0xffffff" />
    </class>

   <class name="favoriteslayout" extends="layout" >
        <!--- The axis in which this layout operates. One of 'x' or 'y'. -->
        <attribute name="axis" value="x" setter="this.setAxis( axis )" 
                   type="string" />
    
        <!--- A pixel amount to inset the first view controlled by the layout-->
        <attribute name="inset" value="0"
            setter="this.inset = inset;
                   if(this.subviews &amp;&amp; this.subviews.length ) this.update();
                   if (this['oninset']) this.oninset.sendEvent(this.inset)"/>
    
        <!--- A pixel amount to use between each view in the layout -->
        <attribute name="spacing" value="0"
                   setter="this.spacing = spacing;
                          if( this.subviews &amp;&amp; this.subviews.length ) this.update();
                          if (this['onspacing']) this.onspacing.sendEvent(this.spacing)"/>
    
        <attribute name="mymask" when="once"/>
        <attribute name="sizeAxis"/>

        <handler name="oninit">
            this.updateDelegate.register( parent,  "onx" );
        </handler>

        <!--- @keywords private -->
        <method name="setAxis" args="a" >
            this.axis = a;
            this.sizeAxis = a == "x" ? "width" : "height"
            //this.updateDelegate.register( parent,  "onheight" );
       </method>
    
        <!--- @keywords private -->
        <method name="addSubview" args="newsub">
            //this.updateDelegate.register( newsub,  "on" + this.sizeAxis);
            this.updateDelegate.register( newsub,  "onvisible" );
            //this is an optimization to avoid calling update in the simple case
            //where a single subview was just added
            if ( ! this.locked &amp;&amp; this.subviews.length ){
                var s= this.subviews[ this.subviews.length-1 ];
                var p =  s[ this.axis ] + s[ this.sizeAxis ] + this.spacing;
                newsub.setAttribute( this.axis , p  ) ;
            }
            super.addSubview( newsub );
        </method>
    
        <!--- This method is usually called automatically when any of the views
              controlled by the layout change their size in the layout axis, or
              their visibility. However it can be called directly to force the
              layout to update -->
        <method name="update" args="ignore=null">
            <![CDATA[
            if ( this.locked ) return;
            this.locked = true;
            var l = this.subviews.length;
            var c = this.inset;
    
            for(var i=0; i < l; i++) {
                var s = this.subviews[i]; 
                if ( !s.visible ) continue;
                
                if ( s[ this.axis ] != c ){
                    s.setAttribute( this.axis , c );
                }

                if ( c < -parent[ axis ] + mymask[ axis ] + mymask[ sizeAxis ] &&
                     s.height != parent.height - 5 ){
                    s.setAttribute('height', parent.height -5);
                }
                c += this.spacing + s[ this.sizeAxis ];
            }
            this.locked = false;
            ]]>
        </method>
    </class>
 
 <?ignore // Take out buttons to scroll favorites. Should be temporary. [ben 3.2.2006]
    <class name="buttonrepeater" extends="view" clickable="true" >
       <!---  @keywords private -->
       <attribute name="_lasttime" value="0"/>
       <!---  @keywords private -->
       <attribute name="stillDownDelegate" value="0"/>
       <attribute name="onmousestilldown"  value="null"/>
       <!---  @keywords private -->
       <method name="stillDownEventGenerator">
            var now = (new Date()).getTime();
            var diff = now - this._lasttime;
            this._lasttime = now;

            if (this.isMouseDown) {
                var next; 
                if (diff > 600) {
                    next = 500;
                } else {
                    next = 50;
                    this.onmousestilldown.sendEvent();
                }
                lz.Timer.resetTimer( this.stillDownDelegate, next );
            }
       </method>

       <!--- @keywords private -->
        <handler name="onmousedown">
            var now = new Date();
            this._lasttime = now.getTime();
            this.isMouseDown = true;
            if (!this.stillDownDelegate) {
               this.stillDownDelegate = new LzDelegate( this, "stillDownEventGenerator");
           }
            lz.Timer.addTimer( this.stillDownDelegate, 500 );
        </handler>
        <!--- @keywords private -->
        <handler name= "onmouseup">
            this.isMouseDown=false;
            lz.Timer.removeTimer( this.stillDownDelegate );
        </handler>
    </class>
?>    

 
 <class  name="favorites"   >
        <attribute name="titlearea"  value="0" type="number" />
        <attribute name="footerarea" value="5" type="number" />
        
        <method name="loadSet" args="tag">
            gSearch.setAttribute('text', tag );         
        
            if ( !canvas.isopen ) {
                gSearch.sendsearch_del.unregisterAll();
                var anm = canvas.setOpen(true); 
                gSearch.sendsearch_del.register(anm, 'onstop' );
            } else {
                gSearch.sendsearch();
             }            
        </method>

<?ignore // Take out buttons to scroll favorites. Should be temporary. [ben 3.2.2006]
        <buttonrepeater name="scrollright" resource="../assets/favorites/arrow-left.png" 
                        x="${-width-5}" y="${Math.round((parent.photos.height - this.height)/2) + parent.photos.y}">
            <handler name="onmousestilldown" >
                parent.photos.interior.animate( 'x', Math.min(parent.photos.interior.x + 30,0), 300 )
            </handler>
            <handler name="onmouseup" >
                parent.photos.interior.animate( 'x', Math.min(parent.photos.interior.x + 30,0), 100 )
            </handler>
            
        </buttonrepeater>
        
        <buttonrepeater name="scrollleft" resource="../assets/favorites/arrow-right.png" 
                        x="${parent.width + 5}"  y="${Math.round((parent.photos.height - this.height)/2) + parent.photos.y}" >
            <handler name="onmousestilldown" >
                parent.photos.interior.animate( 'x', parent.photos.interior.x - 30 , 300 )
            </handler>
            <handler name="onmouseup" >
                parent.photos.interior.animate( 'x', parent.photos.interior.x - 30 , 100 )
            </handler>            
        </buttonrepeater>
?>        
              
        <view name="photos" 
              y="${parent.height - height}" 
              height="${parent.height - parent.titlearea -  parent.footerarea }" 
              width="${parent.width}" clip="true"
              >
            <view name="interior" height="${parent.height}">
                <favoriteslayout name="lyt" spacing="15" inset="0" 
                                 mymask="parent.parent"/>
                <photo datapath="favoritesds:/rsp/photos/photo" visible="true">
                    <handler name="onclick">
                        photoscontainer.lyt.setAttribute('currentpage', 1);
                        var id = datapath.p.getAttr("id");
                        var tag = datapath.p.getAttr("favoritetag");   
                       classroot.loadSet( tag ); 
                    </handler>
                </photo>
            </view>
        </view>
<?ignore // Take out buttons to scroll favorites. Should be temporary. [ben 3.2.2006]
        <verticalindent height="${parent.height}" />
        <verticalindent height="${parent.height}" x="${parent.width - 2}" />
?>        
    </class>
</library>
<!--
* X_LZ_COPYRIGHT_BEGIN ****************************************************
* Copyright 2007, 2008 Laszlo Systems, Inc.  All Rights Reserved.          *
* Use is subject to license terms.                                        *
* X_LZ_COPYRIGHT_END ******************************************************-->
