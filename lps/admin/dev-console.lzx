<!--=======================================================================-->
<!--                                                                       -->
<!-- dev-console.lzx                                                       -->
<!--                                                                       -->
<!-- dev console SOLO app                                                  -->
<!--                                                                       -->
<!--=======================================================================-->


<canvas width="100%"  height="370" proxied="false">
  <include href="lz/textlistitem.lzx"/>
  <debug options="ignorelayout"
    fontsize="12" 
    x="73"
    y="100"
    width="800"
    height="270"/>
  <!-- flashvar named 'appinfo' will be supplied, it is XML data -->
  <script> 
    function escapeXML (str) {
    return ((new XML()).createTextNode(str)).toString();
    }
  </script>




  <!-- info we get is of the form 
  <appdata>
    <request opt-exists="false" 
             windows="true" 
             pocketpc="false" 
             query_args="&amp;debug=true&amp;lzr=swf7" 
             unopt-url="animation.lzx" 
             opt-url="animation.lzo" 
             fullpath="/lps-dev/examples/animation/animation.lzx" 
             url="animation.lzx" 
             opt-exists="true"
             appuid="2222222"
             console-remote-debug="true"
             lps="/lps-dev">
    <param value="true" name="debug"/>
    <param value="swf7" name="lzr"/>
   </request>
   <info runtime="swf7" 
         nondebug-up-to-date="false" 
         nondebug-exists="true" 
         debug-up-to-date="true" 
         debug-exists="true" 
         encoding="" 
         debug="true" gz-size="0" size="256968"/>
</appdata>

  -->


    <dataset name="appdata"/>
    <script>
      <![CDATA[
       appdata.setInitialData(global.appinfo);

       var app_runtime = appdata.getPointer().xpathQuery("/info/@runtime");
       if (app_runtime == null) {
         app_runtime = appdata.getPointer().xpathQuery("/request/param[@name = 'lzr']/@value");
       }
       var app_debug = appdata.getPointer().xpathQuery("/request/param[@name = 'debug']/@value");
       var app_console_debug = 
              appdata.getPointer().xpathQuery("/request/@console-remote-debug") == 'true';
       var app_floating_window = 
              appdata.getPointer().xpathQuery("/request/@console-floating-window") == 'true';
       var app_fullpath = appdata.getPointer().xpathQuery("/request/@fullpath");
       var app_query = appdata.getPointer().xpathQuery("/request/@query_args");
       var app_opt_url = appdata.getPointer().xpathQuery("/request/@opt-url");
       var app_unopt_url = appdata.getPointer().xpathQuery("/request/@unopt-url");
       var app_url = appdata.getPointer().xpathQuery("/request/@url");
       var app_opt_exists = appdata.getPointer().xpathQuery("/request/@opt-exists")
       var app_lps_root = appdata.getPointer().xpathQuery("/request/@lps")
       var app_lzt = null;
       var app_krank = false;
       var app_uid = (typeof(global.lzappuid) != 'undefined') ? "_"+global.lzappuid : '';
       var app_viewkranked = app_fullpath.substring(app_fullpath.length - 4) == '.lzo';
       ]]>
    </script>

    <method name="lastKranked">
    // substitute .lzo for .lzx
      app_fullpath = app_fullpath.substring(0,app_fullpath.length -4)+".lzo";
      canvas.reloadApp();
    </method>


  <method name="deploySOLO">
     var path = escape(app_fullpath.substring(app_lps_root.length));
     var url = app_lps_root + "/lps/admin/solo-deploy.jsp?appurl="+path;
     LzBrowser.loadURL(url);
  </method>


   <method name="debugApp">
     cb_debug.setValue(true); 
     canvas.reloadApp();
   </method>

   <method name="viewSource">
     app_lzt = 'source';
     canvas.reloadApp();
   </method>

   <method name="viewWrapper">
     app_lzt = 'deployment';
     canvas.reloadApp();
   </method>

   <method name="krankApp">
     app_krank = true;
     canvas.reloadApp();
   </method>

   <method name="viewDocs">
     var url = app_lps_root + "/docs/index.html";
     LzBrowser.loadURL(url);
   </method>
   
   <method name="viewDev">
     var url = "http://www.laszlosystems.com/developers";
     LzBrowser.loadURL(url);
   </method>
   
   <method name="viewForums">
     var url = "http://www.laszlosystems.com/developers/community/forums/";
     LzBrowser.loadURL(url);
   </method>
   
  <resource name="footer_logo" src="../assets/logo_laszlo_footer.gif"/>

  <view name="main" width="${parent.width}">
      <view name="logo" resource="footer_logo" bgcolor="0x4c4c4c" height="100%"/>
      <view name="controls" x="70">
        <view name="firstrow" visible="${app_viewkranked == false}" y="4">
            <text fontsize="11" x="8" y="7"><b>Compile Options:</b></text>
            <drawview x="125" name="compilecontrols">
                <method event="oninit">
                    this.rect(0, 0, 308, 31);
                    this.stroke();
                </method>
                <radiogroup id="rg_runtime" layout="class: simplelayout; axis: x; spacing:4" x="6" y="8.75">
                    <radiobutton id="rb6" value="'swf6'"
                    selected="${app_runtime == 'swf6'}">swf6</radiobutton>
                    <radiobutton id="rb7" value="'swf7'" 
                    selected="${app_runtime == 'swf7'}">swf7</radiobutton >
                    <radiobutton id="rb8" value="'swf8'"
                    selected="${app_runtime == 'swf8'}">swf8</radiobutton >
                </radiogroup>
                <view height="14" width="1" bgcolor="black" x="161" y="9.5"/>
                <checkbox id="cb_debug" value="${app_debug}" x="170" y="8.25">Debug</checkbox>
                <button onclick="canvas.gotoApp()" x="233" y="4">Compile</button>
            </drawview>
            <view width="22" x="439"/>
            <button onclick="canvas.krankApp()" x="465" y="3">Krank</button>
            <button id="lastopt" visible="${app_opt_exists == 'true'}"
                    onclick="canvas.lastKranked()" x="529" y="3">Last Kranked</button>
            <button onclick="canvas.viewSource()" x="${app_opt_exists == 'true' ? 634 : 529}" y="3">View Source</button>
        </view>
        <view visible="${app_viewkranked != false}" width="530">
            <text fontsize="11" x="8" y="11"><b>You are viewing the Kranked version of the application</b></text>
            <button onclick="canvas.gotoApp()" x="376" y="7">Return to Original</button>
        </view>
        
        <view bgcolor="black" width="8000" height="1" y="39"/>
          
        <view width="${app_viewkranked != false ? 550 : parent.firstrow.width}" y="43">
          <text fontsize="11" x="8" y="4"><b>Deploy:</b></text>
          <button x="65" onclick="canvas.viewWrapper()">Server</button>
          <button x="134" onclick="canvas.deploySOLO()">SOLO</button>

          <view fgcolor="0x15159b" y="3" options="ignorelayout" align="right">
            <text onclick="canvas.viewDocs()"><u>Documentation</u></text>
            <text x="92" onclick="canvas.viewDev()"><u>Developer Network</u></text>
            <text x="208" onclick="canvas.viewForums()"><u>Developer Forums</u></text>
          </view>
          
        </view>

          <!--
            <view datapath="appdata:/" >
            <simplelayout/>
            <text resize='true'  datapath="request/@url"/>
            <text resize='true'  datapath="request/@fullpath"/>
            <text resize='true'  datapath="info/@runtime"/>
            </view>
          


        <view layout="axis:x;spacing:2">
       <combobox  id="krank_combo" editable="false"
                  shownitems="2" width="200">
        <method event="oninit">
            var lzxpath = app_fullpath.substring(0,app_fullpath.length -4)+".lzx";
            var lzopath = app_fullpath.substring(0,app_fullpath.length -4)+".lzo";
            new textlistitem(this, { text: app_unopt_url, value: lzxpath });
            if (app_opt_exists == "true") {
                new textlistitem(this, { text: app_opt_url, value: lzopath });
            }
        </method>
    </combobox>



          <view width="50" name="spacer"/>
          

        </view>

          <view name="blank2" width="200"/>

          -->
          <!-- this feature is not yet ready for prime time           
          <checkbox id="cb_remotedebug" value="${app_console_debug}">Console Remote Debug</checkbox>
          -->

          <!-- <checkbox id="cb_popup" value="${app_floating_window}">in separate window</checkbox> -->



        <!--
        <view layout="axis:x;spacing:4" visible="${app_console_debug}">
        -->
          <!-- enter expression to be sent to app under debug -->
        <!--
          <text resize="true" text="${'Evaluate in '+app_url}"/>
          <edittext  doesenter="true" id="expr2" width="300">
            <method name="doEnterDown">
              canvas.remoteEval(expr2.getText());
            </method>
          </edittext>
          <button enabled="false" bgcolor="white" id="app_eval_btn"
                onclick="canvas.remoteEval(expr2.getText())">Eval</button>
          <button onclick="app_eval_btn.setAttribute('enabled', true);
                           canvas.sendConsoleAlive()">Connect To App</button>
        </view>

        <window title="console" id="console"
                visible="${app_console_debug}" width="1000"  y="100" height="200" resizable="true">
          <method name="write" args="objects">
            <![CDATA[
            var n = arguments.length
            // Pass each value to __write individually so they can be
            // 'presented' as objects if applicable
            for (var i = 0; i < n; i++) {
               var v = arguments[i];
               var s = ((i == (n-1)) ? '\n' : ' ');
              this.content.addText(escapeXML(v)+s);
              sbar.page(sbar.scrollmax);
            }
            ]]>
          </method>

          <method name="writeRaw" args="objects">
            <![CDATA[
            var n = arguments.length
            // Pass each value to __write individually so they can be
            // 'presented' as objects if applicable
            for (var i = 0; i < n; i++) {
               var v = arguments[i];
               var s = ((i == (n-1)) ? '\n' : ' ');
              this.content.addText(v+s);
              sbar.page(sbar.scrollmax);
            }
            ]]>
          </method>
          <text name="content" multiline='true' resize="true"
                width="${parent.width}" />
          <scrollbar name="sbar" id="sb"/>
        </window>


        -->

      </view>
  </view>


  <method name="gotoApp">              
    // reload the page with the .lzx path
    var p = app_fullpath.substring(0,app_fullpath.length -4)+".lzx";
    app_fullpath = p;
    this.reloadApp();
  </method>
  
  <method name="reloadApp" args="source">
    <![CDATA[
    var qruntime = rg_runtime.value;
    var qdebug = cb_debug.value;
    var consoledebug = cb_remotedebug.value;
    
    // parse original app query string, override with user settings
    // for debug, runtime, etc
    var params = new LzParam(this);
    
    var qitems = LzParam.prototype.parseQueryString(app_query);
    // override debug,runtime args
    qitems['debug'] = qdebug;
    qitems['lzr'] = qruntime;

    /*
    // code to instruct server to pop up debug console in own window (doesn't work in Firefox)
    if (cb_popup.value) {
       qitems['lzconsolewindow'] = true;
    }
    */

    // and lzconsoledebug = true
    if (consoledebug) {
        qitems['lzconsoledebug'] = true;
        qitems['debug'] = true;
    } else {
        delete qitems.lzconsoledebug;
        delete qitems.remotedebug;
    }

    // can be {swf,source,deployment}
    if (app_krank) {
      qitems['krank'] = 'true';
      qitems['debug'] = 'false';
    } else {
       if (app_lzt != null) {
         qitems['lzt'] = app_lzt;
       }
       delete qitems.showKrankDuration;
    }
    

    // Copy values to LzParam object
    for ( var key in qitems) {
        params.setValue(key, qitems[key]);
    }

    var url = app_fullpath+"?"+params.serialize();

    //Debug.write('LzBrowser.loadURL("'+url+'")');
    LzBrowser.loadURL(url);

    ]]>
  </method>

  <method name="displayObjectByID" args="uid">
    <![CDATA[
    // Send a <inspect id="uid"> command
    var seqnum = this.evalseqnum++;
    var myXML = new XML();
    var exec = myXML.createElement("inspect"); 
    myXML.appendChild(exec);
    exec.attributes.seq = seqnum;
    exec.attributes.id = uid;
    receivingLC.send("lc_appdebug"+app_uid, "evalExpr", myXML);
    ]]>
  </method>


  <method name="showLogMessage" args="msg">
      <![CDATA[
      console.writeRaw(escapeXML(msg)+"<br>");
      ]]>
  </method>


  <method name="showWarning" args="filename,lineNumber,msg">
      <![CDATA[
       console.writeRaw("<font color='#ff0000'>WARNING: "+filename+":"+lineNumber+": "+escapeXML(msg)+'</font><br>');
       ]]>
  </method>

  <method name="sendConsoleAlive">
    <![CDATA[                
      receivingLC.send("lc_appdebug"+app_uid, "consoleAlive", true);
    ]]>
  </method>

  <method name="remoteEval" args="expr">
    <![CDATA[
    receivingLC.send("lc_appdebug"+app_uid, "evalExpr", expr);
    ]]>
  </method>


  <!--script>
    <![CDATA[
    var receivingLC = new LocalConnection();
    // receives remote app debug message
    receivingLC.debugResult = function(msg, oid) 
    { 
        if (oid != null) {
            console.writeRaw('<a href="asfunction:_root.canvas.displayObjectByID,' + oid + '"><font color="#0000FF">' + msg +"</font></a>");
        } else {
            console.write(msg);
        }
    }

    // display warnings
    receivingLC.debugWarning = canvas.showWarning;
    
    console.write("listening on lc_consoledebug"+app_uid);
    receivingLC.connect("lc_consoledebug"+app_uid);

    var sendingLC = new LocalConnection();

    // sequence numbers for eval requests
    canvas.evalseqnum = 0;
    
    ]]>
  </script-->


</canvas>
