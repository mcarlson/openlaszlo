<library>
    <include href="base/basecomponent.lzx"/>

    <!--- Abstract class for making buttons with up-over-down states. -->
    <class name="basebutton" extends="basecomponent" styleable="false">

        <!--- Since basebutton is frequently used as part of another component,
              default is false. -->
        <attribute name="focusable" value="false"/>

        <!--- The resource for the mouse up state, and initial state of the
              button. Default: 1.
              @keywords final -->
        <attribute name="normalResourceNumber" type="number" value="1"/>

        <!--- The resource for the mouse over state, default: 2. 
              Use 0 if the resource has at least 2 frames, but there is no over
              state.
              @keywords final -->
        <attribute name="overResourceNumber" type="number" value="2"/>

        <!--- The resource for the mouse down state, default: 3.
              Use 0 if the resources has at least 3 frames, but there is no down
              state.
              @keywords final -->
        <attribute name="downResourceNumber" type="number" value="3"/>

        <!--- The resource for the disabled state, default: 4.
              Use 0 if the resource has at least 4 frames, but there
              is no disabled state.
              @keywords final -->
        <attribute name="disabledResourceNumber" type="number" value="4"/>

        <!--- The maximum number of frames to use, defaults to the number of
              frames for the resource associated with this view. This is useful
              for a subclass that has no resource for this view. Default is the total
              frames of basebutton.
              @keywords final -->
        <attribute name="maxframes" value="$once{this.totalframes}" type="number"/>

        <!--- The first 'n' subviews that will respond to mouseevents by
              changing the frame number of their resource. -->
        <attribute name="resourceviewcount" type="number"
                   value="0" setter="this.setResourceViewCount(resourceviewcount)"/>

        <!--- If this button does not respond to onmouseout or onmousedragout
              events, set this flag to false. Default: true. -->
        <attribute name="respondtomouseout" value="true" />

        <!--- Where to send mouse events (the view that will be "clickable"), default: this.
              @keywords final -->
        <attribute name="reference" value="this" when="once" setter="setreference(reference)"/>

        <!--- This event is sent when the resourceviewcount changes. -->
        <attribute name="onresourceviewcount" value="null" />

        <!--- This event is sent when button the clicked. -->
        <attribute name="onclick" value="null" />

        <!---  @keywords private -->
        <attribute name="_msdown" value="false" />
        <attribute name="_msin" value="false" />

        <!--- Setter for attribute resourceviewcount.
             @param Number rvc: the resource view count. -->
        <method name="setResourceViewCount" args="rvc"><![CDATA[
            this.resourceviewcount = rvc;
            if (this._initcomplete) {
                if ( rvc > 0 ) {
                    if ( this.subviews) {
                        this.maxframes = this.subviews[0].totalframes;
                        if (this.onresourceviewcount) {
                            this.onresourceviewcount.sendEvent();
                        }
                    }
                }
            }
        ]]> </method>

        <method name="_callShow"><![CDATA[
            if ( this._msdown && this._msin && 
                 this.maxframes >= this.downResourceNumber ) this.showDown();
            else if ( this._msin && 
                      this.maxframes >= this.overResourceNumber) this.showOver();
            else this.showUp();
        ]]> </method>

        <method args="m" event="onmode" reference="LzModeManager">
            <![CDATA[ 
            if ( m && ( this._msdown || this._msin ) &&
                 !this.childOf( m ) ){
                this._msdown = false;
                this._msin = false;
                this._callShow();
            }
            ]]> 
        </method>

        <!--- Overrides view's method for resourceviewcount.
              @param Number r: resource number.
              @keywords private -->
        <method name="setResourceNumber" args="r"><![CDATA[
            if ( this.resourceviewcount > 0 ) {
                for (var i = 0;i < resourceviewcount; i++ ) {
                    this.subviews[i].setResourceNumber(r);
                }
            } else {
                super.setResourceNumber(r);
            }
       ]]> </method>

        <!--- When the space bar is down, basebutton shows its down state. -->
        <method name="doSpaceDown">
            <![CDATA[
            if ( this._enabled) {
                this.showDown();
            }
            ]]>
        </method>

        <!--- When the space bar is up, basebutton shows its up state. -->
        <method name="doSpaceUp">
            <![CDATA[
            if ( this._enabled) {
                this.onclick.sendEvent();
                this.showUp();
            }
            ]]>
        </method>

        <!--- @keywords private -->
        <method event="ontotalframes">
            if ( this.isinited ) {
                this.maxframes = this.totalframes;
                this._callShow();
            }
        </method>

        <!--- @keywords private -->
        <method name="init">
            // now that subviews are created reset resourceviewcount
            super.init();
            this.setResourceViewCount(this.resourceviewcount);
            this._callShow();
        </method>
        
        <method event="onmouseover">
            this.setAttribute( '_msin' , true );
            this._callShow();
        </method>

        <method event="onmouseout">
            this.setAttribute( '_msin' , false );
            this._callShow();
        </method>

        <method event="onmousedown">
            this.setAttribute( '_msdown' , true );
            this._callShow();
        </method>

        <method event="onmouseup">
            this.setAttribute( '_msdown' , false );
            this._callShow();
        </method>

        <!--- Sets clickable to true and shows appropriate resource.
              @keywords private -->
        <method name="_showEnabled"> <![CDATA[
            reference.setAttribute('clickable', _enabled);
            showUp();
        ]]>
        </method>

        <!--- This function is called whenever the button's visible state
              should appear to be down.
              @param Boolean sd: unused. -->
        <method name="showDown" args="sd">
            this.setResourceNumber( this.downResourceNumber );
        </method>

        <!--- This function is called whenever the button's visible state
              should appear to be up. 
              @param Boolean sd: unused. -->
        <method name="showUp" args="sd"> <![CDATA[
            if (!_enabled && this.disabledResourceNumber) {
                this.setResourceNumber( this.disabledResourceNumber );
            } else {
                this.setResourceNumber( this.normalResourceNumber );
            }
        ]]>
        </method>

        <!--- This function is called whenever the button's visible state should
              appear to be hilited to indicate that it can be clicked. 
              @param Boolean sd: unused. -->
        <method name="showOver" args="sd">
            this.setResourceNumber( this.overResourceNumber );
        </method>

        <!--- @keywords private -->
        <method name="setreference" args="r">
             this.reference = r;
             if (r != this) this.setClickable(false)
        </method>

        <!--- @keywords private -->
        <method name="_applystyle" args="s">
            setTint(this, s.basecolor);
        </method>
    </class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                         -->
