<library>
    <include href="redmondfonts.lzx" />
    <resource src="./resources/lzcheckbox_rsc.swf" name="LzCheckbox_rsc" />

    <class name="checkbox" extends="view" font="lztahoe8" fontsize="8" 
        onmousedown="this.gotPress()">
        <attribute name="amChecked" value="false"/>
        <attribute name="amActive" value="true"/>
        <attribute name="text" type="text" setter="setText(text)"/>

        <attribute name="label" type="string" setter="setText(label)"/>

        <view name="checkboxart" resource="LzCheckbox_rsc"/>
        <text name="labeltext" x="16" y="1" text="${parent.text}" resize="true"/>
        <attribute name="initcomplete" value="false"/>
        <method event="oninit">

            this.initcomplete = true;
            if (this.amChecked) this.onamChecked.sendEvent();
            if (!this.amActive) this.onamActive.sendEvent();
        </method>


        <!-- label & text are synonyms for backwards compatibility -->
        <method name="setText" args="t">
            this.text=t;
            this.label=t;
            if (this['ontext']) this.ontext.sendEvent();
            if (this['onlabel']) this.onlabel.sendEvent();
        </method>
        <method name="gotPress">
            if ( this.amActive ){
                setAttribute('amChecked', !this.amChecked);
            }
        </method>
        <method event="onamChecked">
            if (initcomplete)
                this.checkboxart.setResourceNumber( this.amChecked ? 2 : 1 );
        </method>

        <method name="setActive" args="amAct">
            //@field amActive: Bool. If true, checkbox is active.
            if (typeof(amAct) == "undefined") amAct = false;
            setAttribute('amActive', amAct);
        </method>

        <method event="onamActive">
            this.checkboxart.setResourceNumber( this.amActive ? ( this.amChecked ? 2 : 1 ) : 3 );
        </method>

        <method name="applyData" args="d">
            //-----------------------------------------------------------------------------
            // Called to update the checkbox to a data result
            // @keywords private
            //-----------------------------------------------------------------------------
            this.setAttribute('amChecked', d==1 ? true : false);
        </method>

        <method name="clearData">
            //-----------------------------------------------------------------------------
            // Restores the checkbox to unchecked. Called in case of error in the data
            // result
            // @keywords private
            //-----------------------------------------------------------------------------
            this.setAttribute('amChecked', false);
        </method>

        <method name="updateData">
            //-----------------------------------------------------------------------------
            // Called to get a value from the checkbox to put into the database
            // @keywords private
            //-----------------------------------------------------------------------------
            return this.amChecked ? "1" : "0";
        </method>
    </class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                         -->
