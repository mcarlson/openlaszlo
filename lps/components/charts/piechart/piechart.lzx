<library>
    <include href="../styles/chartstyle.lzx"/>
    <include href="../common/dataseries.lzx"/>
    <include href="../common/viewspoolmanager.lzx"/>
    <include href="../common/virtualdrawview.lzx"/>
    <include href="../common/datalabel.lzx"/>
    <include href="../common/chart.lzx"/>
    <include href="charts/common/legend.lzx"/>
    <include href="piepiece.lzx"/>
    <include href="piechartplotarea.lzx"/>
    
    <!--- A pie chart represents a chart that is displayed in the 2D
          polar plane. This class inherits immediatly from chart class
          and can be instatiated directly. -->
    <class name="piechart" extends="chart">

        <!--- @keywords private -->
        <method name="init">
            plotarea = this.getNodeOfClass("piechartplotarea");
            _datalabelpool = this.createLabelViewspool();
            super.init();            
        </method>    

        <!--- Renders the plot area which is an instance of the piechartplotarea 
              class. The plot area requires to read a group of two data series, one
              for the groups that are represented by the pie slices and the second
              for their values. -->
        <method name="renderPlotArea">
        <![CDATA[
            super.renderPlotArea();
            plotarea.clear();

            var topseries = this.getDataSeries();
            
            //var numSeries = topseries.getNumDataSeries();
            var numSeries = 1;
 
                                
            for(var i = 0; i < numSeries; i++)
            {
                var leafseries = topseries.getDataSeries(i);
                //FIXME!!(LHCR, 5/06/2005): Read hard coded data columns - 'x', 'y'
                if(leafseries.getDataColumn("x") != null){
                    var xseries = leafseries.getDataColumn("x").values;
                } else {
                    var xseries = null;
                }
                if(leafseries.getDataColumn("y") != null){
                    var yseries = leafseries.getDataColumn("y").values;
                } else {
                    var yseries = null;
                }
                var tooltipseries;// = leafseries.getDataColumn(this.datatipColumn).values; 
                
                plotarea.renderSeries(xseries, yseries, tooltipseries);          
            }
            if ( this.datalabelEnabled ){
                this.renderDataLabels();
            }

        ]]>
        </method>
        
        <!--- Renders the labels that display the values of the data series. -->
        <method name="renderDataLabels">
        
            <![CDATA[
                _datalabelpool.reclaimAll();
            
                var arrPiePieces = this.plotarea.arrPiePieces;
                var topseries = this.getDataSeries();
                var leafseries = topseries.getDataSeries(0);
                    //FIXME!!(LHCR, 5/06/2005): Read hard coded data columns - 'x', 'y'
                if(leafseries.getDataColumn(this.datalabelColumn) != null){
                    var yseries = leafseries.getDataColumn(this.datalabelColumn).values;
                } else {
                    var yseries = null;
                }

                for(var i = 0; i < arrPiePieces.length; i++){ 
                    piePiece = arrPiePieces[i];  
                    
                    var lbl = _datalabelpool.getView();
                    var ldatastyle = piePiece.style;
                    lbl.setAttribute('style', ldatastyle.label);
                    lbl.render(yseries[i]);
                    piePiece.renderLabel(lbl);
                }
            ]]>
                
        </method>
        
        <!--- The plot area where the pie slices are rendered -->
        <piechartplotarea name="plotarea" x="50" y="20" width="500" height="300"/>
    </class>
    
</library> 
<!-- * X_LZ_COPYRIGHT_BEGIN 
***************************************************
* Copyright 2001-2006 Laszlo Systems, Inc.  All Rights Reserved.              
* Use is subject to license terms.                                            
* X_LZ_COPYRIGHT_END 
****************************************************** -->
<!-- @LZX_VERSION@                                                       
   -->