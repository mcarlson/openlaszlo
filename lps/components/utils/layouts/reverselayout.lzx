<library>
    <!-- Layout that puts things in reverse order and optionally starts at the bottom -->
    <!-- or right of the parent view                                                  -->
    <class name="reverselayout" extends="layout" >
        <!--- The axis in which this layout operates. One of 'x' or 'y'. -->
        <attribute name="axis" value="y" setter="this.setAxis( axis )" 
                   type="string" />
        <!--- @keywords private -->
        <attribute name="sizeAxis" value="height" type="string" /> 
        <!--- A pixel amount to inset the last view controlled by the layout-->
        <attribute name="inset" value="0"/>
        <!--- When true (the default), then the layout will push the subviews 
              to the right (or bottom) of the containing view -->
        <attribute name="end" type="expression" value="true"/>
        <!--- A pixel amount to use between each view in the layout -->
        <attribute name="spacing" value="0"
                   setter="this.spacing = spacing; 
                          if( this.subviews.length ) this.update()"/>
    
        <!--- setter for the axis attribute. The default value is 'y' 
              @param string a: 'x' oy 'y' -->
        <method name="setAxis" args="a" >
            this.axis = a;
            this.sizeAxis = a == "x" ? "width" : "height"
        </method>

        <!--- @keywords private -->
        <handler name="oninit">
            this.updateDelegate.register( this.parent, "on" + this.sizeAxis );
        </handler>
    
        <!--- @keywords private -->
        <handler name="onend">
            this.reset();
        </handler>

        <!--- @keywords private -->
        <method name="addSubview" args="newsub">
            this.updateDelegate.register( newsub,  "on" + this.sizeAxis);
            this.updateDelegate.register( newsub,  "onvisible" );
            super.addSubview( newsub );
            // A new view means resetting everything
            this.reset();
        </method>

    <!--- This method is usually called automatically when any of the views
          controlled by the layout change their size in the layout axis, or
          their visibility. However it can be called directly to force the
          layout to update -->
        <method name="update">
            <![CDATA[
            if ( this.locked ) return;

            if (this.end) {
                var total = this.inset;
                var l = this.subviews.length;
                for(var i=0; i < l; i++) {
                    var s = this.subviews[i]; 
                    if ( !s.visible ) continue;
                    total += s[ this.sizeAxis ] + spacing;
                }
                
                if (total < this.parent[ this.sizeAxis ]) {
                    total = this.parent[ this.sizeAxis ];
                }
        
                var c = total - this.inset;
                for(var i=0; i < l; i++) {
                    var s = this.subviews[i]; 
                    if ( !s.visible ) continue;
                    c -= s[ this.sizeAxis ];
                    if (c) s.setAttribute( this.axis , c );
                    c -= this.spacing;
                }
            } else {
                
                var l = this.subviews.length;
                var c = this.inset;
        
                for(var i=l-1; i >= 0; i--) {
                    var s = this.subviews[i];
                    if ( !s.visible ) continue;
                    if ( s[ this.axis ] != c ){
                        s.setAttribute( this.axis , c );
                    }
                    c += this.spacing + s[ this.sizeAxis ];
               }
            }
        ]]></method>
    </class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2006, 2008 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                         -->
