<library>
    <include href="styledtext.lzx" />
    <include href="base/basedatacombobox.lzx" />
    <include href="tooltip/tooltip.lzx" />

    <!--- mouseover/selection for combobox list items -->
    <resource name="lzcomboitem_bg_rsc">
        <frame src="resources/combobox/row_mo.swf"/>
        <frame src="resources/combobox/row_slct.swf"/>
    </resource>

    <!-- small button resource: used by buttons and new combobox -->
    <resource name="lzcombobox_left_rsc" >
        <frame src="resources/button/small/sm_btn_up_lft.png" />
        <frame src="resources/button/small/sm_btn_mo_lft.png" />
        <frame src="resources/button/small/sm_btn_dn_lft.png" />
        <frame src="resources/button/small/sm_btn_dsbl_lft.swf" />
        <frame src="resources/combobox/combo_lft_sqbot_up.png" />
        <frame src="resources/combobox/combo_lft_sqbot_mo.png" />
        <frame src="resources/combobox/combo_lft_sqbot_dn.png" />
        <frame src="resources/combobox/combo_lft_sqtop_up.png" />
        <frame src="resources/combobox/combo_lft_sqtop_mo.png" />
        <frame src="resources/combobox/combo_lft_sqtop_dn.png" />
    </resource>

    <resource name="lzcombobox_right_rsc" >
        <frame src="resources/button/small/sm_btn_up_rt.png" />
        <frame src="resources/button/small/sm_btn_mo_rt.png" />
        <frame src="resources/button/small/sm_btn_dn_rt.png" />
        <frame src="resources/button/small/sm_btn_dsbl_rt.swf" />
        <frame src="resources/combobox/combo_rt_sqbot_up.png" />
        <frame src="resources/combobox/combo_rt_sqbot_mo.png" />
        <frame src="resources/combobox/combo_rt_sqbot_dn.png" />
        <frame src="resources/combobox/combo_rt_sqtop_up.png" />
        <frame src="resources/combobox/combo_rt_sqtop_mo.png" />
        <frame src="resources/combobox/combo_rt_sqtop_dn.png" />
    </resource>
    
    <resource name="button_small_middle_rsc" >
        <frame src="resources/button/small/sm_btn_up_mid.swf" />
        <frame src="resources/button/small/sm_btn_mo_mid.swf" />
        <frame src="resources/button/small/sm_btn_dn_mid.swf" />
        <frame src="resources/button/small/sm_btn_dsbl_mid.swf" />
    </resource>
    
    <resource name="downarrow_icon_rsc">
        <frame src="resources/combobox/combobox_arrow_up+dn.swf" />
        <frame src="resources/combobox/combobox_arrow_mo.swf" />
        <frame src="resources/combobox/combobox_arrow_up+dn.swf" />
        <frame src="resources/combobox/combobox_arrow_dsbl.swf" />
    </resource>
    
    <!--- Subclass used to create an item in a lzcombobox's list.  For laszlo mail, need custom selection/highlight graphics.
          @keywords private -->
    <class name="lzcombobox_item" extends="basedatacombobox_item" width="${null}" style="comboboxitem_style">
        <!--- white background to hide the superclass text -->
        <view name="bg" width="${parent.width}" height="${parent.height}" bgcolor="#ffffff" />
        <!--- selection/highlight background -->
        <view name="hilite" resource="lzcomboitem_bg_rsc" width="${parent.width}" stretches="width" visible="false"/>
        <!--- copy text over background -->
        <styledtext name="textview" text="${parent.text}" width="${parent.width}" x="3" y="1"
            style="$once{parent.style}" />
        
        <!--- modified hilite/select behavior from listitem component -->
        <!--- @keywords private -->
        <method name="setHilite" args="ishilited" >
            super.setHilite(ishilited);
            if (this._initcomplete) _applystyle();
        </method>
        
        <!--- @keywords private -->
        <method name="setSelected" args="isSelected" >
            super.setSelected(isSelected);
            if (this._initcomplete) _applystyle();
        </method>

         <!--- @keywords private -->
        <method name="_applystyle">
            if (selected) {
                this.hilite.setAttribute("visible", true);
                this.hilite.setResourceNumber(2);
                this.setTint(this.hilite, this.style.selectedcolor);
            }
            else if ( hilited ) {
                this.hilite.setAttribute("visible", true);
                this.hilite.setResourceNumber(1);
                this.setTint(this.hilite, this.style.hilitecolor);
            }
            else {
                this.hilite.setAttribute("visible", false);
            }
        </method>
    </class>

    <!--- Subclass of basedatacombobox with laszlo mail look. See basedatacombobox for
          details. Usage:
          <code>
          <dataset name="dsHours">
              <item value="1">1</item>
              <item value="2">2</item>
              <item value="3">3</item>
              <item value="4">4</item>
              <item value="5">5</item>
              <item value="6">6</item>
              <item value="7">7</item>
              <item value="8">8</item>
              <item value="9">9</item>
              <item value="10">10</item>
              <item value="11">11</item>
              <item value="12">12</item>
          </dataset>

          <lzcombobox width="50" shownitems="3" itemdatapath="dsHours:/item">
              <method event="onselect" args="dptr">
                  Debug.write('value:', this.value);
                  Debug.write('datapointer:', dptr);
              </method>
          </lzcombobox>
          </code>
    -->
    <class name="lzcombobox" extends="basedatacombobox" width="100" style="combobox_style" >
        <!--- The name of the class for items in the floating list. -->
        <attribute name="itemclassname" value="lzcombobox_item" type="string"/>
        
       <!--- Property _cbtext must be set by subclasses.
              @keywords private -->
        <attribute name="_cbtext" value="$once{this._text}" />

        <!--- tooltip text, if any -->
        <attribute name="tooltip" value="" type="text" />

        <view name="bkgnd" width="100%" clickable="${parent._enabled}">
            <attribute name="frnum" value="1"/>
            <method event="onclick">
                classroot.toggle()
                if (parent['onclick']) parent.onclick.sendEvent();
            </method>
            <method event="onmouseout">
                this.showState(1);
                if (parent['onmouseout']) parent.onmouseout.sendEvent();
            </method>
            <method event="onmouseup">
                this.showState(1);
                if (parent['onmouseup']) parent.onmouseup.sendEvent();
            </method>
            <method event="onmouseover">
                this.showState(2);
                if (parent['onmouseover']) parent.onmouseover.sendEvent();
            </method>
            <method event="onmousedown">
                this.showState(3);
                if (parent['onmousedown']) parent.onmousedown.sendEvent();
            </method>
            <view name="lft" resource="lzcombobox_left_rsc" />
            <view name="mid" resource="button_small_middle_rsc" stretches="width"/>
            <view name="rgt" resource="lzcombobox_right_rsc" />
            <stableborderlayout axis="x" />

            <view name="arr" resource="downarrow_icon_rsc" options="ignorelayout" 
                  x="${ parent.rgt.x - this.width + 2 }" y="1" />

            <tooltip text="${classroot.tooltip}"/>
            
            <!--- @keywords private -->
            <method event="onisopen" reference="parent">
                this.showState(this.frnum);
            </method>
        
            <!-- sets appearance of combobox by switching frame number of resource,
                depending on mouse state, whether list is open, and which direction the list is in.
                it is supposed to show a squared-off corner on the side that the list appears. -->
            <method name="showState" args="baseframe"><![CDATA[
                leftframe  = baseframe;
                rightframe = baseframe;
                
                // if not disabled and the list is open
                if ((baseframe < 4) && parent.isopen)
                {
                    leftframe += 4;                    
                    // if list displays towards the top, switch the resources to the next set
                    if (parent._cblist.attach == "top")
                        leftframe += 3;
                        
                    // the right resource changes only if the list is wider than the combo box itself
                    rightframe = (parent.listwidth > parent.width - this.rgt.width) ? leftframe : baseframe;
                }  
                this.setAttribute('frnum', baseframe);
                this.lft.setAttribute('frame', leftframe);
                this.mid.setAttribute('frame', baseframe);
                this.rgt.setAttribute('frame', rightframe);
            ]]></method>
        </view>

        <text name="_text" x="8" y="0"
              font="$once{parent.style.font}" 
              fontsize="$once{parent.style.fontsize}" 
              fgcolor="$once{parent.style.textcolor}"
              width="${ parent.width - 19 }" />

        <!--- @keywords private -->
        <method name="_applystyle" args="s">
            if (s != null) {
                this.setTint(this.bkgnd.lft, s.basecolor);
                this.setTint(this.bkgnd.mid, s.basecolor);
                this.setTint(this.bkgnd.rgt, s.basecolor);
            }
        </method>
    </class>

</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2005-2006 Laszlo Systems, Inc. All Rights Reserved.               *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                          -->
