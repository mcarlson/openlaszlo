<library>
    <!-- = Classes for widgets configurator =============================== -->
    <!-- ================================================================== -->
    <!-- ================================================================== -->
    
    
    <!-- = A generic grey dialog ========================================== -->

    <class name="dialog_box" bgcolor="0xeaeaea" width="340" height="200"
           visible="false">

        <attribute name="title" type="string" value="Dialog Box" />

        <method name="show">
            this.setVisible( true );
            this.bringToFront();
        </method>

        <method name="hide">
            this.setVisible( false );
            this.sendToBack();
        </method>

    </class>
    <!-- ================================================================== -->


    <!-- = Login box for users who already have an account ================ -->
    <class name="login_bar">
        <simplelayout axis="x" />
        <view name="loginButton" clickable="true" 
              resource="resources/loginbar_login_button.gif">
            <method name="setText" args="s">
                this.txt.setText( s );
            </method>

            <method event="onclick">
                var thisAction = this.txt.getText();
                if ( thisAction == "Log In" ) {
                    classroot.showLoginBox();
                } else if ( thisAction == "Log Out" ) {
                    classroot.logout();
                } else if ( thisAction == "Register" ) {

                }
            </method>

            <text name="txt" width="$once{parent.width-this.x}"
                  fontsize="14" x="10" valign="middle">Log In</text>
        </view>

        <!-- The contents bar has various "states" -->
        <view name="contents" resource="resources/loginbar_background.gif">
            <view name="addOrEditButton" onclick="classroot.showLoginBox()"
                  valign="middle">
                <text>Add new or edit existing widgets</text>
            </view>

            <view name="loginBox" visible="false" 
                  height="$once{parent.height}">

                <simplelayout axis="x" spacing="5" />

                <text valign="middle" height="16">email:</text>

                <edittext name="email" width="150" valign="middle" 
                              fontsize="7"
                              text="antun@antunkarlovac.com" />

                <text valign="middle">password:</text>

                <edittext name="password" valign="middle" 
                              fontsize="7"
                              text="foo" />

                <button height="18" onclick="classroot.doLogin()"
                        valign="middle">Login
                </button>

                <button height="18" onclick="classroot.showRegistrationBox();"
                        valign="middle">Register
                </button>

                <button height="18" onclick="classroot.hideLoginBox()"
                        valign="middle">Cancel
                </button>
            </view>

            <view name="registerBox" visible="false"
                  height="$once{parent.height}">

                <simplelayout axis="x" spacing="5" />

                <text valign="middle" height="16">email:</text>

                <edittext name="email" width="150" valign="middle" 
                              fontsize="7"
                              text="antun@antunkarlovac.com" />

                <text valign="middle">password:</text>

                <edittext name="password" valign="middle" 
                              fontsize="7"
                              text="foo" />

                <button height="18"
                        valign="middle">Register
                    <method event="onclick">
                        var ds = canvas.datasets.createAccount_ds;
                        var qs = "desiredemail=" 
                               + this.parent.email.getText()
                               + "&amp;desiredpassword="
                               + this.parent.password.getText();
                        ds.setQueryString( qs );
                        ds.doRequest();
                    </method>
                </button>

                <button height="18" onclick="classroot.hideLoginBox()"
                        valign="middle">Cancel
                </button>
            </view>

            <view name="loggedInUser" valign="middle"
                  width="${parent.width}" visible="false">
                <text name="txt" fontsize="10" width="400" />

                <button height="18" x="${parent.txt.width+10}"
                        valign="middle">Log Out
                    <method event="onclick">
                        classroot.doLogout();
                    </method>
                </button>

                <button height="18" align="right"
                        valign="middle">

                    <state name="openIntroduction" apply="true">
                        <attribute name="text" value="Introduction" 
                                   type="string" />

                        <method event="onclick">
                            accountArea.closeLoginArea();
                            this.closeIntroduction.apply();
                            this.openIntroduction.remove();
                        </method>
                    </state>

                    <state name="closeIntroduction" apply="false">
                        <attribute name="text" value="Back" 
                                   type="string" />

                        <method event="onclick">
                            accountArea.openLoginArea();
                            this.closeIntroduction.remove();
                            this.openIntroduction.apply();
                        </method>
                    </state>

                </button>
            </view>

            <view name="loginBarMessage" 
                  resource="resources/loginbar_background.gif" 
                  visible="false">
                <simplelayout axis="x" spacing="5" />
                <text name="txt" resize="true" valign="middle" />

                <button height="18" onclick="this.parent.setVisible( false )"
                        valign="middle">OK
                </button>
                
            </view>
        </view>
        
        <method name="hideAll">
            this.contents.addOrEditButton.setVisible( false );
            this.contents.loginBox.setVisible( false );
            this.contents.registerBox.setVisible( false );
            this.contents.loggedInUser.setVisible( false );
        </method>

        <method name="showLoginBox">
            this.loginButton.setText( "Log In" );
            this.hideAll();
            this.contents.loginBox.setVisible( true );
        </method>
        
        <method name="showDefaultText">
            this.loginButton.setText( "Log In" );
            this.hideAll();
            this.contents.addOrEditButton.setVisible( true );
        </method>

        <method name="hideLoginBox">
            this.loginButton.setText( "Log In" );
            this.contents.addOrEditButton.setVisible( true );
            this.showDefaultText();
            this.hideAll();
        </method>

        <method name="showRegistrationBox">
            this.loginButton.setText( "Register" );
            this.hideAll();
            this.contents.registerBox.setVisible( true );
        </method>

        <method name="hideRegistrationBox">
            this.loginButton.setText( "Log In" );
            this.contents.registerBox.setVisible( false );
            this.contents.addOrEditButton.setVisible( true );
        </method>

        <method name="showLoggedInUser" args="email">
            this.hideAll();
            this.contents.loggedInUser.setVisible( true );
            this.contents.loggedInUser.txt.setText( email );
        </method>

        <method name="doLogin">
            <![CDATA[
            var email = this.contents.loginBox.email.getText();
            var password = this.contents.loginBox.password.getText();
            accountArea.setAttribute( "email", email )
            accountArea.setAttribute( "password", password )
            var ds = canvas.datasets.login_ds;
            ds.setQueryString( "email=" + email + "&password=" + password );
            ds.doRequest();
            loader.show();
            ]]>
        </method>

        <method name="doLogout">
            debug.write( "doLogout called" );
            accountArea.setAttribute( "email", null )
            accountArea.setAttribute( "password", null )
            accountArea.hideLoginArea();
            // allWidgetsTempDataClear_dp.clearAllTempData();
            this.showDefaultText();

        </method>

        <method name="loginMessage" args="msg">
            this.contents.loginBarMessage.txt.setText( msg );
            this.contents.loginBarMessage.setVisible( true );
        </method>

        <method name="getAccountWidgets"><![CDATA[
            debug.write( "getAccountWidgets called" );
            var ds = canvas.datasets.allInstances_ds;
            ds.setQueryString( "email=" 
                                + this.contents.loginBox.email.getText() 
                                + "&password="
                                + this.contents.loginBox.password.getText() );
            ds.doRequest();
            ]]>
        </method>
        
    </class>
    <!-- ================================================================== -->

    <!-- = A single widget representation ================================= -->
    <class name="widget" width="340">
        <attribute name="widget_id" value="$path{'@id'}" />
        <attribute name="is_loggedin" value="false" />
        <attribute name="is_adding" value="true" />
        <attribute name="instance_id" value="0" type="number" />

        <method event="ondata">
            debug.write( "ondata in widget" );
        </method>

        <method name="makeLoggedIn">
            this.setAttribute( "is_loggedin", true );
            var dp = "allWidgetsTempData_ds:/widgets/widget_class[@id='"+this.widget_id+"']/widget_instance";
            yourSites.combo.pulldownElements.setDatapath( dp );
            // TODO: Make the combobox invisible when there are no sites.
        </method>

        <method name="makeLoggedOut">
            this.setAttribute( "is_loggedin", false );
            var dp = "allWidgetsTempData_ds:/widgets/widget_class[@id='"+this.widget_id+"']";
            allWidgetsTempDataClear_dp.setXPath( dp );
            allWidgetsTempDataClear_dp.resetTempData();
            // TODO: Clear cached widget_instances.
            // TODO: Got to here. The problem I think we're getting now is 
            //       that the ondata event in an unnamed datapointer is not
            //       firing when there are no instances in the new account.
            //       Adding instances to my data to verify.
            //       fixed this bug. the ondata event is firing now. need to 
            //       clear out the new instance node too.
        </method>

        <method name="selectInstanceToEdit" args="instance_id">
            this.setAttribute( "is_adding", false );
            this.setAttribute( "instance_id", instance_id );
            debug.write( 'selecting ' + instance_id );
            var dp = "allWidgetsTempData_ds:/widgets[1]/widget_class[@id='"
                   + this.widget_id 
                   + "']/widget_instance[@id='" 
                   + instance_id + "']";
            debug.write( "dp: " + dp );
            // debug.printlength = 4000;
            // debug.write( allWidgetsTempData_ds.serialize() );
            debug.write( "includeTextArea (before): " + this.includeTextArea );
            this.includeTextArea.setDatapath( dp );
            this.editSiteOptions.setDatapath( dp );
            this.editSiteOptions.updateTextBoxes(); // XXX
            this.showIncludeCode();
        </method>

        <method name="saveSite">
            // TODO: Retrieve values from the form
            var siteName = "My Smelly Site";
            var xmlURL = "http://www.smelly.com/myxml.xml";
            var siteURL = "www.smelly.com";
            var qs = "site_name=" + escape(siteName)
                   + "&amp;site_url=" + escape(siteURL )
                   + "&amp;xml_url=" + escape(xmlURL)
                   + "&amp;widget_id=" + escape(this.widget_id);
            if ( !this.is_adding ) {
                qs += "&amp;instance_id=" + this.instance_id;
            }
            qs += "&amp;email=" + escape(accountArea.email)
                + "&amp;password=" + escape(accountArea.password);
            addEditInstance_ds.setQueryString( qs );
            addEditInstance_ds.doRequest();
            this.clonemanager.setAttribute( "saveWidget", this );
            loader.show();
        </method>

        <method name="showIncludeCode">
            this.editSiteOptions.setVisible( false );
            debug.write( "includeTextArea (after): " + this.includeTextArea );
            this.includeTextArea.show();
        </method>

        <method name="showEditSiteOptions">
            this.includeTextArea.hide();
            this.editSiteOptions.setVisible( true );
        </method>

        <text name="title" fontsize="12" datapath="@title" /> 
        
        <text x="2" y="21" width="150" height="90" datapath="short_desc/text()"
              name="shortDesc" multiline="true" />

        <view name="screenshot" datapath="@img_url" x="158" clickable="true">
            <method name="applyData" args="d">
                this.setSource( d );
            </method>

            <method event="onclick">
                // TODO: Javascript popup window.
                debug.write( "Preview the app" );
            </method>
        </view>

        <button x="7" y="115">Create New
            <method event="onclick">
                if ( parent.is_loggedin ) {
                    classroot.setAttribute( "is_adding", true );
                    var widget_id = this.parent.widget_id;
                    var dp = "allWidgetsTempData_ds:/widgets/widget_class[@id='"+widget_id+"']/new_instance";
                    this.parent.editSiteOptions.setDatapath( dp );
                    this.parent.showEditSiteOptions();
                    newInstanceActions_dp.setXPath( dp );
                    newInstanceActions_dp.resetNewInstanceInformation();
                } else {
                    debug.write( "Need to log in or create account." );
                    // TODO: Add registration procedure that begins here.
                }
            </method>
        </button>


        <view name="yourSites" y="182" 
              visible="${parent.is_loggedin}">
            <text y="1" fontsize="9">Review Existing Site:</text>

            <combobox name="combo" x="188" width="130"
                      defaulttext="choose one..."
                      editable="false"
                      shownitems="3">
                <method event="onselect" args="d">
                    classroot.selectInstanceToEdit( d.value );
                </method>
                <textlistitem name="pulldownElements"   
                              datapath=""
                              />
                <!-- Note: textdatpath=""
                           Why did valuedatapath work without the "@" symbol?
                -->
            </combobox>
        </view>

        <view name="includeTextArea" y="600" 
              visible="false"
              width="$once{parent.width}">

            <datapath>
                <attribute name="datacontrolsvisibility" value="false" />
            </datapath>

            <attribute name="instance_id" value="$path{'@id'}" />


            <method name="show">
                this.setVisible( true );
                this.animate( "y", 223, 500, false );
                this.updateText();
            </method>

            <method name="hide">
                this.animate( "y", 600, 500, false );
                this.setVisible( false );
            </method>

            <method name="updateText"><![CDATA[
                var s = '&lt;!-- BlogBox --&gt;<br />';
                s += '&lt;script language="javascript" type="text/javascript" src="http://www.mylaszlo.com/projects/widgets/embedWidget.php?id=';
                s += this.instance_id;
                s += '&gt;&lt;/script&gt;<br />';
                s += '&lt;!-- /BlogBox --&gt;';
                this.includeText.setText( s );
                // TODO: Got to here. Just got it working. Probably want
                //       to delete includeText contents now.
                ]]>
            </method>

            <simplelayout axis="y" spacing="5" />

            <text width="200" datapath="@site_name"  />

            <text width="225" datapath="@site_url"  />

            <text width="225" datapath="@opml_url"  />

            <button align="right">Edit This Site
                <method event="onclick">
                    debug.write("editing "+this.parent.instance_id);
                    this.parent.parent.showEditSiteOptions();
                </method>
            </button>


            <text>Copy and paste the following text into an HTML page:</text>

            <text width="$once{parent.width-20}" name="includeText"
                  multiline="true" selectable="true"
                  x="10" bgcolor="0xF9F9F9">
&lt;!-- BlogBox --&gt;<br />
&lt;script language="javascript" type="text/javascript" src="http://www.mylaszlo.com/projects/widgets/embedWidget.php?id=1"&gt;&lt;/script&gt;<br />
&lt;!-- /BlogBox --&gt;
            </text>
            
            <button align="right">Cancel
                <method event="onclick">
                    this.parent.hide();
                </method>
            </button>
        </view>

        <view name="editSiteOptions" y="223" visible="false"
              datapath="">
            <simplelayout axis="y" spacing="15" />
            <method name="updateTextBoxes">
                // XXX
                // AK: TODO: Got to here. Confirmed that the datapath is
                //     getting set correctly, but bug still prevents this
                //     component from working properly.
                this.siteNameRow.siteNameTextField.datapath.updateData();
                Debug.write( "XXX: " + this.datapath.xpathQuery("@site_name") );
                Debug.write( this.datapath );
            </method>

            <view name="siteNameRow">
                <text x="7" y="2">Site Name:</text>
                <edittext name="siteNameTextField" x="75" width="256" 
                              >
                    <datapath>
                        <attribute name="datacontrolsvisibility" 
                                   value="false" />
                    </datapath>
                </edittext>
                <text y="25" width="305" multiline="true">Descriptive Name for the site where your Laszlo widget will live. e.g. "My Blog".</text>
            </view>

            <view>
                <text x="7" y="2">XML:</text>
                <edittext x="75" width="250">http://www.mylaszlo.com/foo</edittext>
                <text y="25" width="305" multiline="true">Full, exact HTTP URL for your XML file (more info). This external XML file specifies your Blogbox tab categories and links.</text>
            </view>

            <view>
                <text x="7" y="2">Site URL:</text>
                <edittext x="75" width="250">http://www.laszlosystems.com...</edittext>
                <text y="25" width="305" multiline="true">HTTP URL for the site that your Laszlo widget will live on.</text>
            </view>

            <view align="right">
                <simplelayout axis="x" spacing="15" />
                <button onclick="classroot.saveSite()">Save Site</button>
                <button onclick="classroot.editSiteOptions.setVisible(false)">
                    Cancel</button>
            </view>

        </view>

    </class>

    <!-- = Loading notification =========================================== -->
    <class name="loadingIndicator" resource="resources/wait_info.swf"
           visible="false" x="340" y="340" 
           options="ignorelayout">
        <method name="show">
            this.setVisible( true );
            this.bringToFront();
        </method>
        <method name="hide">
            this.setVisible( false );
        </method>
    </class>
    <!-- ================================================================== -->


    <!-- = Message area =================================================== -->
    <class name="messageHolder" 
           width="300" height="200"
           visible="false" x="240" y="300" 
           options="ignorelayout"
           opacity="0.8" bgcolor="white">
        <method name="show">
            this.setVisible( true );
            this.bringToFront();
        </method>
        <method name="hide">
            this.setVisible( false );
        </method>
        <method name="msg" args="msg">
            this.show();
            this.txt.setText( msg );
        </method>
        <text width="${parent.width}" height="${parent.height - 30}" 
              multiline="true" name="txt" />
        <button onclick="this.parent.hide()" 
                align="center" valign="bottom">OK</button>
    </class>
    <!-- ================================================================== -->


    <!-- = Where the user creates a new account =========================== -->
    <class name="registrationBox" bgcolor="0xBFBAFF"
           width="400" height="300"
           x="200" visible="false">
        <method name="show">
            debug.write( 'show' );
            LzModeManager.makeModal( this );
            this.setY( -1 * this.height );
            this.setVisible( true );
            this.animate( "y", 100, 250, false );
        </method>

        <method name="hide">
            LzModeManager.release( this );
            this.setVisible( false );
        </method>

        <method name="msg" args="s">
            this.msgArea.setText( s );
        </method>


        <simplelayout axis="y" spacing="10" />

        <text fontsize="14">Create a New Account</text>

        <text name="msgArea" width="$once{parent.width}" height="75" 
              multiline="true" />

        <view name="email">
            <simplelayout axis="x" spacing="10" />
            <text>Your Email:</text>
            <edittext name="email" width="200">antunkarlovac@yahoo.com</edittext>
        </view>

        <view name="password">
            <simplelayout axis="x" spacing="10" />
            <text>Desired Password:</text>
            <edittext name="password" width="200">smelly</edittext>
        </view>

        <view align="right">
            <simplelayout axis="x" spacing="10" />
            <button>Create Account
                <method event="onclick">
                    var ds = canvas.datasets.createAccount_ds;
                    var qs = "desiredemail=" + classroot.email.email.getText()
                           + "&amp;desiredpassword="
                           + classroot.password.password.getText();
                    ds.setQueryString( qs );
                    ds.doRequest();
                </method>
            </button>
            <button>Cancel
                <method event="onclick">
                    classroot.hide();
                </method>
            </button>
        </view>
    </class>
    <!-- ================================================================== -->
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
