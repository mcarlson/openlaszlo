<library>
    <include href="base/basecomponent.lzx"/>

    <class name="basebutton" extends="basecomponent" styleable="false">
        <!--- since basebutton is frequently used as part of another
              component, it is not focusable by default -->
        <attribute name="focusable" value="false"/>
        <!--- the resource for the mouse up state, 
              and initial state of the button -->
        <attribute name="normalResourceNumber" type="number" value="1"/>

        <!--- the resource for the mouse over state, default: 2.
            Use 0 if the resource has at least 2 frames, but there
            is no over state. -->
        <attribute name="overResourceNumber" type="number" value="2"/>

        <!--- the resource for the mouse down state, default: 3.
                Use 0 if the resources has at least 3 frames, but
                there is no down state. -->
        <attribute name="downResourceNumber" type="number" value="3"/>

        <!--- the resource for the disabled state, default: 4.
                Use 0 if there are the resource has at least 4 frames, but
                there is no disabled state. -->
        <attribute name="disabledResourceNumber" type="number" value="4"/>

        <!--- the maximim number of frames to use, defaults to the number
            of frames for the resoruce associated with this view.
            This is useful for a subclass has no resource for this view -->
        <attribute name="maxframes" value="$once{this.totalframes}" type="number"/>
        <!--- the first 'n' subviews that will be respond to mouseevents by changing 
            the frame number of their resource -->
        <attribute name="resourceviewcount" type="number" 
                   value="0" setter="this.setResourceViewCount(resourceviewcount)"/>
		<!--- if this button does not respond to onmouseout or onmousedragout events, set this flag to false -->
        <attribute name="respondtomouseout" value="true" />

        <!--- where to send mouse events (the view that will be "clickable"), default: this.
            This attribute may be specified in the tag only and cannot be modified
            at runtime by javascript. -->
        <attribute name="reference" value="this" when="once" setter="setreference(reference)"/>

        <!--- @keywords private event: when resourceviewcount changes -->
        <attribute name="onresourceviewcount" value="null" />

        <!--- @keywords private event: when button is clicked-->
        <attribute name="onclick" value="null" />

        <!---  @keywords private -->
        <attribute name="up_del" value="null" />
        <!---  @keywords private -->
        <attribute name="down_del" value="null" />
        <!---  @keywords private -->
        <attribute name="over_del" value="null" />
        <!---  @keywords private -->
        <attribute name="dsbl_del" value="null" />

        <!-- setter for attribute resourceviewcount -->
        <method name="setResourceViewCount" args="rvc"><![CDATA[
            this.resourceviewcount = rvc;
            if (this._initcomplete) {
                if ( rvc > 0 ) {
                    if ( this.subviews) {
                        this.maxframes = this.subviews[0].totalframes;
                        if (this.onresourceviewcount) {
                            this.onresourceviewcount.sendevent();
                        }
                    }
                }
            }
        ]]> </method>

        <method name="setResourceNumber" args="r"><![CDATA[
            if ( this.resourceviewcount > 0 ) {
                for (var i = 0;i < resourceviewcount; i++ ) {
                    this.subviews[i].setResourceNumber(r);
                }
            } else {
                super.setResourceNumber(r);
            }
       ]]> </method>

        <method name="doSpaceDown">
            <![CDATA[
            if ( this._enabled) {
                this.showdown();
            }
            ]]>
        </method>

        <method name="doSpaceUp">
            <![CDATA[
            if ( this._enabled) {
                this.onclick.sendEvent();
                this.showup();
            }
            ]]>
        </method>

        <method event="ontotalframes">
            if ( this.isinited ) {
                this.maxframes = this.totalframes;
                unregisterEventHandlers();
                registerEventHandlers();
            }
        </method>

        <!--- @keywords private -->
        <method name="init">
            // now that subviews are created reset resourceviewcount
            this.setResourceViewCount(this.resourceviewcount);
            registerEventHandlers();
            super.init();
            if (this._enabled) this.showUp();
        </method>

        <!--- @keywords private
              may be called repeatedly when new resources are assigned
              call unregisterEventHandlers before calling this again -->
        <method name="registerEventHandlers"> <![CDATA[
            if (this.up_del == null)  {
                this.up_del = new LzDelegate ( this, "showUp" );
                if ( this.respondtomouseout ) {
	                this.up_del.register( reference , "onmousedragout" );
	                this.up_del.register( reference , "onmouseout" );
                }
                this.up_del.register( reference , "onmouseup" );
            }

            if (this.downResourceNumber && this.maxframes >= this.downResourceNumber) {

                 if (this.down_del == null) {
                    this.down_del = new LzDelegate ( this, "showDown" );
                }
                this.down_del.register( reference , "onmousedragin" );
                this.down_del.register( reference , "onmousedown" );
            }

            if (this.overResourceNumber && this.maxframes >= this.overResourceNumber) {
                if (this.over_del == null) {
                    this.over_del = new LzDelegate ( this, "showOver");
                }
                this.over_del.register( reference , "onmouseover" );
                this.over_del.register( reference , "onclick" );
            }
        ]]> </method>

        <method name="unregisterEventHandlers">
            if (this.down_del != null) {
                this.down_del.unregisterall();
            }
            if (this.over_del != null) {
                this.over_del.unregisterall();
            }
        </method>

        <!--- sets clickable to true and shows appropriate resource -->
        <method name="_showEnabled"> <![CDATA[
            reference.setAttribute('clickable', _enabled);
            showUp();
        ]]>
        </method>

        <!-- This function is called whenever the button's visible state
             should appear to be down.   -->
        <method name="showDown" args="sd">
            this.setResourceNumber( this.downResourceNumber );
        </method>

        <!-- This function is called whenever the button's visible state
             should appear to be up.   -->
        <method name="showUp" args="sd"> <![CDATA[
            if (!_enabled && this.disabledResourceNumber) {
                this.setResourceNumber( this.disabledResourceNumber );
            } else {
                this.setResourceNumber( this.normalResourceNumber );
            }
        ]]>
        </method>

        <!-- This function is called whenever the button's visible state
             should appear to be hilited to indicate that it can be clicked.-->
        <method name="showOver" args="sd">
            this.setResourceNumber( this.overResourceNumber );
        </method>

        <!--- @keywords private -->
        <method name="setreference" args="r">
             this.reference = r;
             if (r != this) this.setClickable(false)
        </method>

        <!--- @keywords private -->
        <method name="_applystyle" args="s">
            setTint(this, s.basecolor);
        </method>
    </class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
