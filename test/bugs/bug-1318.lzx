<canvas width="800" height="600">
	<view>
		<simplelayout axis="y" spacing="10"/>
		<text fgcolor="0x00ff00" width="25" height="25">
			<attribute name="text" value="${mousepad.xcoord}" when="always"/>
			<attribute name="bgcolor" value="(mousepad.xcoord &lt;&lt; 16) | 
				(mousepad.xcoord &lt;&lt; 8) | mousepad.xcoord"
                                when="always" />
		</text>
		<text fgcolor="0x00ff00" width="25" height="25">
			<attribute name="text" value="${mousepad.ycoord}" when="always"/>
			<attribute name="bgcolor" value="(mousepad.ycoord &lt;&lt; 16) | 
				(mousepad.ycoord &lt;&lt; 8) | mousepad.ycoord"
                                when="always" />
		</text>
		
	</view>

	<class name="xtrack" extends="state">
		<attribute name="xcoord" value="${mousepad.getMouse('x')}"/>
	</class>
	<class name="ytrack" extends="state">
		<attribute name="ycoord" value="${mousepad.getMouse('y')}"/>
	</class>

	<view name="mousepad" bgcolor="0xeeeeee" width="255" height="255" clickable="true">
     	<attribute name="xcoord" value="Math.min(Math.max(this.getAttribute('xcoord'), 0), this.width - 1)" when="always"/>
     	<attribute name="ycoord" value="Math.min(Math.max(this.getAttribute('ycoord'), 0), this.height - 1)" when="always"/>
		<text label="Click inside the square, drag inside or outside"/>
     	
     	<xtrack name="where_x"/>
     	<ytrack name="where_y"/>
     	<method event="onmousedown">
     		this.where_x.apply();
     		this.where_y.apply();
     	</method>
     	<method event="onmouseup">
     		this.where_x.remove();
     		this.where_y.remove();
     	</method>
     	   	
    </view>

	<simplelayout axis="x" spacing="20"/>
</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
