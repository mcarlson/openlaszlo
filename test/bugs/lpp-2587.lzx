<!-- Copyright 2006 Laszlo Systems --> 
<canvas debug="true">
   <include href="../../lps/utils/lztestmanager.lzx" /> 

   <dataset name="ds">
       <root>
           <text name="my-yellow-10-plain" fgcolor="0xFFFF00" fontsize="10" fontstyle="plain"/>
           <text name="my-blue-11-bold" fgcolor="0x0000FF" fontsize="11" fontstyle="bold" />
           <text name="my-red-12-italic" fgcolor="0xFF0000" fontsize="12" fontstyle="italic" />
           <text name="my-green-13-bolditalic" fgcolor="0x339900" fontsize="13" fontstyle="bolditalic" />
       </root>
   </dataset>
   <datapointer name="dp" xpath="ds:/root"/>

   <method name="refresh" args="c, startIndex">
   <![CDATA[
       var arr = [];
       var currIndex = startIndex;
       var max = 4;

       for (var i = 0; i < max; i++){
           // Debug.write(i, " arr["+i+"] = dp.subnodes["+currIndex+"]");
           
           arr[i] = dp.p.childNodes[currIndex];

           //currIndex = Math.abs(max - (currIndex + count));
           currIndex = (currIndex + 1);
           if (currIndex == max)
              currIndex = 0;
       }
       c.testtext.datapath.setNodes(arr);
       // Debug.write("refresh() ",arr);
   ]]>
   </method>

    <view id="container2" datapath="ds:/root" height="200" width="300" bgcolor="gray">
      <simplelayout />
      <text name="testtext" id="mytext" resize="true">
          <datapath xpath="text" replication="lazy" />
          <handler name="ondata">
              if (!this.data) return; 
              var dat = this.data;
              // Debug.write("ondata with dat=", dat);
              this.setAttribute("text",dat.getAttr('name'));
              this.setAttribute("fgcolor",dat.getAttr('fgcolor')*1);
              this.setAttribute("fontsize",dat.getAttr('fontsize'));
              this.setAttribute("fontstyle",dat.getAttr('fontstyle'));
          </handler>
      </text>
    </view>
    
    <script><![CDATA[

    var suite = new LzTestSuite("lpp-2587 test suite"); 
    
    suite.test1 = function() {
      canvas.refresh(container2,0);
      canvas.refresh(container2,1);    
      canvas.refresh(container2,2);      
      canvas.refresh(container2,3);     
      var textview = container2.subviews[1];
      var fontstyle = textview.getAttribute("fontstyle"); 
      LzTestManager.assertEquals ("plain", fontstyle, "fontstyle is plain");
      
      // The htmltext for this clip should not now have a <B> in it
      var textclip = textview.__LZtextclip;
      var htmlText = textclip.htmlText;
      var indexOfB = htmlText.indexOf("<B>");
      Debug.write("index of <B> is ", indexOfB);
      LzTestManager.assertFalse( indexOfB > 0 , "<B> present in htmltext"); 
      // The htmltext for this clip should not now have a <I> in it
      var indexOfI = htmlText.indexOf("<I>");
      Debug.write("index of <I> is ", indexOfI);
      LzTestManager.assertFalse( indexOfI > 0 , "<I> present in htmltext"); 
      
    }

    suite.addTest(suite.test1);
    ]]></script>
</canvas>