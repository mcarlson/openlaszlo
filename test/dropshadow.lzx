<canvas width="100%" height="600">
  
  <dataset name="demoViews">
    <items>
      <item />
      <item />
      <item />
      <item />
      <item />
      <item />
      <item />
    </items>
  </dataset>
  
  <button text="hello" shadowangle="60" shadowdistance="10" shadowcolor="#aaaaaa"/>
  
  <text y="40" shadowangle="60" shadowdistance="10" shadowcolor="#aaaaaa" fontsize="24">Hey there!</text>
  
  <view y="100" height="140" datapath="demoViews:/items" align="center" focusable="true"
          onfocus="this.selector.select(this.items.clones[0])" onblur="this.selector.clearSelection()">
    
      <handler name="onkeydown" args="key">
      <![CDATA[
        var clones = this.items.clones;
        var itemCount = clones.length;
        var i = 0;
        // Select next
        for (i=0; i<this.items.clones.length; i++) {
          if (clones[i] == this.selector.getSelection()[0]) {
            break;
          }
        }
        if (key == 39 && itemCount > i+1) {
          i += 1;
          this.selector.select(clones[i]);
        } else if (key==37 && i>0) {
          this.selector.select(clones[i-1]);
        }
      ]]>
      </handler>
      

    
    <simplelayout axis="x" spacing="20" />
    
    <selectionmanager name="selector" toggle="false" />
    
    <view name="items" datapath="item" x="20" width="100" height="100" bgcolor="red"
          shadowcolor="#aaaaaa" shadowangle="60" opacity="0.3" oninit="this.animate('opacity', 1.0, 500)"
          onmouseover="parent.selector.select(this)" valign="middle" shadowdistance="5">
      <method name="setSelected" args="selected">
      <![CDATA[
        var selection = parent.selector.getSelection();
        if (selection != null && selection[0] != null && selected) {
          this.animate("width", 130, 400);
          this.animate("height", 130, 400);
          this.animate("shadowdistance", 12, 400);
        } else if (selection != this && selected == false) {
          this.animate("width", 100, 400);
          this.animate("height", 100, 400);
          this.animate("shadowdistance", 5, 400);
        }
      ]]>
      </method>
      
      <handler name="onclick" args="e">
        if ($as2) {
            var mc = this.getDisplayObject();
            var shadowClip = mc['shadow'];
            if (shadowClip != null) {
                Debug.write("Got a shadow on the damn thing!");
                Debug.write(shadowClip);
            }
        }
      </handler>
      
    </view>
  </view> 
  
</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2009 Laszlo Systems, Inc.  All Rights Reserved.                   *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
