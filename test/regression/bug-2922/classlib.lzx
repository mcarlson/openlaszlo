<library>
    <!-- = Classes for widgets configurator =============================== -->
    <!-- ================================================================== -->
    <!-- ================================================================== -->
    
    
    <!-- = A generic grey dialog ========================================== -->

    <class name="dialog_box" bgcolor="0xeaeaea" width="340" height="200"
           visible="false">

        <attribute name="title" type="string" value="Dialog Box" />

        <method name="show">
            this.setVisible( true );
            this.bringToFront();
        </method>

        <method name="hide">
            this.setVisible( false );
            this.sendToBack();
        </method>

    </class>
    <!-- ================================================================== -->


    <!-- = Login box for users who already have an account ================ -->
    <class name="login_bar" resource="resources/loginbar_background.gif"
           height="32">
        <simplelayout axis="x" />
        <view name="leftArea" clickable="true" 
              resource="resources/loginbar_left_area.gif">

            <!-- <text name="txt" width="$once{parent.width-this.x}"
                  fontsize="14" x="10" valign="middle">Log In</text> -->

            <state name="loginRegisterButtons" apply="true" pooling="true">
                <button x="14" y="6" height="22" 
                        onclick="classroot.showLoginBox();"
                        valign="middle">Login
                </button>

                <button x="72" y="6" height="22" 
                        onclick="classroot.showRegistrationBox();"
                        valign="middle">Register
                </button>
            </state>

            <state name="logoutButton" apply="false" pooling="true">
                <button height="22" x="37"
                        valign="middle">Log Out
                    <method event="onclick">
                        classroot.doLogout();
                    </method>
                </button>
            </state>
        </view>

        <!-- The contents bar has various "states" -->
        <view name="contents" height="$once{parent.height}" 
              width="$once{parent.width-parent.leftArea.width}">

            <view name="loginBox" visible="false" 
                  height="$once{parent.height}" x="15">

                <simplelayout axis="x" spacing="5" />

                <text valign="middle" height="16" 
                      fgcolor="0x262626">Email:</text>

                <edittext name="email" width="150" valign="middle" 
                              fontsize="7"
                              text="antun@antunkarlovac.com" />

                <text valign="middle" fgcolor="0x262626">password:</text>

                <edittext name="password" valign="middle" 
                              fontsize="7"
                              text="foo" />

                <button height="22" onclick="classroot.doLogin()"
                        valign="middle">Login
                </button>

                <button height="22" onclick="classroot.hideLoginBox()"
                        valign="middle">Cancel
                </button>
            </view>

            <view name="registerBox" visible="false"
                  height="$once{parent.height}" x="15">

                <simplelayout axis="x" spacing="5" />

                <text valign="middle" height="16" 
                      fgcolor="0x262626">Email:</text>

                <edittext name="email" width="150" valign="middle" 
                              fontsize="7"
                              text="antun@antunkarlovac.com" />

                <text valign="middle" fgcolor="0x262626">password:</text>

                <edittext name="password" valign="middle" 
                              fontsize="7"
                              text="foo" />

                <button height="22"
                        valign="middle">Register
                    <method event="onclick">
                        var ds = canvas.datasets.createAccount_ds;
                        var qs = "desiredemail=" 
                               + this.parent.email.getText()
                               + "&amp;desiredpassword="
                               + this.parent.password.getText();
                        ds.setQueryString( qs );
                        ds.doRequest();
                    </method>
                </button>

                <button height="22" onclick="classroot.hideLoginBox()"
                        valign="middle">Cancel
                </button>
            </view>

            <view name="loggedInUser" valign="middle"
                  width="${parent.width}" visible="false"> 

                <text x="16" fgcolor="0x181818">Welcome</text>
                <text x="76" name="txt" width="400" fgcolor="0x181818"/> 

                <button height="22" align="right" width="90"
                        valign="middle" text_x="21">

                    <!-- Bug 3118: For some reason the text_x attribute needs
                                   to be declared in both the button tag above
                                   as well as the attribute tag below.
                    -->
                    <state name="openOverview" apply="true" pooling="true">
                        <attribute name="text" value="Overview" 
                                   type="string" />

                        <attribute name="text_x" value="21" 
                                   type="number" />

                        <view resource="resources/button_arrow_down.png" 
                              valign="middle" x="10" />
                              
                        <method event="onclick">
                            accountArea.closeLoginArea();
                            this.closeOverview.apply();
                            this.openOverview.remove();
                        </method>
                    </state>

                    <state name="closeOverview" apply="false" pooling="true">
                        <attribute name="text" value="Return" 
                                   type="string" />

                        <attribute name="text_x" value="23" 
                                   type="number" />

                        <view resource="resources/button_arrow_up.png" 
                              valign="middle" x="10" />

                        <method event="onclick">
                            accountArea.openLoginArea();
                            this.closeOverview.remove();
                            this.openOverview.apply();
                        </method>
                    </state>

                </button>
            </view>

            <view name="loginBarMessage" 
                  resource="resources/loginbar_background.gif" 
                  visible="false" x="15">
                <simplelayout axis="x" spacing="5" />
                <text name="txt" resize="true" valign="middle" />

                <button height="22" onclick="this.parent.setVisible( false )"
                        valign="middle">OK
                </button>
                
            </view>
        </view>
        
        <method name="hideAll">
            this.contents.loginBox.setVisible( false );
            this.contents.registerBox.setVisible( false );
            this.contents.loggedInUser.setVisible( false );
        </method>

        <method name="showLoginBox">
            this.hideAll();
            this.contents.loginBox.setVisible( true );
        </method>
        
        <method name="showDefaultText">
            this.hideAll();
            // TODO: replace this method
        </method>

        <method name="hideLoginBox">
            this.showDefaultText();
            this.hideAll();
        </method>

        <method name="showRegistrationBox">
            this.hideAll();
            this.contents.registerBox.setVisible( true );
        </method>

        <method name="hideRegistrationBox">
            this.contents.registerBox.setVisible( false );
        </method>

        <method name="showLoggedInUser" args="email">
            this.hideAll();
            this.contents.loggedInUser.setVisible( true );
            this.contents.loggedInUser.txt.setText( email );
            this.leftArea.loginRegisterButtons.remove();
            this.leftArea.logoutButton.apply();
        </method>

        <method name="doLogin">
            <![CDATA[
            var email = this.contents.loginBox.email.getText();
            var password = this.contents.loginBox.password.getText();
            accountArea.setAttribute( "email", email )
            accountArea.setAttribute( "password", password )
            var ds = canvas.datasets.login_ds;
            ds.setQueryString( "email=" + email + "&password=" + password );
            ds.doRequest();
            loader.show();
            ]]>
        </method>

        <method name="doLogout">
            accountArea.setAttribute( "email", null )
            accountArea.setAttribute( "password", null )
            accountArea.hideLoginArea();
            // allWidgetsTempDataClear_dp.clearAllTempData();
            this.showDefaultText();
            this.leftArea.loginRegisterButtons.apply();
            this.leftArea.logoutButton.remove();

        </method>

        <method name="loginMessage" args="msg">
            this.contents.loginBarMessage.txt.setText( msg );
            this.contents.loginBarMessage.setVisible( true );
        </method>

        <method name="getAccountWidgets"><![CDATA[
            debug.write( "getAccountWidgets called" );
            var ds = canvas.datasets.allInstances_ds;
            ds.setQueryString( "email=" 
                                + this.contents.loginBox.email.getText() 
                                + "&password="
                                + this.contents.loginBox.password.getText() );
            ds.doRequest();
            ]]>
        </method>
        
    </class>
    <!-- ================================================================== -->

    <!-- = A single widget representation ================================= -->
    <class name="widget" width="400" height="617">
        <attribute name="widget_id" value="$path{'@id'}" />
        <attribute name="is_loggedin" value="false" />
        <attribute name="is_adding" value="true" />
        <attribute name="instance_id" value="0" type="number" />

        <method event="ondata">
            debug.write( "ondata in widget" );
        </method>

        <method name="makeLoggedIn">
            this.setAttribute( "is_loggedin", true );
            var dp = "allWidgetsTempData_ds:/widgets/widget_class[@id='"
                   + this.widget_id + "']";
            dp += "/widget_instance";
            widgetOptionsArea.yourSites.combo.pulldownElements.setDatapath( dp );
            // TODO: Make the combobox invisible when there are no sites.
        </method>

        <method name="makeLoggedOut">
            this.setAttribute( "is_loggedin", false );
            var dp = "allWidgetsTempData_ds:/widgets/widget_class[@id='"+this.widget_id+"']";
            allWidgetsTempDataClear_dp.setXPath( dp );
            allWidgetsTempDataClear_dp.resetTempData();
            // TODO: Clear cached widget_instances.
            // TODO: Got to here. The problem I think we're getting now is 
            //       that the ondata event in an unnamed datapointer is not
            //       firing when there are no instances in the new account.
            //       Adding instances to my data to verify.
            //       fixed this bug. the ondata event is firing now. need to 
            //       clear out the new instance node too.
        </method>

        <method name="selectInstanceToEdit" args="instance_id">
            this.setAttribute( "is_adding", false );
            this.setAttribute( "instance_id", instance_id );
            debug.write( 'Selecting ' + instance_id );
            var dp = "allWidgetsTempData_ds:/widgets[1]/widget_class[@id='"
                   + this.widget_id 
                   + "']/widget_instance[@id='" 
                   + instance_id + "']";
            // debug.printlength = 4000;
            // debug.write( allWidgetsTempData_ds.serialize() );
            this.includeTextAreaState.apply();
            this.includeTextArea.setDatapath( dp );
            this.editSiteOptions.setDatapath( dp );
            this.editSiteOptions.updateTextBoxes(); // XXX
            this.showIncludeCode();
        </method>

        <method name="saveSite">
            // TODO: Retrieve values from the form
            
            var siteName = this.editSiteOptions.siteNameRow.siteNameTextField.getText();
            Debug.write( "SiteName: " + siteName );
            return;
            var xmlURL = "http://www.smelly.com/myxml.xml";
            var siteURL = "www.smelly.com";
            var qs = "site_name=" + escape(siteName)
                   + "&amp;site_url=" + escape(siteURL )
                   + "&amp;xml_url=" + escape(xmlURL)
                   + "&amp;widget_id=" + escape(this.widget_id);
            if ( !this.is_adding ) {
                qs += "&amp;instance_id=" + this.instance_id;
            }
            qs += "&amp;email=" + escape(accountArea.email)
                + "&amp;password=" + escape(accountArea.password);
            addEditInstance_ds.setQueryString( qs );
            addEditInstance_ds.doRequest();
            this.clonemanager.setAttribute( "saveWidget", this );
            loader.show();
        </method>

        <method name="showIncludeCode">
            this.editSiteOptions.setVisible( false );
        </method>

        <method name="showEditSiteOptions">
            debug.write( "JJJJJJ" );
            this.includeTextAreaState.remove();
            this.editSiteOptions.setVisible( true );
        </method>

        <!-- Grey area with screenshot, title and short description -->
        <view name="screenshotArea" width="$once{parent.width}"
              height="189" bgcolor="0xeaeaea">
            <text x="40" y="30" name="title" fontstyle="bold" 
                datapath="@title" width="120" /> 
            
            <text x="40" y="46" width="120" height="90" 
                datapath="short_desc/text()"
                name="shortDesc" multiline="true" />

            <view name="screenshot" datapath="@img_url" x="187" y="28" 
                clickable="true">
                <method name="applyData" args="d">
                    this.setSource( d );
                </method>

                <method event="onclick">
                    // TODO: Javascript popup window.
                    debug.write( "Preview the app" );
                </method>
            </view>
        </view>

        <!-- Bar with options to save/edit/preview widget -->
        <view width="100%" height="26" 
              y="$once{parent.screenshotArea.height}"
              resource="resources/options_bar_background.swf"
              stretches="width">
        </view>

        <!-- Contents of Bar with options to save/edit/preview widget -->
        <view width="100%" height="26" name="widgetOptionsArea" 
              y="$once{parent.screenshotArea.height}">

            <button x="20" valign="middle" height="22"
                    visible="${classroot.is_loggedin}">Create New
                <method event="onclick">
                    classroot.setAttribute( "is_adding", true );
                    var widget_id = this.parent.parent.widget_id;
                    var dp = "allWidgetsTempData_ds:/widgets/widget_class[@id='"
                            + widget_id + "']/new_instance";
                    this.parent.parent.editSiteOptions.setDatapath( dp );
                    this.parent.parent.showEditSiteOptions();
                    newInstanceActions_dp.setXPath( dp );
                    newInstanceActions_dp.resetNewInstanceInformation();
                </method>
            </button>

            <view name="yourSites" x="120" valign="middle"
                visible="${parent.parent.is_loggedin}">
                <text y="1">Edit:</text>

                <combobox name="combo" x="28" width="136"
                        defaulttext="choose one..."
                        editable="false"
                        shownitems="3">
                    <method event="onselect" args="d">
                        classroot.selectInstanceToEdit( d.value );
                    </method>
                    <textlistitem name="pulldownElements"   
                                datapath=""
                                valuedatapath="@id"
                                textdatapath="@site_name" />
                    <!-- Note: textdatpath=""
                            Why did valuedatapath work without the "@" symbol?
                    -->
                </combobox>
            </view>

            
            <button height="22" valign="middle"
                    x="305">Preview</button>
        </view>
        


        <!-- Logged out state -->
        <state name="defaultState" apply="true" pooling="true">
            <attribute name="bgcolor" type="number" value="0xa4acbc" />
        </state>



        <!-- When user can select the HTML/JavaScript code to embed -->
        <state name="includeTextAreaState" apply="false" pooling="true">
            <method event="onapply">
                // When you have a method in a state, to get to a 
                // "sibling" of that method you have to address with
                // parent.
                parent.includeTextArea.setAttribute( "y", 646 );
                parent.includeTextArea.foo.start();
            </method>
            
            <view name="includeTextArea" y="646" height="402"
                width="$once{parent.width}"
                bgcolor="0xeaeaea">
                <attribute name="leftMargin" type="number" value="30" />
                
                <!-- TODO: Rename this from foo to something else -->
                <animator name="foo" attribute="y" to="215" duration="500" 
                          start="false"
                          relative="false" />
                
                <datapath>
                    <attribute name="datacontrolsvisibility" value="false" />
                </datapath>

                <attribute name="instance_id" value="$path{'@id'}" />


                <!-- TODO: Get rid of these two methods. They are 
                           obsolete -->
                <method name="show">
                    this.setVisible( true );
                    this.animate( "y", 223, 500, false );
                    this.updateText();
                </method>

                <method name="hide">
                    this.animate( "y", 600, 500, false );
                    this.setVisible( false );
                </method>

                <method name="updateText"><![CDATA[
                    var s = '&lt;!-- BlogBox --&gt;<br />';
                    s += '&lt;script language="javascript" type="text/javascript" src="http://www.mylaszlo.com/projects/widgets/embedWidget.php?id=';
                    s += this.instance_id;
                    s += '&gt;&lt;/script&gt;<br />';
                    s += '&lt;!-- /BlogBox --&gt;';
                    this.includeText.setText( s );
                    // TODO: Got to here. Just got it working. Probably want
                    //       to delete includeText contents now.
                    ]]>
                </method>


                <text width="325" x="$once{parent.leftMargin}" 
                      y="33" fontstyle="bold"
                      datapath="@site_name"  />

                <text width="325" x="$once{parent.leftMargin}" 
                      y="51"
                      datapath="@site_url"  />

                <text width="325" x="$once{parent.leftMargin}" 
                      y="69"
                      datapath="@opml_url"  />

                <text width="330" multiline="true"
                      x="$once{parent.leftMargin}" y="117">
                    Select text below and use right-click or "option" + click
                    to copy and paste the text into your HTML page.
                </text>


                <!-- Copy and paste area for include code with grey border -->
                <view width="338" height="95" bgcolor="0x626262"
                      x="23" y="162"
                      name="includeTextBorder">
                    <text width="$once{parent.width-2}" 
                          height="$once{parent.height-2}" 
                          align="center" valign="middle"
                          name="includeText"
                          multiline="true" selectable="true"
                          x="10" y="162" bgcolor="0xffffff" fgcolor="0x181818">
        &lt;!-- BlogBox --&gt;<br />
        &lt;script language="javascript" type="text/javascript" src="http://www.mylaszlo.com/projects/widgets/embedWidget.php?id=1"&gt;&lt;/script&gt;<br />
        &lt;!-- /BlogBox --&gt;
                    </text>
                </view>

                <button x="191" y="265">Edit This Site
                    <method event="onclick">
                        debug.write("editing "+this.parent.instance_id);
                        this.parent.parent.showEditSiteOptions();
                    </method>
                </button>
                
                <button x="299" y="265">Cancel
                    <method event="onclick">
                        parent.parent.includeTextAreaState.remove();
                    </method>
                </button>
            </view>
        </state>




        <view name="editSiteOptions" visible="false"
              y="215" width="100%" height="402"
              datapath="" bgcolor="0xeaeaea">
            <attribute name="leftMargin" type="number" value="30" />

            <!-- Workaround method. Need to call updateData explicitly and
                 also use textdatapath -->
            <method name="updateTextBoxes">
                // BUG 2965
                // I'm calling this explicitly as suggested by Adam, but
                // nothing is appearing.
                this.siteNameRow.siteNameTextField.datapath.updateData();
                this.siteNameRow.xmlTextField.datapath.updateData();
                this.siteNameRow.siteUrlTextField.datapath.updateData();
                Debug.write( "XXX: " + this.datapath.xpathQuery("@site_name") );
                Debug.write( this.datapath );
            </method>

            <!-- Depending on whether or not the user is adding a 
                 site, show either the site-specific instructions or 
                 the site summary -->
            <state apply="${!classroot.is_adding}">
                <view name="siteSummary" y="33">
                    <simplelayout axis="y" spacing="2" />
                    <text width="325" x="$once{parent.parent.leftMargin}" 
                          fontstyle="bold"
                          datapath="@site_name"  />

                    <text width="325" x="$once{parent.parent.leftMargin}" 
                          datapath="@site_url"  />

                    <text width="325" x="$once{parent.parent.leftMargin}" 
                          datapath="@opml_url"  />
                </view>
            </state>

            <state apply="${classroot.is_adding}">
                <text y="33" x="$once{parent.leftMargin}">Destructions</text>
            </state>

            <button height="22" align="center" y="94"
                    onclick="instructions.setVisible(true)">Instructions
            </button>
            
            <!-- Form fields for adding/editing a site -->
            <view name="siteNameRow" x="$once{parent.leftMargin}" y="125">
                <text x="7" y="2">Site Name:</text>
                <edittext name="siteNameTextField" x="75" width="256" 
                          textdatapath="@site_name">
                    <!-- 
                        Had to add xpath="."
                        Because of datacontrolsvisibility.
                        
                        Monday need to continue with making sure
                        that switching between blogboxes is working,
                        and also that their data gets refreshed on 
                        cancel.
                    -->
                    <datapath xpath=".">
                        <attribute name="datacontrolsvisibility" 
                                   value="false" />
                    </datapath>
                </edittext>
                <text y="25" width="305" multiline="true">Descriptive Name for the site where your Laszlo widget will live. e.g. "My Blog".</text>
            </view>

            <view x="$once{parent.leftMargin}" y="199">
                <text x="7" y="2">XML:</text>
                <edittext name="xmlTextField" x="75" width="250"
                          textdatapath="@opml_url">
                    <datapath xpath=".">
                        <attribute name="datacontrolsvisibility" 
                                   value="false" />
                    </datapath>
                </edittext>

                <text y="25" width="305" multiline="true">Full, exact HTTP URL for your XML file (more info). This external XML file specifies your Blogbox tab categories and links.</text>
            </view>

            <view x="$once{parent.leftMargin}" y="290">
                <text x="7" y="2">Site URL:</text>
                <edittext name="siteUrlTextField" x="75" width="250"
                          textdatapath="@site_url">
                    <datapath xpath=".">
                        <attribute name="datacontrolsvisibility" 
                                   value="false" />
                    </datapath>
                </edittext>
                <text y="25" width="305" multiline="true">HTTP URL for the site that your Laszlo widget will live on.</text>
            </view>

            <view x="197" y="364">
                <simplelayout axis="x" spacing="15" />
                <button onclick="classroot.saveSite()">Save Site</button>
                <button onclick="classroot.editSiteOptions.setVisible(false)">
                    Cancel</button>
            </view>

        </view>

    </class>

    <!-- = Loading notification =========================================== -->
    <class name="loadingIndicator" resource="resources/wait_info.swf"
           visible="false" x="340" y="340" 
           options="ignorelayout">
        <method name="show">
            this.setVisible( true );
            this.bringToFront();
        </method>
        <method name="hide">
            this.setVisible( false );
        </method>
    </class>
    <!-- ================================================================== -->


    <!-- = Message area =================================================== -->
    <class name="messageHolder" 
           width="300" height="200"
           visible="false" x="240" y="300" 
           options="ignorelayout"
           opacity="0.8" bgcolor="white">
        <method name="show">
            this.setVisible( true );
            this.bringToFront();
        </method>
        <method name="hide">
            this.setVisible( false );
        </method>
        <method name="msg" args="msg">
            this.show();
            this.txt.setText( msg );
        </method>
        <text width="${parent.width}" height="${parent.height - 30}" 
              multiline="true" name="txt" />
        <button onclick="this.parent.hide()" 
                align="center" valign="bottom">OK</button>
    </class>
    <!-- ================================================================== -->


    <!-- = Where the user creates a new account =========================== -->
    <class name="registrationBox" bgcolor="0xBFBAFF"
           width="400" height="300"
           x="200" visible="false">
        <method name="show">
            debug.write( 'show' );
            LzModeManager.makeModal( this );
            this.setY( -1 * this.height );
            this.setVisible( true );
            this.animate( "y", 100, 250, false );
        </method>

        <method name="hide">
            LzModeManager.release( this );
            this.setVisible( false );
        </method>

        <method name="msg" args="s">
            this.msgArea.setText( s );
        </method>


        <simplelayout axis="y" spacing="10" />

        <text fontsize="14">Create a New Account</text>

        <text name="msgArea" width="$once{parent.width}" height="75" 
              multiline="true" />

        <view name="email">
            <simplelayout axis="x" spacing="10" />
            <text>Your Email:</text>
            <edittext name="email" width="200">antunkarlovac@yahoo.com</edittext>
        </view>

        <view name="password">
            <simplelayout axis="x" spacing="10" />
            <text>Desired Password:</text>
            <edittext name="password" width="200">smelly</edittext>
        </view>

        <view align="right">
            <simplelayout axis="x" spacing="10" />
            <button>Create Account
                <method event="onclick">
                    var ds = canvas.datasets.createAccount_ds;
                    var qs = "desiredemail=" + classroot.email.email.getText()
                           + "&amp;desiredpassword="
                           + classroot.password.password.getText();
                    ds.setQueryString( qs );
                    ds.doRequest();
                </method>
            </button>
            <button>Cancel
                <method event="onclick">
                    classroot.hide();
                </method>
            </button>
        </view>
    </class>

    <!-- ================================================================== -->

    <!-- = The popup instructions window ================================== -->
    <class name="instructions_window" width="400" closeable="true" 
           title="Instructions" extends="window">
        <text width="${immediateparent.width-30}" multiline="true"
              selectable="true">
<b>Customizing Your BlogBox</b><br /><br />

The current BlogBoxes are a bit like early sports cars - responsive and highly configurable for XML and Web-savvy users. If that's you, you're in luck! Each BlogBox is completely customizable via an external XML configuration file. To do so:<br /><br />

[1] As a reference point, create a local copy of the default XML file for your selected BlogBox using any text editor.<br />
[2] Edit your version of the file to set customization parameters as you wish, and enter the absolute HTTP URL paths for all your desired media assets.  <br />
[3] Place your modified XML configuration file on a public Web server (GeoCities or Tripod will suffice), and use the BlogBox &lt;a href='http://www.blogbox.com'&gt;configuration page&lt;/a&gt; to point your  BlogBox at the URL of that XML file.<br /><br />

Each BlogBox supports unique customization, as documented within the default XML configuration files.<br /><br />

<b>Embedding a BlogBox in your Blog or Web page</b><br /><br />

[1] The BlogBox &lt;a href='http://www.blogbox.com'&gt;configuration page&lt;/a&gt; generates a simple &lt;script&gt; tag with parameters to identify the URL of your desired XML configuration file.<br />
[2] Copy and paste that &lt;script&gt; tage into your blog template or Web page HTML, and save.<br />
[3] Point a Web browser at your Blog or Web page and enjoy using your new BlogBox<br /><br />

Note: The visiting Web browser must be enabled with the Flash Player, version 5 or higher (that's about 98% of all deployed Web browsers).

        </text>
    </class>
    <!-- ================================================================== -->
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
