<canvas width="1024" height="768">
    <debug y="200" />

    <class name="test">
      <attribute name="dontcountme"/>
      <view name="a" />
      <view name="b" />
      <view name="c" />
      <view name="d" />
      <view name="e" />
      <view name="f" />
      <view name="g" />
      <view name="h" />
      <view name="one" />
      <view name="two" />
    </class>

    <test name="simple" />

    <test name="children">
      <view name="three" />
      <view name="four" />
    </test>

    <class name="inherits" extends="test">
      <view name="i" />
      <view name="j" />
      <view name="k" />
      <view name="l" />
      <view name="m" />
      <method name="dontcountmeeither">
      </method>
      <view name="five" />
    </class>

    <inherits name="inheritsSimple" />

    <inherits name="inheritsChildren">
      <view name="six" />
    </inherits>

    <class name="complex">
       <test name="inner">
         <view name="sanctum" />
       </test>
    </class>

    <complex name="easy" />

    <class name="tricky" initstage="late">
      <view name="i" />
      <view name="j" />
      <view name="k" />
    </class>    

    <class name="complicated">
      <inherits name="subrosa" initstage="late">
         <test name="therose" />
      </inherits>
      <state name="foo">
        <view name="1" />
        <view name="2" />
        <view name="3" />
      </state>
      <tricky name="sneaky" >
        <view name="1" />
        <view name="2" />
        <view name="3" />
        <view name="4" />
        <view name="5" />
      </tricky>
    </class>

    <view name="messy">
      <complicated name="0" />
      <complicated name="1" />
      <complicated name="2" />
      <complicated name="3" />
      <complicated name="4" />
      <complicated name="5" />
      <complicated name="6" />
      <complicated name="7" />
      <complicated name="8" />
      <complicated name="9" />
      <complicated name="10" />
      <complicated name="11" />
    </view>

    <view name="inittime" bgcolor="white" visible="true" >
      <method name="cntsn" args="node">
        <![CDATA[
          var c = 1;
          for ( var i = 0 ; i < node.subNodes.length; i++ ){
              c += this.cntsn( node.subNodes[ i ] );
          }
          return c;
        ]]>
      </method>

      <method event="oninit" reference="canvas">
          var d = new LzDelegate( mytext , "tellTime" );
          LzIdle.callOnIdle( d );
          this.bringToFront();
      </method>

      <text name="mytext" width="200">
          <method name="tellTime" args="t">
              this.setText( "Time: " + t +
              " " + canvas.creatednodes + "/" + canvas.totalnodes  +
              " counted: " + parent.cntsn( canvas ));
          </method>
      </text>
    </view>
</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
