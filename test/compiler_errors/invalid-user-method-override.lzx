<!--
Users can provide hints when they override a method, because the compiler
may not know the complete class hierarchy. That means whenever the user
explicitly defines an override with '<method override="true" />', the compiler
will always emit a function with the override modifier 'override function () {}'.
The reverse does not apply: If the compiler knows it must add the override
modifier, but the user writes '<method override="false" />', a compiler
warning will be emitted.

Expected:
2 compiler warnings in total.

-->
<canvas>
  <class name="classA" extends="node">
  </class>
  <class name="classB" extends="classA">
    <method name="foo" override="true"/>
  </class>
  <mixin name="mixinC">
    <method name="foo" override="true"/>
  </mixin>
  <class name="classC" with="mixinC"/>
  <classA with="mixinC"/>

  <class name="classD" extends="node">
    <method name="foo" />
  </class>
  <class name="classE" extends="classD">
    <!-- compiler warning -->
    <method name="foo" override="false"/>
  </class>
  <mixin name="mixinF">
    <!-- compiler warning -->
    <method name="foo" override="false"/>
  </mixin>
  <class name="classF" with="mixinF"/>
  <classD with="mixinF"/>
</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2010 Laszlo Systems, Inc.  All Rights Reserved.                   *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
