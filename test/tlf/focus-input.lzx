<canvas width="100%" height="40%" >
  <include href="lz/button.lzx"/>
  <debug  fontsize="12"/>

  <handler name="onfocus" reference="lz.Focus" args="e">
    //Debug.info("global LzFocus handler onfocus event ",e);
  </handler>

  <view x="440" width="400" height="50" bgcolor="#cccccc" id="v1">
    <attribute name="flow"/>
      <passthrough>
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.events.TextEvent;
    import flash.geom.Rectangle;
    import flash.text.engine.FontPosture;
    import flash.text.engine.Kerning;
    import flash.text.engine.TextBaseline;
    import flashx.textLayout.container.ContainerController;
    import flashx.textLayout.container.TextContainerManager;
    import flashx.textLayout.conversion.TextConverter;
    import flashx.textLayout.edit.EditManager;
    import flashx.textLayout.edit.EditingMode;
    import flashx.textLayout.edit.ISelectionManager;
    import flashx.textLayout.edit.SelectionState;
    import flashx.textLayout.elements.Configuration;
    import flashx.textLayout.elements.IConfiguration;
    import flashx.textLayout.elements.LinkElement;
    import flashx.textLayout.elements.ParagraphElement;
    import flashx.textLayout.elements.TextFlow;
    import flashx.textLayout.events.*;
    import flashx.textLayout.events.CompositionCompleteEvent;
    import flashx.textLayout.events.FlowOperationEvent;
    import flashx.textLayout.events.SelectionEvent;
    import flashx.textLayout.formats.Direction;
    import flashx.textLayout.formats.LineBreak;
    import flashx.textLayout.formats.TextAlign;
    import flashx.textLayout.formats.TextLayoutFormat;
    import flashx.textLayout.formats.WhiteSpaceCollapse;
    import flashx.textLayout.operations.*;
    import flashx.undo.UndoManager;


      </passthrough>
    <handler name="oninit">
      <![CDATA[
        #passthrough {
      var container:Sprite  = new Sprite();
      container.mouseChildren =true;
      container.mouseEnabled =true;
      this.sprite.mouseChildren = true;
      this.sprite.mouseEnabled = true;

      var tcm:TextContainerManager = new LzTextContainerManager(container, null); 
      var config = ((TextContainerManager.defaultConfiguration) as Configuration).clone();

      tcm.beginInteraction();
      tcm.editingMode = EditingMode.READ_WRITE;
      tcm.compositionWidth = 400;
      tcm.compositionHeight = 40;
      flow = TextConverter.importToFlow("<font size='18'>This is a primitive TextFlow </font> ", TextConverter.TEXT_FIELD_HTML_FORMAT, config);
      tcm.setTextFlow(flow);
      tcm.updateContainer();
      this.sprite.addChild(container);
      }#
      ]]>
    </handler>
  </view>
  <view layout="spacing:10" fontsize="18">
    <inputtext id="i1" width="400" bgcolor="#cccccc">This is some native input text</inputtext>
    <inputtext id="i2"
               width="400" bgcolor="#cccccc">This is some native input text</inputtext>

    <inputtext id="t1" hasdirectionallayout="true" width="400" bgcolor="#cccabc">This is some TLF input text</inputtext>
    <inputtext id="t2" 
               hasdirectionallayout="true" width="400" bgcolor="#cccabc">This is some TLF input text</inputtext>
  </view>
  <simplelayout/>
  <button onclick="Debug.info('clicked b1')" id="b1">Button B1</button>
  <button onclick="Debug.info('clicked b2')" id="b2">Button B1</button>
  <button onclick="Debug.info('clicked b3')" id="b3">Button B3</button>

</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2010 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
