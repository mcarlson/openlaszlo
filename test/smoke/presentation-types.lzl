<library>
 <class name="TestPresentationTypes" extends="TestCase">
   <method name="addTests">
     this.addTest("testValueEquality");
     this.addTest("testAttributeEquality");
     this.addTest("testValueIdentity");
     this.addTest("testAttributeIdentity");
     this.addTest("testPresentation");
     this.addTest("testExpressionPresentationType");
     this.addTest("testPresentationLiteralValues");
   </method>
   <dataset name="ds" >
     <item
         number="3.141592"
         string="Hello &#x3A3;ailor"
         html="&lt;i&gt;Now&lt;/i&gt; is the time for all good men"
         text="To &apos;come&apos; to the aid of the party"
         bool="true"
         color="rosybrown"
         undefined="undefined"
         null="null"
         nan="NaN"
         false="false"
         true="true"
         emtpy=""
         />
   </dataset>
   <attribute name="aNumber" value="$path{'@number'}" type="number" />
   <attribute name="aString" value="$path{'@string'}" type="string" />
   <attribute name="aText" value="$path{'@text'}" type="text" />
   <attribute name="aHtml" value="$path{'@html'}" type="html" />
   <attribute name="aBool" value="$path{'@bool'}" type="boolean" />
   <attribute name="aColor" value="$path{'@color'}" type="color" />

   <attribute name="aNumber2" value="$path{'@number'}" type="number" />
   <attribute name="aString2" value="$path{'@string'}" type="string" />
   <attribute name="aText2" value="$path{'@text'}" type="text" />
   <attribute name="aHtml2" value="$path{'@html'}" type="html" />
   <attribute name="aBool2" value="$path{'@bool'}" type="boolean" />
   <attribute name="aColor2" value="$path{'@color'}" type="color" />

   <attribute name="eUndefined" value="$path{'@undefined'}" type="expression" />
   <attribute name="eNull" value="$path{'@null'}" type="expression" />
   <attribute name="eNan" value="$path{'@nan'}" type="expression" />
   <attribute name="eFalse" value="$path{'@false'}" type="expression" />
   <attribute name="eTrue" value="$path{'@true'}" type="expression" />
   <attribute name="eEmpty" value="$path{'@empty'}" type="expression" />
   <attribute name="eNumber" value="$path{'@number'}" type="expression" />
   <attribute name="eString" value="$path{'@string'}" type="expression" />
   <attribute name="eText" value="$path{'@text'}" type="expression" />
   <attribute name="eHtml" value="$path{'@html'}" type="expression" />

   <attribute name="lUndefined" value="void 0" type="expression" />
   <attribute name="lNull" value="null" type="expression" />
   <attribute name="lNan" value="0/0" type="number" />
   <attribute name="lFalse" value="false" type="boolean" />
   <attribute name="lTrue" value="true" type="boolean" />
   <attribute name="lEmpty" value="" type="string" />
   <attribute name="lNumber" value="3.141592" type="number" />
   <attribute name="lString" value="Hello \u03A3ailor" type="string" />
   <attribute name="lText" value="To &apos;come&apos; to the aid of the party" type="text" />
   <attribute name="lHtml" value="&lt;i&gt;Now&lt;/i&gt; is the time for all good men" type="html" />

   <method name="setUp">
     this.setAttribute("datapath", "local:ds:/item");
   </method>

   <method name="testValueEquality" ><![CDATA[
     assertEquals(this.aNumber, 3.141592);
     assertEquals(this.aString, "Hello \u03A3ailor");
     assertEquals(this.aText, "To 'come' to the aid of the party");
     assertEquals(this.aHtml, "<i>Now</i> is the time for all good men");
     assertEquals(this.aBool, true);
     assertEquals(this.aColor, lz.colors.rosybrown);
   ]]></method>

   <method name="testAttributeEquality" >
     assertEquals(this.aNumber, this.aNumber2);
     assertEquals(this.aString, this.aString2);
     assertEquals(this.aText, this.aText2);
     assertEquals(this.aHtml, this.aHtml2);
     assertEquals(this.aBool, this.aBool2);
     assertEquals(this.aColor, this.aColor2);
   </method>

   <method name="testValueIdentity"><![CDATA[
     assertSame(this.aNumber, 3.141592);
     assertSame(this.aString, "Hello \u03A3ailor");
     assertSame(this.aText, "To 'come' to the aid of the party");
     assertSame(this.aHtml, "<i>Now</i> is the time for all good men");
     assertSame(this.aBool, true);
     assertSame(this.aColor, lz.colors.rosybrown);
   ]]></method>

   <method name="testAttributeIdentity">
     assertSame(this.aNumber, this.aNumber2);
     assertSame(this.aString, this.aString2);
     assertSame(this.aText, this.aText2);
     assertSame(this.aHtml, this.aHtml2);
     assertSame(this.aBool, this.aBool2);
     assertSame(this.aColor, this.aColor2);
   </method>

   <method name="testPresentation"><![CDATA[
     assertEquals(this.presentAttribute('aNumber', 'number'), "3.141592");
     assertEquals(this.presentAttribute('aString', 'string'), "Hello \u03A3ailor");
     assertEquals(this.presentAttribute('aText', 'text'), "To 'come' to the aid of the party");
     assertEquals(this.presentAttribute('aHtml', 'html'), "<i>Now</i> is the time for all good men");
     assertEquals(this.presentAttribute('aBool', 'boolean'), "true");
     assertEquals(this.presentAttribute('aColor', 'color'), "rosybrown");
   ]]></method>

   <method name="testExpressionPresentationType"><![CDATA[
     assertUndefined(this['eUndefined']);
     assertNull(this.eNull);
     assertTrue(isNaN(this.eNan), "NaN");
     assertFalse(this.eFalse);
     assertTrue(this.eTrue);
     assertSame(this.eNumber, 3.141592);
     assertSame(this.eString, "Hello \u03A3ailor");
     assertSame(this.eText, "To 'come' to the aid of the party");
     assertSame(this.eHtml, "<i>Now</i> is the time for all good men");

     assertEquals(this.presentAttribute('eUndefined', 'expression'), "undefined");
     assertEquals(this.presentAttribute('eNull', 'expression'), "null");
     assertEquals(this.presentAttribute('eNan', 'expression'), "NaN");
     assertEquals(this.presentAttribute('eFalse', 'expression'), "false");
     assertEquals(this.presentAttribute('eTrue', 'expression'), "true");
     assertEquals(this.presentAttribute('eNumber', 'expression'), "3.141592");
     assertEquals(this.presentAttribute('eString', 'expression'), "Hello \u03A3ailor");
     assertEquals(this.presentAttribute('eText', 'expression'), "To 'come' to the aid of the party");
     assertEquals(this.presentAttribute('eHtml', 'expression'), "<i>Now</i> is the time for all good men");
   ]]></method>

   <method name="testPresentationLiteralValues"><![CDATA[
     assertUndefined(this['lUndefined']);
     assertNull(this.lNull);
     assertTrue(isNaN(this.lNan), "NaN");
     assertFalse(this.lFalse);
     assertTrue(this.lTrue);
     assertEquals(this.lNumber, 3.141592);
     assertEquals(this.lString, "Hello \u03A3ailor");
     assertEquals(this.lText, "To 'come' to the aid of the party");
     assertEquals(this.lHtml, "<i>Now</i> is the time for all good men");
   ]]></method>
   
 </class>
 <!-- Copyright 2009,2010 Laszlo Systems, Inc.  All Rights Reserved.  Use is subject to license terms. -->
</library>

