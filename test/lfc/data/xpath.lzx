<canvas debug="true" width="800">
    <debug x="200" width="500" height="500"/>
    <include href="lzunit/lzunit.lzx" />

    <view y="200" name="rpar">
        <button>
            AddOne
            <handler name="onclick">
                Debug.write( 'hi' );
                var fc = somedat.getFirstChild().getFirstChild();
                somedat.getFirstChild().insertBefore( fc.cloneNode(true) , fc );
            </handler>
        </button>
        <text datapath="somedat:/data/record[1]/position()"/>
        <text datapath="somedat:/data/record[1]/last()"/>
        <view>
            <datapath pooling="true" xpath="somedat:/data/record"/>
            <text name="n" datapath="name/text()"/>
            <text name="mt" datapath="position()" width="20"/>
            <text name="l" datapath="last()"/>
            <simplelayout axis="x"/>
        </view>
        <simplelayout/>
    </view>

    <dataset name="somedat">
        <data>
            <record>
                <name>Boo</name>
                <phone home="155-1212" work="122-1515"/>
                <options>
                    <hairy color="red"/>
                    <glasses type="tortoise"/>
                </options>
            </record>
            <record>
                <name>Coo</name>
                <phone home="255-1212" work="222-1515"/>
                <options>
                    <hairy />
                    <glasses type="blue"/>
                </options>
            </record>
            <record>
                <name>Doo</name>
                <phone home="355-1212" work="322-1515"/>
                <options>
                    <hairy color="blue"/>
                    <glasses type="tortoise"/>
                </options>
            </record>
            <record>
                <name>Foo</name>
                <phone home="455-1212" work="422-1515"/>
                <options>
                    <hairy />
                </options>
            </record>
            <record>
                <name>Goo</name>
                <phone home="555-1212" work="522-1515"/>
                <options>
                    <hairy color="green"/>
                </options>
            </record>
            <record>
                <name>Hoo</name>
                <phone home="655-1212" work="622-1515"/>
                <options>
                    <glasses type="contacts"/>
                </options>
            </record>
        </data>
    </dataset>
    <TestSuite>
        <TestCase>
            <datapointer name="dp" xpath="somedat:/"/>
            <method name="assertArrayEquals" args="a1, a2">
                <![CDATA[
                if ( a1.length != a2.length ) {
                    fail( a1 + " not equal to " + a2 );
                }
                for ( var i = 0; i < a1.length; i++ ){
                    if ( a1[i] != a2[i] ) fail( 'elements at ' + i + ' not equal');
                }
                ]]>
            </method>
            <method name="test1">
                var ds = somedat;
                assertTrue ( dp.isValid() );

                assertArrayEquals( ds.childNodes[0].childNodes ,
                                   dp.xpathQuery( 'data/*' ) );

                assertArrayEquals( ds.childNodes[0].childNodes ,
                                   dp.xpathQuery( 'data/record[-10]' ) );

                assertArrayEquals( ds.childNodes[0].childNodes ,
                                   dp.xpathQuery( 'data/record[1-10]' ) );

                var a = [ 'record', 'record' , 'record' ];
                assertArrayEquals( a ,
                                   dp.xpathQuery( 'data/*[1-3]/name()' ) );

                var a = [ 'Boo', 'Coo' , 'Doo' ];
                assertArrayEquals( a ,
                                   dp.xpathQuery( 'data/record[1-3]/name/text()' ) );
                assertArrayEquals( a ,
                                   dp.xpathQuery( 'data/*[1-3]/name/text()' ) );


                var a = [ '255-1212' , '355-1212' , '455-1212' ];
                assertArrayEquals( a ,
                                   dp.xpathQuery( 'data/*[2-4]/phone/@home' ) );
                assertEquals( '222-1515'  ,
                               dp.xpathQuery( 'data/record[2]/phone/@work' ) );

                var a= ['Boo' , 'Coo' , 'Doo' , 'Hoo' ]; 
                var b = dp.xpathQuery( 'data/*/options/glasses/../../name/text()' ) ;
                assertArrayEquals( a , b );

                var a= [ ds, ds, ds, ds ];
                var b = dp.xpathQuery( 'data/*/options/glasses//' ) ;
                assertArrayEquals( a , b );

                var a =["Boo","Doo","Goo"] ;
                assertArrayEquals(a, dp.xpathQuery( 'data/*/options/hairy[@color]/../../name/text()' )) ;

                var a =["Boo","Coo","Doo","Hoo"];
                assertArrayEquals(a, dp.xpathQuery( 'data/*/options/glasses[@type]/../../name/text()' )) ;

                 var a =["Boo","Doo"];
                assertArrayEquals(a, dp.xpathQuery( 'data/*/options/glasses[@type="tortoise"]/../../name/text()' )) ;

            
                assertEquals(1, dp.xpathQuery( 'position()') ) ;
                assertEquals(1, dp.xpathQuery( 'last()') ) ;
                
                assertArrayEquals([1,2,3,4,5,6] , dp.xpathQuery( 'data/*/position()') ) ;
                assertEquals(2, dp.xpathQuery( 'data/*/options/glasses[@type="tortoise"]/last()' )) ;
                assertTrue( dp.setXPath( 'data/*[1]/position()' ) );
                assertEquals( 1 , dp.data );
                assertTrue( dp.setXPath( 'last()' ) );
                assertEquals( 1 , dp.data );
            </method>
            <method name="addTests"> 
                this.addTest("test1");
            </method> 
        </TestCase>
    </TestSuite>
</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2008 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
