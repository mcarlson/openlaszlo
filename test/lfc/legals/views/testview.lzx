<!-- 
/* X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2006, 2008 Laszlo Systems, Inc.  All Rights Reserved.          *
* Use is subject to license terms.                                        *
* X_LZ_COPYRIGHT_END ******************************************************/
-->
<canvas height="400">
    <node name="gUnit">
        <method name="assert" args="v , a">
            if ( v ){
                Debug.write( 'PASS! ' + a );
            } else {
                Debug.warn( 'FAIL: ' + a );
            }
        </method>
    </node>

    <simplelayout axis="x" spacing="50"/>
    <view name="container" bgcolor="yellow">
        <handler name="oninit">
            //gUnit.assert( 1 == 1, "1 == 1" );
            gUnit.assert( width = 100 , "container width");
            gUnit.assert( height = 100 , "container height");
            inside.setVisible( false );
            gUnit.assert( width == 10 , "content visibility affects width");
            gUnit.assert( height == 20 , "content visibility affects height");
            this.setVisible( false );
        </handler>
        <view name="holder" bgcolor="green" width="10" height="20"/>
        <view name="inside" bgcolor="red" x="90" y="80" 
              width="10" height="20"/>

    </view>

    <view name="masked" clip="true" width="100" bgcolor="gray">
        <text height="60">The black and yellow squares should line up
        </text>
        <view bgcolor="yellow" height="20" width="100"/>
        <view bgcolor="black" height="20" width="200"/>
        <simplelayout/>
    </view>

    <view name="clippedstretches" clip="true" width="100" height="40">
        <view stretches="both">
            <handler name="oninit">
                this.setSource( "pict5.jpg" );
            </handler>
            <handler name="onload">
                gUnit.assert( this.resourcewidth > 0  , 
                              "resource size set before onload" );
                gUnit.assert( this.width == this.resourcewidth,
                        "stretched view takes resource size if width unset");
                this.setX( -200 );
                this.setY( -200 );
                this.setWidth( 400);
                this.setHeight( 400);
            </handler>
        </view>
    </view>

    <view bgcolor="green">
        <method name="test">
            gUnit.assert( width== 110 , "container reacts to size" );
        </method>
        <view bgcolor="blue" width="10" height="10">
              <animator attribute="x" to="100" duration="200"
                        onstop="parent.parent.test()"/>
        </view>
    </view>

    <view name="regular">
        <method name="test">
            gUnit.assert( width== 40 , "regular content size" );
        </method>
        <view width="40" height="40">
            <handler name="oninit">
                this.setSource( "pict5.jpg" );
            </handler>
            <handler name="onload">
                parent.test();
            </handler>
        </view>
    </view>

    <view name="stretched">
        <method name="test">
            gUnit.assert( width== 40 , "stretched content size" );
        </method>
        <view stretches="both" width="40" height="40">
            <handler name="oninit">
                this.setSource( "pict5.jpg" );
            </handler>
            <handler name="onload">
                parent.test();
            </handler>
        </view>
    </view>

    <view name="clipped">
        <method name="test">
            gUnit.assert( width== 40 , "clipped content size" );
        </method>
        <view clip="true" width="40" height="40">
            <handler name="oninit">
                this.setSource( "pict5.jpg" );
            </handler>
            <handler name="onload">
                parent.test();
            </handler>
        </view>
    </view>

</canvas>
