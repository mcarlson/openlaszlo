<!-- 
/* X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2006 Laszlo Systems, Inc.  All Rights Reserved.          *
* Use is subject to license terms.                                        *
* X_LZ_COPYRIGHT_END ******************************************************/
-->
<canvas width="100%" height="90%" proxied="true">

<method name="getPhoto" args="server_id,id,secret,size" >
    var usize = (size == "-") ? "" : "_"+size;
    return "http://static.flickr.com/"+server_id+"/"+id+"_"+secret+usize+".jpg";
</method>

           
<method name="showReplicated" args="dset">
  <![CDATA[
    submitbutton.setBGColor(0xcccccc);
    var y = 0;
    var x = 0; 
    // max dimension
    var dim = 100;
    var photos = dset.data.childNodes[0];
    Debug.write('photos =', photos.nodeName, photos.childNodes.length);
    if (photos != null) {
        var nphotos = photos.childNodes.length;
        var rows = Math.floor(Math.sqrt(nphotos));
        var xpad = 12;
        var ypad = 30;
        if (dset.lastloaded) dset.lastloaded.animate('opacity', 0, 500);
            dset.lastloaded = new LzView(canvas, {y: 20, width: 1000, height: 1000});
        for (var j = 0; j < 5; j++) {
            for (var i = 0;  i < 4; i++) {
                var photo = photos.childNodes[(j * rows) + i];
                if (photo) {
                    x = (dim + xpad) * i;
                    y = ((dim + ypad) * j ) + 35; 
                    var  title = photo.getAttr('title');
                    var  server = photo.getAttr('server');
                    var  secret = photo.getAttr('secret');
                    var id =  photo.getAttr('id');
                    var url = this.getPhoto(server, id, secret, 't');
                    // the only switch for swf or dhtml runtime I could think of at the moment
                    new imgfader( dset.lastloaded, { width: dim, height: dim, resource: url, y: y, x: x});
                    //new  LzText(canvas, { width: dim, height: dim, text: title, y: y+100, x: x});
                } 
            }
        }
    }
]]>
</method>

<!-- 

           src="http://www.flickr.com/services/rest/?method=flickr.photos.search&amp;api_key=a9b8760ee1c7483973e65f0e7dbae710&amp;tags=laszlo" 

http://static.flickr.com/{server-id}/{id}_{secret}.jpg
    or
http://static.flickr.com/{server-id}/{id}_{secret}_[mstb].jpg
    or
http://static.flickr.com/{server-id}/{id}_{secret}_o.(jpg|gif|png)

Size Suffixes

The letter suffixes are as follows:
s   small square 75x75
t   thumbnail, 100 on longest side
m   small, 240 on longest side
-   medium, 500 on longest side
b   large, 1024 on longest side (only exists for very large original images)
o   original image, either a jpg, gif or png, depending on source format

-->

  <dataset name="myphotos" 
           src="http://www.flickr.com/services/rest/?method=flickr.photos.search&amp;api_key=a9b8760ee1c7483973e65f0e7dbae710&amp;tags=yellow" 
           request="true"
           oninit="Debug.write('oninit event handler called');"
           onerror="Debug.write('got dataset onerror event', this);"
           ondata="canvas.showReplicated(this)"
           />

    <class name="imgfader" opacity="0">
        <method event="onload" args="i">
    //        info('load', i);
            this.animate('opacity', 1, 1000);
        </method>
        <method event="onmouseover">
            Debug.write( 'onmouseover', this, this.resource);
            big.load(this.resource);
        </method>
    </class>

    <method name="doSearch" args="key">
    <![CDATA[
        myphotos.setSrc("http://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=a9b8760ee1c7483973e65f0e7dbae710&tags=" +escape(key));
        myphotos.doRequest();
    ]]>
    </method>

    <inputtext id="inp" width="300" name="inp">
        yellow
        <method event="onkeyup" args="k">
            if (k == 13) submitbutton.doSearch();
        </method>
    </inputtext>

    <text id="submitbutton" x="300" height="30" width="100" bgcolor="#cccccc">
        Submit
        <method event="onmousedown">
            this.setBGColor(0xffcccc);
        </method>
        <method event="onmouseup">
            this.setBGColor(0xcccccc);
        </method>
        <method event="onclick" name="doSearch">
            this.setBGColor(0xffcccc);
            canvas.doSearch(inp.getText());
        </method>
    </text>

    <view id="big" x="500" y="40">
        <method name="load" args="r">
            var i = r.indexOf('_t.jpg');
            var s = r.substr(0, i) + '.jpg';
            //info('load', i, s);
            this.setSource(s);
            this.setAttribute('opacity', 0);
        </method>
        <method event="onload">
            //info('onload');
            this.animate('opacity', 1, 500);
        </method>
    </view>

</canvas>
