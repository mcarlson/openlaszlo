<canvas debug="true">
  <include href="lzunit" />

<!--
  covers-tags: lzutils smoketest
-->

  <TestSuite>
    <TestCase>
        <method name="testdectohex">
            assertEquals('ffff', LzColorUtils.dectohex(0xffff), "Convert to hex");
            assertEquals('d', LzColorUtils.dectohex(13), "Convert to hex");
        </method>
        <method name="testcolorconversion">
            assertEquals('#ffff00', LzColorUtils.inttohex(0xffff00), "Convert to hex");
            assertEquals('#0005f3', LzColorUtils.inttohex(1523), "Convert to hex");
            assertEquals('#000001', LzColorUtils.inttohex(1), "Convert to hex");
            assertEquals('#800080', LzColorUtils.inttohex('purple'), "Convert to hex");
            assertEquals('#ff00ff', LzColorUtils.inttohex('rgba(255,0,255)'), "Convert to hex");
            assertEquals('#ff00ffcc', LzColorUtils.inttohex(LzColorUtils.hextoint('#ff00ffcc')), "Hextoint -> Inttohex round trip with alpha");

            assertEquals(1523, LzColorUtils.hextoint('#0005F3'), "Convert to decimal");
            assertEquals(14540253, LzColorUtils.hextoint('#DdD'), "Convert to decimal");
            assertEquals(0xffff00, LzColorUtils.hextoint('#ffff00'), "Convert to decimal");
            assertEquals(0xffff00, LzColorUtils.hextoint('0xffff00'), "Convert to decimal");
            assertEquals(0x800080, LzColorUtils.hextoint('purple'), "Convert to decimal");
            assertEquals(0xff00ff, LzColorUtils.hextoint('rgb(255,0,255)'), "Convert to decimal");
            assertEquals(16776960.002, LzColorUtils.hextoint('#ffff0033'), "Convert to decimal");
            assertEquals(16711935.008, LzColorUtils.hextoint(LzColorUtils.inttohex(16711935.008)), "Inttohex -> Hextoint round trip with alpha");

            assertEquals('rgb(221,221,221)', LzColorUtils.torgb('#DDD'), "Convert to RGB");
            assertEquals('rgb(221,221,221)', LzColorUtils.torgb('#DDDDDD'), "Convert to RGB");
            assertEquals('rgba(204,204,204,0.8)', LzColorUtils.torgb('#CCCC'), "Convert to RGB");
            assertEquals('rgba(204,204,204,0.8)', LzColorUtils.torgb('#CCCCCCCC'), "Convert to RGB");
            assertEquals('rgb(128,0,128)', LzColorUtils.torgb('purple'), "Convert to RGB");
            assertEquals('rgb(255,0,255)', LzColorUtils.torgb('rgb(255,0,255)'), "Convert to RGB");

            assertEquals(0xdddddd, LzColorUtils.fromrgb('rgb(221,221,221)'), "Convert from RGB");
            assertEquals(14540253.01, LzColorUtils.fromrgb('rgb(221,221,221,1)'), "Convert from RGB");
            assertEquals(0x800080, LzColorUtils.fromrgb('purple'), "Convert from RGB");
            assertEquals(0xff00ff, LzColorUtils.fromrgb('rgb(255,0,255)'), "Convert from RGB");
            var hsv = LzColorUtils.tohsv(0xff00ff);
            assertEquals(300, hsv.h, "Convert tohsv .h");
            assertEquals(1, hsv.s, "Convert tohsv .s");
            assertEquals(1, hsv.v, "Convert tohsv .v");
            assertEquals(8323199, LzColorUtils.fromhsv(300, 1, .5), "Convert fromhsv ");
            hsv = LzColorUtils.tohsv('#ff00ff');
            assertEquals(300, hsv.h, "Convert tohsv .h");
            assertEquals(1, hsv.s, "Convert tohsv .s");
            assertEquals(1, hsv.v, "Convert tohsv .v");
            assertEquals(8323199, LzColorUtils.fromhsv(300, 1, .5), "Convert fromhsv ");
        </method>
        <method name="addTests"> 
            this.addTest("testdectohex");
            this.addTest("testcolorconversion");
        </method> 
    </TestCase>

  </TestSuite>

</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2007-2010 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
