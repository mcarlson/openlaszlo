<canvas width="1800" height="600" debug="true">

    <debug fontsize="14" x="300" y="20" width="800" height="400" oninit="Debug.showInternalValues=true"/>

    <include href="rpc/sessionrpc.lzx" />

    <dataset name="idDset" />

    <sessionrpc id="session">

        <method event="onload">
            Debug.write('session object loaded');
        </method>        

        <method event="ondata" args="data">
            Debug.write("default ondata:", data);
        </method>

        <method event="onerror" args="error">
            Debug.write("default onerror:", error);
        </method>

        <remotecall funcname="getId" />

        <remotecall name="getIdWithDset" funcname="getId" dataobject="$once{idDset}" />

        <remotecall funcname="getMaxInactiveInterval">
          <method event="ondata" args="data">
            Debug.write("remotecall ondata handler data=", data);
          </method>
        </remotecall>

        <remotecall funcname="invalidate" />

        <remotecall funcname="isNew" />

        <remotecall funcname="setMaxInactiveInterval">
            <param value="15" />
        </remotecall>

        <remotecall name="setmyattr" funcname="setAttribute">
            <param value="'myattr'" />
            <param value="'MY ATTRIBUTE'" />
        </remotecall>

        <remotecall name="setmyother" funcname="setAttribute">
            <param value="'myother'" />
            <param value="'MY OTHER'" />
        </remotecall>

        <remotecall name="getmyattr" funcname="getAttribute">
            <param value="'myattr'" />
        </remotecall>

        <remotecall name="getmyother" funcname="getAttribute">
            <param value="${'myother'}" />
        </remotecall>

        <remotecall funcname="getAttributeNames" />

        <remotecall name="removemyattr" funcname="removeAttribute">
            <param value="'myattr'" />
        </remotecall>

        <remotecall name="removemyother" funcname="removeAttribute">
            <param value="'myother'" />
        </remotecall>

    </sessionrpc>


    <view layout="spacing: 5">
        <button text="load session" onclick="session.load()" />

        <button text="getId" onclick="session[this.text].invoke()" />
        <button text="getIdWithDset" onclick="session[this.text].invoke()" />
        <view height="20" width="50">
            <text datapath="idDset:/text()" width="240" bgcolor="red"/>
        </view>
        <button text="getMaxInactiveInterval" onclick="session[this.text].invoke()" />
        <button text="invalidate" onclick="session[this.text].invoke()" />
        <button text="isNew" onclick="session[this.text].invoke()" />
        <button text="setMaxInactiveInterval" onclick="session[this.text].invoke()" />
        <button text="clear debug window " onclick="Debug.clear()" />

        <view x="20" layout="spacing: 5">

            <attribute name="myDel" value="null" type="expression" />

            <method event="oninit">
                this.myDel = new LzDelegate(this, 'myhandler');
            </method>

            <method name="myhandler" args="data">
                Debug.write('myhandler:', data);
            </method>

            <button text="setmyattr" onclick="session[this.text].invoke()" />

            <button text="setmyother" onclick="session[this.text].invoke()" />

            <button text="getmyattr" onclick="session[this.text].invoke()" />

            <button text="getmyother" onclick="session[this.text].invoke()" />

            <button text="getmyattr (w/params)" onclick="session.getmyattr.invoke(['myattr'])" />

            <button text="getmyattr (w/params and delegate)">
                <method event="onclick">
                    session.getmyattr.invoke(['myattr'], parent.mydel);
                </method>
            </button>

            <button text="getAttributeNames" onclick="session[this.text].invoke()" />

            <button text="removemyattr" onclick="session[this.text].invoke()" />

            <button text="removemyother" onclick="session[this.text].invoke()" />

        </view>
    </view>
</canvas>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2007 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
