<?xml version="1.0" encoding="UTF-8" ?>
<!-- * X_LZ_COPYRIGHT_BEGIN *************************************************
* Copyright 2006 Laszlo Systems, Inc.  All Rights Reserved.                 *
* Use is subject to license terms.                                          *  
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- this connects to the oflaDemo app that ships with red5
     contributed by Sebastian Wagner, modified by Sarah Allen
     TODO: this still doesn't work.  Bugs and it needs to resources 
     that aren't from red5 repository.
     TODO: create a Flash Media Server version for compatibility test  -->
<canvas debug="true" width="600" height="500">

  <include href="components/rtmpstatus.lzx"/>
  <include href="extensions/rtmpconnection.lzx"/>
  <include href="extensions/videoview.lzx"/>
  <include href="videocontrolbar.lzx"/>
  
  
  
  <!-- 
  #############
      Class videolistitem
      just for simple Output
  #############
   -->
  <class name="videolistitem" extends="view" bgcolor="0xCCCCCC"
       onmouseover="this.setBGColor(0xEEEEEE)" onmouseout="this.setBGColor(0xCCCCCC)" >
      <attribute name="nametext" value="defaulttext" type="string"/>
      <attribute name="lastModified" value="defaulttext" type="string"/>
      <attribute name="size" value="defaulttext" type="string"/>
      <attribute name="value" value="defaultvalue" type="string" />
      <text text="${ parent.nametext }" width="120" />
      <text text="${ parent.lastModified }" x="120" width="120" />
      <text text="${ parent.size }" x="240" width="120" />
      <method event="onclick">
          Debug.write("canvas.isstarted: ",canvas.isstarted);
          if (!canvas.isstarted){
              canvas.isstarted=true;
               this.fadeDelegate = new LzDelegate( canvas, "reset" );
            LzTimer.addTimer( this.fadeDelegate, 1000 );    
        }
          Debug.write("this.value: ",this.value);
        v.setUrl(this.value);
          v.stream.play();
      </method>
  </class>
  
  <!-- 
  #############
  Connection and Callbacks
  #############
   -->
  <rtmpconnection id="rtc" autoconnect="false" debug="true">
      <method event="onconnect">
          Debug.write("this.onconnect",this);
          rtc.getList.call();
      </method>
      <method event="onerror" args="error">
          Debug.write("------------> this.onerror",error);
      </method>
      
      <netremotecall name="getList" funcname="demoService.getListOfAvailableFLVs">
        <method name="onResult" args="value">
            Debug.write("val: ",value);
            videolist.reset();
            for (eg in value){
                Debug.write("value[eg]",value[eg]["name"]);
                Debug.write("value[eg]",value[eg]["lastModified"]);
                Debug.write("value[eg]",value[eg]["size"]);
                videolist.addItem(value[eg]["name"],value[eg]["lastModified"],value[eg]["size"],value[eg]["name"]);
            }
        </method>    
      </netremotecall>
      
      <netremotecall name="getTest" funcname="demoService.getTestFunctionParams">
          <netparam >
            <method event="getValue">
                return "one";
            </method>      
          </netparam>
          <netparam >
            <method event="getValue">
                return "two";
            </method>          
          </netparam>
        <method name="onResult" args="value">
            Debug.write("val: ",value);
        </method>              
      </netremotecall>
            
  </rtmpconnection>
  
  
  <!-- #############   
  Connection URL and Connect Button
  ############# -->
  <view layout="axis:x; inset:10; spacing:10">
    <inputtext width="200" bgcolor="0xffff55"  id="srcurl" 
                text="rtmp://localhost/oflaDemo" />
    <rtmpstatus/>
  </view>
  <button x="10" y="20" height="20">Connect
      <method event="onclick">
          rtc.setAttribute('src', srcurl.text);
          rtc.connect();
      </method>
  </button> 

  
  
  <!-- 

  #############
      Videolist
  #############
   -->  
  <view id="videolist" y="60" width="320" height="100" clip="true">
    <method name="addItem" args="nametext,lastmod,size,value">
        new videolistitem(this._list,{nametext:nametext,lastModified:lastmod,size:size,value:value});
    </method>
    <method name="reset">
        for (eg in this._list.subviews) this._list.subviews[eg].destroy();
    </method>
    <view name="_list" layout="axis:y;spacing:2" />
    <vscrollbar />
  </view> 
  
  

  <view id="vid" bgcolor="black" x="10" y="200" width="248" height="188"
    onmousedown="this.resizer.apply()" onmouseup="this.resizer.remove()">
    <resizestate name="resizer"/> 
    <videoview id="v" x="4" y="4" type="rtmp" debug="true" 
        width="${parent.width-8}" height="${parent.height-8}">   
        <method event="onstatus" args="info">
            Debug.write("1 - onstatus info: ",info);
        </method>
        <method event="onmetadata" args="info">
            Debug.write("1 - onmetadata info: ",info);
            canvas.metainfo.metainfo.text += "### New File ###\n";
               canvas.metainfo.metainfo.setText(canvas.metainfo.metainfo.text);
            for (eg in info){
                Debug.write(info[eg]);
                Debug.write(canvas.metainfo.metainfo);
                canvas.metainfo.metainfo.text += eg + ":"+info[eg]+"\n";
                canvas.metainfo.metainfo.setText(canvas.metainfo.metainfo.text);
            }
        </method>   
        <method event="onstart">
            Debug.write("start");
        </method>     
        <method event="onstop">
            Debug.write("stop");
        </method>                     
    </videoview>
  </view>
  
      <text name="defaultFPS" text="FPS: 0" width="120" 
            x="10" y="${vid.y+vid.height+5}" />
      <attribute name="isstarted" value="false" type="boolean" />
    <method name="reset">
           this.fadeDelegate = new LzDelegate( this, "reset" );
           LzTimer.addTimer( this.fadeDelegate, 1000 );            
        this.defaultFPS.setText("FPS: "+( Math.round(v.stream.fps) ));
    </method>
    
    <videocontrolbar x="370" y="60" />
    
    <view name="metainfo" x="370" y="90" width="220" height="300" clip="true">
        <text name="metainfo" width="220" multiline="true" />
        <vscrollbar />
    </view>
    
  <button x="400" y="0" height="20">refresh List
      <method event="onclick">  
          rtc.getList.call();
      </method>
  </button>    
  <button x="400" y="20" height="20">Call Methdod getTest
      <method event="onclick">  
          rtc.getTest.call();
      </method>
  </button>
  
  
</canvas>


