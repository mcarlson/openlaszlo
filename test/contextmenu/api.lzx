<canvas width="100%" height="80%" >
  <simplelayout/>

  <handler name="oninit">
    // Test install of custom menu on the Canvas
    var nm = new LzContextMenu();
    var item1 = nm.makeMenuItem('Canvas Hello', function () { Debug.write("Hi, I'm this canvas", this); } );
    nm.addItem(item1);
    this.setDefaultContextMenu(nm);
    Debug.write("setting new contextmenu on canvas from api.lzx");
  </handler>


<view width="100" height="100" bgcolor="#cccccc" name="v1">
  <handler name="oninit">
    var cm = new LzContextMenu();
    // Set up a LzDelegate as a callback 
    var item1 = cm.makeMenuItem('Item1', new LzDelegate(this, "handlerightclick"));
    cm.addItem(item1);

    var item2 = cm.makeMenuItem('Item2 (disabled)', new LzDelegate(this, "handlerightclick"));
    item2.setEnabled(false);
    cm.addItem(item2);

    var item3 = cm.makeMenuItem('Item3', new LzDelegate(this, "handlerightclick"));
    item3.setSeparatorBefore(true);
    cm.addItem(item3);

    var item4 = cm.makeMenuItem('Show Dialog', new LzDelegate(this, "handlerightclick"));
    cm.addItem(item4);
    // Menu items generate a "onselect" when they are selected
    new LzDelegate(this, "showdialog", item4, "onselect");

    this.setContextMenu(cm);

    // "onmenuopen" event is to a LzContextMenu soon as the menu gets a mousedown on the right button.
    // This gives you a chance to (quickly) rearrange the menu on the fly.
    new LzDelegate(this, "menuselected", cm, "onmenuopen");

    // "onselect" event is sent to an LzContextMenuItem when it is selected from the menu
    new LzDelegate(this, "menuitemselected", item1, "onselect");

    Debug.write(cm);
  </handler>

  <method name="menuselected" args="val">
    Debug.write("A context menu was opened with a right click, menu = ", val.items);
  </method>

  <method name="menuitemselected" args="val">
    Debug.write("A right click on an item was detected, item = ", val.cmenuitem.caption);
  </method>

  <method name="handlerightclick" args="val">
    Debug.write("handle item handlerightclick, val=", val.cmenuitem.caption);
  </method>

  <method name="showdialog">
    md.open();
  </method>

  

</view>




<modaldialog id="md" width="200" height="200">
  <simplelayout/>
  <text>This is your dialog</text>
  <button onclick="md.close()" isdefault="true">OK</button>
</modaldialog>


</canvas>
<!-- 
/* X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2007, 2008 Laszlo Systems, Inc.  All Rights Reserved.          *
* Use is subject to license terms.                                        *
* X_LZ_COPYRIGHT_END ******************************************************/
-->
