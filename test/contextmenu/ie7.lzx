<canvas width="100%" height="80%" >
  <debug  fontsize="12"/>


 <handler name="oninited">
   LzTimeKernel.setTimeout(function () {
     if (lz.Instantiator.isUpdating) {
       // If the instantiator is still running, just requeue ourselves
       LzTimeKernel.setTimeout(arguments.callee, 10 * 1000);
     } else {
       // Wait a bit for things to settle
       LzTimeKernel.setTimeout(function () {
         myoutput.bringToFront();
         myoutput.format("LzIdleKernel.__callbacks: %w\n", LzIdleKernel.__callbacks);
         myoutput.addFormat("lz.Idle.coi: %w\n", lz.Idle.coi);
         if ($profile) {
           Profiler.stop();
           myoutput.addFormat("Starting profiling...");
           Profiler.start();
           // Profile for 40 seconds
           LzTimeKernel.setTimeout(function () {
             Profiler.stop();
             myoutput.addFormat(" done!\n");
           }, 40 * 1000);
         }
       }, 10 * 1000);
     }
   }, 10 * 1000);
 </handler>

<text id="myoutput" multiline="true" />

<simplelayout/>
  <view id="mv" width="100" height="100" bgcolor="#cccccc">
    <method name="init">
      <![CDATA[
      super.init();
      var cm = new lz.contextmenu(this, {name:"contextMenu"});
      cm.addItem(new lz.contextmenuitem("Mark as not Spam", null));
      var del = new lz.contextmenuitem("Print Message...", null);
      cm.addItem(del);
      del.setAttribute('separatorbefore', true);
      ]]>
    </method>

  </view>


</canvas>
<!-- 
/* X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2009 Laszlo Systems, Inc.  All Rights Reserved.          *
* Use is subject to license terms.                                        *
* X_LZ_COPYRIGHT_END ******************************************************/
-->
