<!-- Copyright 2001-2008 Laszlo Systems, Inc.  All Rights Reserved. --> 
<library>    
    <include href="lzunit" />
    <stylesheet>
        baseclass {
            prop1: 10;
            prop2: 100;
        }
        
        subclass {
            prop2 : 20;
            prop3 : 200;
        }

        subsubclass {
            prop3 : 30;
            prop4 : 300;
        }

        #subID {
            prop5 : 40;
        }

        #subsubID {
            prop6 : 50;
        }

        [name="subName"] {
            prop7 : 60;
        }

        [name="subsubName"] {
            prop8 : 70;
        }
    </stylesheet>

    <class name="baseclass"/>
    <class name="subclass"/>
    <class name="subsubclass"/>

    <baseclass>
        <subclass>
            <subsubclass>
                <subclass name="subName">
                    <subclass name="subsubName">
                        <subclass id="subID">
                            <subsubclass id="subsubID">

                            </subsubclass>

                        </subclass>
                    </subclass>

                </subclass>
            </subsubclass>
        </subclass>
    </baseclass>


    <class name="ConstraintSpeedTestCase" extends="TestCase">

        <attribute name="iter" value="50"/>

        <method name="getCSSProp" args="n, prop">
            var cssStyle = LzCSSStyle.getComputedStyle( n );
            return cssStyle.getPropertyValue( prop ); 
        </method>
        
        <!-- Descendant selectors test -->        
        <method name="testLookupTimes"><![CDATA[
            var t = getTimer();
            for ( var i = iter; i >= 0; i-- ){
                assertEquals( 10, this.getCSSProp( subsubID, "prop1" ));
                assertEquals( 20, this.getCSSProp( subsubID, "prop2" ));
                assertEquals( 30, this.getCSSProp( subsubID, "prop3" ));
                assertEquals( 300,this.getCSSProp( subsubID, "prop4" ));
                assertEquals( 40, this.getCSSProp( subsubID, "prop5" ));
                assertEquals( 50, this.getCSSProp( subsubID, "prop6" ));
                assertEquals( 60, this.getCSSProp( subsubID, "prop7" ));
                assertEquals( 70, this.getCSSProp( subsubID, "prop8" ) );
            }
            var tt = getTimer() - t ;
            assertTrue(1 < tt );
            Debug.write( 'Lookup test took: ' + tt );
        ]]></method>

        <method name="makeSomeNodes">
            for ( var i = iter; i > 0; i-- ){
                new lz.node( subsubID );

            }
            assertEquals( iter, subsubID.subnodes.length );
        </method>
    </class>
</library>
