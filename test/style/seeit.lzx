<!-- Copyright 2006 Laszlo Systems --> 
<library>

<script src="seeit_css.js" />

<include href="designerview.lzx" />

<view height="20" width="20" /> <!-- spacer --> 

<view x="20" y="20" width="200" height="200" id="gContainer" >
    <wrappinglayout/>
    <designerview id="gDV1" />
    <designerview id="gDV2" />
    <designerview id="gDV3" />    
    <designerview id="gDV4" />    
    <designerview id="gDV5" />
    <designerview id="gDV6" />
    <designerview id="gDV7" />    
    <designerview id="gDV8" />    

</view>

<testsuite name="seeit" loglevel="log">
    <handler name="oninit">
        this.addTest( "viewExists" );
        this.addTest( "styleExists" );          
        this.addTest( "styleBuiltInAttr" );
        this.addTest( "noStylesForMe" );     
        this.addTest( "implicitStyling" ); 
        this.addTest( "styleClassProperty");
        this.addTest( "styleChildViewProperty");   
        this.run();
    </handler>
      
    <method name="viewExists">
        this.assertNotNull( designerview )
        this.assertNotUndefined( gDV1 )
        this.finishedTest( "viewExists" );
    </method>

    <method name="styleExists">
        var cssd = LzCSSStyle.getComputedStyle( gDV2 );
        this.assertNotNull( cssd );
        this.assertTrue( cssd instanceof LzCSSStyleDeclaration );
        this.assertEquals( 70, cssd.getPropertyValue( "width" ) );      
        this.finishedTest( "styleExists" );
    </method>
      
    <method name="styleBuiltInAttr">
        this.assertEquals( 70, gDV2.getAttribute("width") );
        this.assertEquals( 37, gDV2.getAttribute("height") );        
        this.assertUndefined( gDV2.getAttribute("nonsense"));        
        this.finishedTest( "styleBuiltInAttr" ); 
    </method>
      
    <method name="noStylesForMe">
        this.assertEquals( 50, gDV3.getAttribute("width") );
        this.assertEquals( 50, gDV3.getAttribute("height") );        
        this.assertUndefined( gDV3.getAttribute("nonsense"));
        this.finishedTest( "noStylesForMe" ); 
    </method> 

    <method name="implicitStyling">
        // Note that we are not explicitly calling applyCSS here
        this.assertEquals( 77, gDV4.getAttribute("width") );
        this.assertEquals( 66, gDV4.getAttribute("height") );        
        this.assertUndefined( gDV3.getAttribute("nonsense"));
        this.finishedTest( "implicitStyling" ); 
      </method>           

    <method name="styleClassProperty">
        this.assertEquals( 3, gDV5.getAttribute("borderwidth"));
        this.assertEquals( 0x474e49, gDV5.getAttribute("bordercolor"));
        this.assertEquals( 0x474e49, gDV5.outerborder.getAttribute("bgcolor"));
        this.finishedTest( "styleClassProperty" ); 
    </method>         
          
    <method name="styleChildViewProperty">
        this.assertEquals( 0x8e8d87, gDV6.getAttribute("innercolor"));
        this.assertEquals( 0x8e8d87, gDV6.outerborder.innerbox.getAttribute("bgcolor"));
        this.finishedTest( "styleChildViewProperty" ); 
    </method>     


</testsuite>
</library>