<library>
    <stylesheet>
        #gBonk {
            styledresource: "test.png"; 
        }

        [name="monkresource"] {
            cssimage: "monk.jpg"; 
        }

    </stylesheet>

    <simplelayout axis="y" spacing="30"/>
    <view id="gJason" resource="test.png" />

    <!-- the resource used by the following view, missing.png,
      does not exist, so this line, if uncommented, would cause a
       compilation error. That is the correct behavior. -->
    <!-- view id="gLorem" resource="missing.png" -->

    <view id="gBonk" source="$style{'styledresource'}" />

    <!-- this should give a warning -->
    <view id="gMissing" source="$style{'nostyledefined'}" />

    <resource name="niceresource" src="test.png" />
    <view id="gMarsh" resource="niceresource" />

    <!-- this should give us an error, because monkimagefile is undefined.
         indeed, we do get an error if this line is uncommented. -->         
    <!-- resource name="monkresource" src="$style{'monkimagefile'}" -->
    <!-- if we give a null value for the resource's src attribute, we
       get a compiler warning, which is correct behavior. -->
    <resource name="monkresource" src="" />
    <view id="gMonk" resource="monkresource" />

    <resource name="jimresource" src="test.png" />
    <view id="gJim" resource="jimresource" />

    <!-- Making the resource reference a source file which doesn't exist
     gives a compiler error. This is correct behavior. Uncomment the
     following line to manifest this error. -->
    <!-- resource name="sillyresource" src="idontexist.png" -->
    
    <!-- it is correct to get a compilation warning here 
    "The resource named 'sillyresource' has not been declared" -->
    <view id="gSilly" resource="sillyresource" />
    
    <class name="ResourceTestCase" extends="TestCase">
        <!-- Descendant selectors test -->
        <method name="testFoundResource">
            assertTrue( "test.png", gJason.getAttribute("resource") );
            assertEquals( 77, gJason.getAttribute("resourceheight") );
            assertEquals( 206, gJason.getAttribute("resourcewidth") );

            assertTrue( 77, gMarsh.getAttribute("resourceheight") );
            assertTrue( 206, gMarsh.getAttribute("resourcewidth") );

            assertTrue( 77, gJim.getAttribute("resourceheight") );
            assertTrue( 206, gJim.getAttribute("resourcewidth") );
        </method>

        <method name="testFoundStyledResource">
            // gBonk should be just like gJason, but gBonk is styled with CSS
            assertTrue( "test.png", gBonk.getAttribute("resource") );
            assertEquals( 77, gBonk.getAttribute("resourceheight") );
            assertEquals( 206, gBonk.getAttribute("resourcewidth") );             
        </method>

    </class>

</library>
<!-- Copyright 2007 Laszlo Systems -->       
   
