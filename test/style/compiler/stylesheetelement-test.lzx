<!-- Copyright 2007-2008 Laszlo Systems -->
<library>
    <stylesheet>
        designerview {
            width: 279;
            miscdata: "uc berkeley";
            innercolor: #FF0000;
        }
        
        [name='Philip'] {
            miscdata: "rules in external1.css should win over this rule";
        }
        

    </stylesheet>

    <stylesheet src="external1.css" />
    <stylesheet src="external2.css" />
    
    <include href="nicelibraryfile.lzx" />
    
    <class name="StylesheetTestCase" extends="TestCase">
        <text text="this file tests what happens when we include an inline stylesheet, and a src= stylesheet" />

    
    <!-- this should cause a compiler error, and does -->
    <!-- 
    <stylesheet src="idontexist.css">
        bad {
            should: "not"; 
        }
    </stylesheet>  
    -->
    <!-- this should cause a compiler error, and does -->
    <!--   <stylesheet></stylesheet> --> 
    

    <view>
        <simplelayout axis="x" spacing="2" />
        <!-- this view is styled by the element selector "designerview" 
            declared in the inline stylesheet above --> 
        <designerview id="gPlainDV" />
    
        <!-- these two views are styled by external1.css --> 
        <designerview name="Philip" id="gPhilip" />
        <designerview name="George" id="gGeorge" />

        <!-- these two views are styled by external2.css -->
        <designerview id="gGroove" group="groovy" />
        <designerview id="gYuck" group="yucky" />  
    
        <designerview id="mynewfun" />
    </view>

     <method name="testPlain">
         assertEquals( 279, gPlainDV['width'] );
         assertEquals( "uc berkeley", gPlainDV["miscdata"]);
     </method>

     <method name="testPhilip">
         assertNotNull( gPhilip );
         assertEquals( 300, gPhilip['width'] );
         assertEquals( "san jose state", gPhilip["miscdata"]);
     </method>

     <method name="testGeorge">
         assertNotNull( gGeorge );
         assertEquals( 200, gGeorge['width'] );
         assertEquals( "somewhere far away", gGeorge["miscdata"]);
     </method>

     <method name="testNonNameAttrs">
         assertEquals( '0x25592c', gGroove["innercolor"] );
         assertEquals( '0xbe6127', gYuck["innercolor"] );            
     </method>

     <method name="testLibrary">
         assertEquals( '0x004499', gBiblio["innercolor"] );
     </method>


        <method name="addTests">
          for (var t in {testPlain: true, testPhilip: true, testGeorge: true, testNonNameAttrs: true, testLibrary: true}) {
            this.addTest(t);
          }
        </method>

</class>
</library>
