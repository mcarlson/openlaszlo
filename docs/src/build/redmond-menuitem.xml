<?xml version="1.0" encoding="UTF-8"?>
<element category="Menu and Command" extends="view.xml" filename="menuitem.html" tier="Redmond Component" title="Menuitem">
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<desc>An item in a pull-down menu.</desc><longdescription>
&lt;p&gt;
Note: Redmond components are deprecated.  Please consider using LZ Components.
If you use this component, you must explicitly include the redmond library: &lt;br/&gt;
&amp;lt;include href="redmond"/&amp;gt;
&lt;/p&gt;
&lt;p&gt;
	&lt;b&gt;Description:&lt;/b&gt;&lt;br/&gt;
	The &lt;tt&gt;menuitem&lt;/tt&gt; tag provides a menuitem within the &lt;tt&gt;menu&lt;/tt&gt; tag, and must be declared within an instance of &lt;tt&gt;menu&lt;/tt&gt;. To associate command keys with a &lt;tt&gt;menuitem&lt;/tt&gt; use the &lt;tt&gt;commmand&lt;/tt&gt; tag to create a command object
	and then pass that to the &lt;tt&gt;menuitem&lt;/tt&gt; using its command attribute.
&lt;/p&gt;
&lt;p&gt;
	&lt;b&gt;Example:&lt;/b&gt;&lt;br/&gt;
	&lt;pre&gt;
&amp;lt;canvas height="160" debug="true"&amp;gt;
    &amp;lt;debug x="200"/&amp;gt;
    &amp;lt;include href="redmond"/&amp;gt;

    &amp;lt;command id="cmd_open"
             onselect="Debug.write('Executed open command')"
             key="['Control','Shift','O']"/&amp;gt;

    &amp;lt;menubar width="200" height="25"&amp;gt;
        &amp;lt;menu label="Menu" hasbutton="true"  &amp;gt;
            &amp;lt;menuitem label="menuitem basic" onselect="canvas.whichOne(this);"/&amp;gt;  
            &amp;lt;menuitem label="menuitem w/command" command="cmd_open" /&amp;gt;  
            &amp;lt;menuitem label="menuitem w/submenu" onselect="canvas.whichOne(this);"&amp;gt;
                &amp;lt;menu label="submenu" &amp;gt; &amp;lt;!-- submenu label not displayed --&amp;gt;
                    &amp;lt;menuitem label="Item 1" onselect="canvas.whichOne(this);"/&amp;gt;
                    &amp;lt;menuitem label="Item 2" onselect="canvas.whichOne(this);"/&amp;gt;
                    &amp;lt;menuitem label="Item 3" onselect="canvas.whichOne(this);"/&amp;gt;
                &amp;lt;/menu&amp;gt;
            &amp;lt;/menuitem&amp;gt;
        &amp;lt;/menu&amp;gt;
    &amp;lt;/menubar&amp;gt;

    &amp;lt;method name="whichOne" args="vThis"&amp;gt;
        Debug.write(vThis.label);
    &amp;lt;/method&amp;gt;

&amp;lt;/canvas&amp;gt;
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
	&lt;b&gt;See also:&lt;/b&gt;&lt;br/&gt;
	&lt;TT&gt;command, menu, menubar, menuseparator&lt;/TT&gt;
&lt;/p&gt;
    </longdescription>
    <attributes>
        <attribute category="setter" isvalidintag="true" name="command" tagtype="token" type="token">
			<desc> a reference to a command object </desc>
	    </attribute>
        <attribute category="setter" isvalidintag="true" name="disabled" tagtype="boolean" type="boolean">
			<desc> the default value is FALSE. When set to TRUE, the menuitem is grayed out and the 'onselect' event is not sent when the item is selected.</desc>
	    </attribute>
        <attribute category="setter" isvalidintag="true" name="hasbutton" tagtype="booleanLiteral" type="booleanLiteral"> <desc> the default value is false, and should only be set true, if the parent is a menubar.</desc>
	    </attribute>
		<attribute category="setter" isvalidintag="true" name="label" tagtype="string" type="string">
			<desc>A string specifying the text to be displayed within the menuitem</desc>
		</attribute>
    </attributes>
    <tag name="menuitem" src="tag-menuitem.xml"/>
</element>
