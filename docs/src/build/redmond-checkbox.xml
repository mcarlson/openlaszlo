<?xml version="1.0" encoding="UTF-8"?>
<element category="View" extends="view.xml" filename="checkbox.html" tier="Redmond Component" title="Checkbox">
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<desc>The checkbox tag provides a simple checkbox button.</desc><longdescription>
&lt;p&gt;
Note: Redmond components are deprecated.  Please consider using LZ Components.
If you use this component, you must explicitly include the redmond library: &lt;br/&gt;
&amp;lt;include href="redmond"/&amp;gt;
&lt;/p&gt;

&lt;p&gt;
	&lt;b&gt;Arguments:&lt;/b&gt;&lt;br/&gt;
	&lt;TT&gt;label&lt;/TT&gt;&lt;br/&gt;
	default: &lt;TT&gt;"nul"&lt;/TT&gt;&lt;br/&gt;
	A string specifying the text to be displayed to right of the checkbox.&lt;br/&gt;
	&lt;br/&gt;
&lt;/p&gt;

&lt;p&gt;
	&lt;b&gt;Methods:&lt;/b&gt;&lt;br/&gt;
	&lt;TT&gt;setActive(Boolean)&lt;/TT&gt;&lt;br/&gt;
	default: &lt;TT&gt;false&lt;/TT&gt;&lt;br/&gt;
	Sets the active state of the checkbox. Without an argument, &lt;TT&gt;setActive&lt;/TT&gt; defaults to deactivating the checkbox. The current state is returned by the &lt;TT&gt;amActive&lt;/TT&gt; property.&lt;br/&gt;
	&lt;br/&gt;
	&lt;TT&gt;gotPress()&lt;/TT&gt;&lt;br/&gt;
	Toggles the state of the checkbox.&lt;br/&gt;
	&lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
	&lt;b&gt;Properties:&lt;/b&gt;&lt;br/&gt;
	&lt;TT&gt;amActive&lt;/TT&gt;&lt;br/&gt;
	default: &lt;TT&gt;true&lt;/TT&gt;&lt;br/&gt;
	The &lt;TT&gt;amActive&lt;/TT&gt; property returns the Boolean value of the 'active' state of the checkbox. A value of &lt;TT&gt;TRUE&lt;/TT&gt; means the checkbox is enabled and can be toggled by clicking it. A value of &lt;TT&gt;FALSE&lt;/TT&gt; grays out the box but does not change the &lt;TT&gt;amChecked&lt;/TT&gt; state. This property can be retrieved but not set.&lt;br/&gt;
	&lt;br/&gt;
	&lt;TT&gt;amChecked&lt;/TT&gt;&lt;br/&gt;
	default: &lt;TT&gt;false&lt;/TT&gt;&lt;br/&gt;
	The &lt;TT&gt;amChecked&lt;/TT&gt; property returns the Boolean value of the 'checked' state of the checkbox. A value of &lt;TT&gt;TRUE&lt;/TT&gt; means the checkbox has a checkmark in it. A value of &lt;TT&gt;FALSE&lt;/TT&gt; means the checkbox is empty.&lt;br/&gt;
	&lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
	&lt;b&gt;Description:&lt;/b&gt;&lt;br/&gt;
	The &lt;TT&gt;checkbox&lt;/TT&gt; tag provides a simple checkbox button. You can disable it using the &lt;TT&gt;setActive&lt;/TT&gt; property.
&lt;/p&gt;
&lt;p&gt;
	&lt;b&gt;Example:&lt;/b&gt;&lt;br/&gt;
	&lt;pre&gt;
&amp;lt;canvas height="120" debug="true"&amp;gt;
    &amp;lt;include href="redmond"/&amp;gt;
    &amp;lt;debug x="100"/&amp;gt;
	&amp;lt;checkbox id="checkMe" label="Check me" /&amp;gt;

	&amp;lt;button label="Toggle" onclick= "checkMe.gotPress();"/&amp;gt;
	&amp;lt;button label="Disable" onclick= "checkMe.setActive();"/&amp;gt;
	&amp;lt;button label="Enable" onclick= "checkMe.setActive(true);"/&amp;gt;
	&amp;lt;button label="status" onclick= "Debug.write('amChecked: '+checkMe.amChecked);"/&amp;gt;
	&amp;lt;simplelayout axis="y" spacing="4"/&amp;gt;
&amp;lt;/canvas&amp;gt;
	&lt;/pre&gt;
&lt;/p&gt;
</longdescription><attributes><attribute category="setter" isvalidintag="true" name="label" tagtype="string" type="string"/><attribute category="setter" isvalidintag="true" name="labelwidth" tagtype="expression" type="expression"/></attributes><tag name="checkbox" src="tag-checkbox.xml"/></element>
